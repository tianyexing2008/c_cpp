<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-marshal-recursive_8c" kind="file" language="C++">
    <compoundname>dbus-marshal-recursive.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-marshal-recursive_8h" local="yes">dbus-marshal-recursive.h</includes>
    <includes refid="dbus-marshal-basic_8h" local="yes">dbus-marshal-basic.h</includes>
    <includes refid="dbus-signature_8h" local="yes">dbus-signature.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <incdepgraph>
      <node id="1655">
        <label>dbus-signature.h</label>
        <link refid="dbus-signature_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
      </node>
      <node id="1649">
        <label>stdarg.h</label>
      </node>
      <node id="1636">
        <label>dbus/dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="1637" relation="include">
        </childnode>
        <childnode refid="1638" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1644" relation="include">
        </childnode>
      </node>
      <node id="1635">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="1639">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="1645">
        <label>stdint.h</label>
      </node>
      <node id="1651">
        <label>sys/poll.h</label>
      </node>
      <node id="1654">
        <label>dbus-marshal-basic.h</label>
        <link refid="dbus-marshal-basic_8h_source"/>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1642" relation="include">
        </childnode>
        <childnode refid="1648" relation="include">
        </childnode>
      </node>
      <node id="1644">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="1633" relation="include">
        </childnode>
        <childnode refid="1645" relation="include">
        </childnode>
        <childnode refid="1646" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
        <childnode refid="1647" relation="include">
        </childnode>
        <childnode refid="1648" relation="include">
        </childnode>
        <childnode refid="1650" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
      </node>
      <node id="1637">
        <label>dbus/dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="1638" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
        <childnode refid="1644" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
      </node>
      <node id="1640">
        <label>stddef.h</label>
      </node>
      <node id="1648">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1638" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
      </node>
      <node id="1642">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
      </node>
      <node id="1650">
        <label>string.h</label>
      </node>
      <node id="1653">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
      </node>
      <node id="1652">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1653" relation="include">
        </childnode>
      </node>
      <node id="1632">
        <label>dbus-marshal-recursive.c</label>
        <link refid="dbus-marshal-recursive.c"/>
        <childnode refid="1633" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1637" relation="include">
        </childnode>
      </node>
      <node id="1634">
        <label>dbus-marshal-recursive.h</label>
        <link refid="dbus-marshal-recursive_8h_source"/>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1636" relation="include">
        </childnode>
      </node>
      <node id="1633">
        <label>config.h</label>
      </node>
      <node id="1647">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="1648" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
      </node>
      <node id="1643">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1635" relation="include">
        </childnode>
      </node>
      <node id="1641">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="1640" relation="include">
        </childnode>
        <childnode refid="1642" relation="include">
        </childnode>
      </node>
      <node id="1646">
        <label>inttypes.h</label>
      </node>
      <node id="1638">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1640" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structDBusTypeReaderClass" prot="public">DBusTypeReaderClass</innerclass>
    <innerclass refid="structReplacementBlock" prot="public">ReplacementBlock</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DBusMarshal_1ga2055dc20f1e0c13064cebf1fb65b8ce8" prot="public" static="no">
        <name>RECURSIVE_MARSHAL_READ_TRACE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>turn this on to get deluged in TypeReader verbose spam </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="48" column="9" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga428a18f23d9a4c59560f03fd2088fe7f" prot="public" static="no">
        <name>RECURSIVE_MARSHAL_WRITE_TRACE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>turn this on to get deluged in TypeWriter verbose spam </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="51" column="9" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" prot="public" static="no">
        <name>ARRAY_READER_LEN_POS</name>
        <param><defname>reader</defname></param>
        <initializer>((reader)-&gt;u.array.start_pos - ((int)(reader)-&gt;array_len_offset) - 4)</initializer>
        <briefdescription>
<para>compute position of array length given array_len_offset, which is the offset back from start_pos to end of the len </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="213" column="9" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="213" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DBusMarshal_1ga4e9ff854f7cf79f5523eecd3734020c1" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass body_reader_class</definition>
        <argsstring></argsstring>
        <name>body_reader_class</name>
        <initializer>= {
  &quot;body&quot;, 0,
  FALSE,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, 
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  base_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="634" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga605bd1ee43729d1121fb2efc75fb6d93" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass body_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>body_types_only_reader_class</name>
        <initializer>= {
  &quot;body types&quot;, 1,
  TRUE,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, 
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  base_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="642" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga3423f74e2af6524f4ca68581da374970" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass struct_reader_class</definition>
        <argsstring></argsstring>
        <name>struct_reader_class</name>
        <initializer>= {
  &quot;struct&quot;, 2,
  FALSE,
  struct_or_dict_entry_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  struct_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="650" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1gac191daf0c0844590b96c5f090ef180f0" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass struct_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>struct_types_only_reader_class</name>
        <initializer>= {
  &quot;struct types&quot;, 3,
  TRUE,
  struct_or_dict_entry_types_only_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  struct_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="658" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga364ce4c3498f29c7a192cf4c7375230a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass dict_entry_reader_class</definition>
        <argsstring></argsstring>
        <name>dict_entry_reader_class</name>
        <initializer>= {
  &quot;dict_entry&quot;, 4,
  FALSE,
  struct_or_dict_entry_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  dict_entry_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="666" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga3bf4103e19f4e033fe184e47c4eae653" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass dict_entry_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>dict_entry_types_only_reader_class</name>
        <initializer>= {
  &quot;dict_entry types&quot;, 5,
  TRUE,
  struct_or_dict_entry_types_only_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  dict_entry_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="674" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga02bc906445732ea3c5671d3e3df5c693" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass array_reader_class</definition>
        <argsstring></argsstring>
        <name>array_reader_class</name>
        <initializer>= {
  &quot;array&quot;, 6,
  FALSE,
  array_reader_recurse,
  array_reader_check_finished,
  array_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="682" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga0f5c45d099582cee81f9669f8cc628b0" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass array_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>array_types_only_reader_class</name>
        <initializer>= {
  &quot;array types&quot;, 7,
  TRUE,
  array_types_only_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  array_types_only_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="690" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga9d8972f667975da47ac1e404dda397b6" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass variant_reader_class</definition>
        <argsstring></argsstring>
        <name>variant_reader_class</name>
        <initializer>= {
  &quot;variant&quot;, 8,
  FALSE,
  variant_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  base_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="698" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga94fb907fb7c28c05d532dd5c3945b1e9" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref> *const</type>
        <definition>const DBusTypeReaderClass* const all_reader_classes[]</definition>
        <argsstring>[]</argsstring>
        <name>all_reader_classes</name>
        <initializer>= {
  &amp;body_reader_class,
  &amp;body_types_only_reader_class,
  &amp;struct_reader_class,
  &amp;struct_types_only_reader_class,
  &amp;dict_entry_reader_class,
  &amp;dict_entry_types_only_reader_class,
  &amp;array_reader_class,
  &amp;array_types_only_reader_class,
  &amp;variant_reader_class
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="708" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="708" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusMarshal_1ga73b387e661ca6e9d3299d42883361dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_reader_greater_than</definition>
        <argsstring>(const DBusTypeReader *lhs, const DBusTypeReader *rhs)</argsstring>
        <name>_dbus_type_reader_greater_than</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="35" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1452" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4cbebc086022f332a820b396d446d106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_type_writer_set_enabled</definition>
        <argsstring>(DBusTypeWriter *writer, dbus_bool_t enabled)</argsstring>
        <name>_dbus_type_writer_set_enabled</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="38" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2744" bodyend="2748"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf18c7893f1b11de2e51d9db41ad0c339" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_writer_write_reader_partial</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader, const DBusTypeReader *start_after, int start_after_new_pos, int start_after_new_len, DBusList **fixups)</argsstring>
        <name>_dbus_type_writer_write_reader_partial</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>start_after</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="40" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2674" bodyend="2716"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga06f879bee377de7102fa0cf90a2f979d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_fixups</definition>
        <argsstring>(DBusList **fixups)</argsstring>
        <name>free_fixups</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="54" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="54" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac274fdb6f7a5a1f91ff00041a7598426" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void apply_and_free_fixups</definition>
        <argsstring>(DBusList **fixups, DBusTypeReader *reader)</argsstring>
        <name>apply_and_free_fixups</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="75" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="75" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga09b4a537a8644ef4e67753d2af1cdfd0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int element_type_get_alignment</definition>
        <argsstring>(const DBusString *str, int pos)</argsstring>
        <name>element_type_get_alignment</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="138" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga88a2837e6640e527a93ab63d1e4d8b44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reader_init</definition>
        <argsstring>(DBusTypeReader *reader, int byte_order, const DBusString *type_str, int type_pos, const DBusString *value_str, int value_pos)</argsstring>
        <name>reader_init</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="145" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="145" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae7d2b6d923991a8858b23ea35d757f8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void base_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>base_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="161" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="161" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae83dc4b5e1711493ddd8fe52af2edcaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void struct_or_dict_entry_types_only_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>struct_or_dict_entry_types_only_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="174" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="174" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadbacf5fa11325f5edf639e8dae126d66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void struct_or_dict_entry_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>struct_or_dict_entry_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="188" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="188" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1c2c5d19423cfa1486989cbd645daa62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_types_only_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>array_types_only_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="198" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="198" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga974268d3d22b5bf01ead4d8c3371f055" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int array_reader_get_array_len</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>array_reader_get_array_len</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="217" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="217" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa8ac04df6f47dc554444c6859d09f1eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>array_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="239" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="239" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga018b8333fd3e52614867c25ff6d3d885" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void variant_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>variant_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="274" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="274" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa8b0a083b90242ef8b9978c114d589d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t array_reader_check_finished</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>array_reader_check_finished</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="307" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="307" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5ba2d6518414894b194fc565fdd6321d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void skip_one_complete_type</definition>
        <argsstring>(const DBusString *type_str, int *type_pos)</argsstring>
        <name>skip_one_complete_type</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="324" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_signature_next</definition>
        <argsstring>(const char *type_str, int *type_pos)</argsstring>
        <name>_dbus_type_signature_next</name>
        <param>
          <type>const char *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
<para>Skips to the next &quot;complete&quot; type inside a type signature. </para>        </briefdescription>
        <detaileddescription>
<para>The signature is read starting at type_pos, and the next type position is stored in the same variable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>a type signature (must be valid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>an integer position in the type signature (in and out) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="340" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="340" bodyend="421"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" compoundref="dbus-marshal-basic_8c" startline="1145" endline="1163">_dbus_marshal_skip_array</references>
        <references refid="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" compoundref="dbus-marshal-basic_8c" startline="1077" endline="1133">_dbus_marshal_skip_basic</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" compoundref="dbus-marshal-recursive_8h" startline="41">DBusTypeReader::byte_order</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" compoundref="dbus-marshal-recursive_8h" startline="43">DBusTypeReader::finished</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be">DBusTypeReader::u</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusSignature_1ga898bbc14392cbedc087ce0be68d35c98" compoundref="dbus-signature_8c" startline="112" endline="132">dbus_signature_iter_get_signature</referencedby>
        <referencedby refid="group__DBusSignature_1ga90e48ef4b86180ba033727107b03bd29" compoundref="dbus-signature_8c" startline="164" endline="193">dbus_signature_iter_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5b0f0fe7903016a801424f0f7a190d8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_len_of_complete_type</definition>
        <argsstring>(const DBusString *type_str, int type_pos)</argsstring>
        <name>find_len_of_complete_type</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="424" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="424" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab7450a21babcff2f05fb31c5fafeda1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void base_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>base_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="437" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="437" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6a5ea437a0fdd826dbde78a7cb2f246d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void struct_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>struct_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="502" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="502" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga36593ac5bd49b769ab32913c84397477" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dict_entry_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>dict_entry_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="523" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="523" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga138de786fe16384339aa79f794ae1161" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_types_only_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>array_types_only_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="544" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="544" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4dea44a02ddd53da69c4b0240eb37929" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>array_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="556" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="556" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_init</definition>
        <argsstring>(DBusTypeReader *reader, int byte_order, const DBusString *type_str, int type_pos, const DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_reader_init</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Initializes a type reader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order of the block to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the signature of the block to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location of signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing values block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>start of values block </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="732" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="732" bodyend="749"/>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_init_types_only</definition>
        <argsstring>(DBusTypeReader *reader, const DBusString *type_str, int type_pos)</argsstring>
        <name>_dbus_type_reader_init_types_only</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init()</ref> but the iteration is over the signature, not over values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the signature string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location in the signature string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="760" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="760" bodyend="774"/>
        <references refid="group__DBusInternalsUtils_1ga5627db5e165848477e620846f6414db1" compoundref="dbus-internals_8h" startline="231">_DBUS_INT_MAX</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" compoundref="dbus-marshal-byteswap_8c" startline="222" endline="244">_dbus_marshal_byteswap</referencedby>
        <referencedby refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" compoundref="dbus-marshal-validate_8c" startline="703" endline="747">_dbus_validate_body_with_reason</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_current_type</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_current_type</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Gets the type of the value the reader is currently pointing to; or for a types-only reader gets the type it&apos;s currently pointing to. </para>        </briefdescription>
        <detaileddescription>
<para>If the reader is at the end of a block or end of a container such as an array, returns <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="785" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="785" bodyend="809"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="structDBusTypeReaderClass_1aafa6c7a0dac10c17b46deb2b6dbd4665" compoundref="dbus-marshal-recursive_8c" startline="132">DBusTypeReaderClass::check_finished</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" compoundref="dbus-marshal-recursive_8h" startline="43">DBusTypeReader::finished</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" compoundref="dbus-marshal-recursive_8c" startline="820" endline="830">_dbus_type_reader_get_element_type</referencedby>
        <referencedby refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" compoundref="dbus-marshal-recursive_8c" startline="1360" endline="1397">_dbus_type_reader_set_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" compoundref="dbus-message_8c" startline="2139" endline="2147">dbus_message_iter_get_arg_type</referencedby>
        <referencedby refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" compoundref="dbus-message_8c" startline="2391" endline="2407">dbus_message_iter_get_fixed_array</referencedby>
        <referencedby refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_element_type</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_element_type</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Gets the type of an element of the array the reader is currently pointing to. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s an error to call this if <ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type()</ref> doesn&apos;t return <ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref> for this reader.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="820" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="820" bodyend="830"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga868a7aeddb9b54b2805776b512f68cb4" compoundref="dbus-message_8c" startline="2158" endline="2167">dbus_message_iter_get_element_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_value_pos</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_value_pos</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Gets the current position in the value block. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="837" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="837" bodyend="840"/>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac87315d74386314ec3b148ef737626d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_read_raw</definition>
        <argsstring>(const DBusTypeReader *reader, const unsigned char **value_location)</argsstring>
        <name>_dbus_type_reader_read_raw</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>value_location</declname>
        </param>
        <briefdescription>
<para>Get the address of the marshaled value in the data being read. </para>        </briefdescription>
        <detaileddescription>
<para>The address may not be aligned; you have to align it to the type of the value you want to read. Most of the demarshal routines do this for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_location</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the marshaled value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="852" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="852" bodyend="860"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_read_basic</definition>
        <argsstring>(const DBusTypeReader *reader, void *value)</argsstring>
        <name>_dbus_type_reader_read_basic</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Reads a basic-typed value, as with <ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="869" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="869" bodyend="890"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" compoundref="dbus-marshal-recursive_8h" startline="41">DBusTypeReader::byte_order</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" compoundref="dbus-message_8c" startline="2293" endline="2325">dbus_message_iter_get_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7def93d676d528c261aa274cea41c29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_array_length</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_array_length</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes in the array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader to read from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes in the array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="899" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="899" bodyend="905"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <referencedby refid="group__DBusMessage_1gab8ff47649497b3e0b93a2289f5d3eb23" compoundref="dbus-message_8c" startline="2346" endline="2353">dbus_message_iter_get_array_len</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_read_fixed_multi</definition>
        <argsstring>(const DBusTypeReader *reader, void *value, int *n_elements)</argsstring>
        <name>_dbus_type_reader_read_fixed_multi</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_elements</declname>
        </param>
        <briefdescription>
<para>Reads a block of fixed-length basic values, from the current point in an array to the end of the array. </para>        </briefdescription>
        <detaileddescription>
<para>Does not work for arrays of string or container types.</para><para>This function returns the array in-place; it does not make a copy, and it does not swap the bytes.</para><para>If you ask for <ref refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" kindref="member">DBUS_TYPE_DOUBLE</ref> you will get a &quot;const double*&quot; back and the &quot;value&quot; argument should be a &quot;const double**&quot; and so on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return the array values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return number of array elements </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="923" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="923" bodyend="973"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be">DBusTypeReader::u</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" compoundref="dbus-message_8c" startline="2391" endline="2407">dbus_message_iter_get_fixed_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_recurse</definition>
        <argsstring>(DBusTypeReader *reader, DBusTypeReader *sub)</argsstring>
        <name>_dbus_type_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Initialize a new reader pointing to the first type and corresponding value that&apos;s a child of the current container. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s an error to call this if the current type is a non-container.</para><para>Note that <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> traverses values, not types. So if you have an empty array of array of int, you can&apos;t recurse into it. You can only recurse into each element.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>a reader to init pointing to the first child </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="988" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="988" bodyend="1040"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="structDBusTypeReaderClass_1a7cd297c0e03c5204bc41bf305c7688c9" compoundref="dbus-marshal-recursive_8c" startline="128">DBusTypeReaderClass::id</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1ae9a1b13f853dda37eeaf6acb93879317" compoundref="dbus-marshal-recursive_8c" startline="130">DBusTypeReaderClass::recurse</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" compoundref="dbus-message_8c" startline="2195" endline="2206">dbus_message_iter_recurse</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_next</definition>
        <argsstring>(DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Skip to the next value on this &quot;level&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>e.g. the next field in a struct, the next value in an array. Returns FALSE at the end of the current container.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FALSE if nothing more to read at or below this level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1051" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1051" bodyend="1077"/>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1a9ef686a97bbab3dc264628b62a4d5686" compoundref="dbus-marshal-recursive_8c" startline="133">DBusTypeReaderClass::next</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" compoundref="dbus-marshal-recursive_8c" startline="1091" endline="1098">_dbus_type_reader_has_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga554e9fafd4dcc84cebe9da9344846a82" compoundref="dbus-message_8c" startline="2114" endline="2122">dbus_message_iter_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_has_next</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_has_next</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Check whether there&apos;s another value on this &quot;level&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>e.g. the next field in a struct, the next value in an array. Returns FALSE at the end of the current container.</para><para>You probably don&apos;t want to use this; it makes for an awkward for/while loop. A nicer one is &quot;while ((current_type = get_current_type()) != INVALID)&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FALSE if nothing more to read at or below this level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1091" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1091" bodyend="1098"/>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <referencedby refid="group__DBusMessage_1gaaffc75a699c96ff6197287f166df2149" compoundref="dbus-message_8c" startline="2095" endline="2103">dbus_message_iter_has_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_get_signature</definition>
        <argsstring>(const DBusTypeReader *reader, const DBusString **str_p, int *start_p, int *len_p)</argsstring>
        <name>_dbus_type_reader_get_signature</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>str_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>start_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_p</declname>
        </param>
        <briefdescription>
<para>Gets the string and range of said string containing the signature of the current value. </para>        </briefdescription>
        <detaileddescription>
<para>Essentially a more complete version of <ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type()</ref> (returns the full type rather than only the outside of the onion).</para><para>Note though that the first byte in a struct signature is <ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref> while the current type will be <ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref> so it isn&apos;t true that the first byte of the signature is always the same as the current type. Another difference is that this function will still return a signature when inside an empty array; say you recurse into empty array of int32, the signature is &quot;i&quot; but the current type will always be <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref> since there are no elements to be currently pointing to.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str_p</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return the string with the type in it </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_p</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return start of the type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_p</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return the length of the type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1122" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1122" bodyend="1130"/>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1gab4579a88a1a7eaf648350466f585ef8b" compoundref="dbus-message_8c" startline="2220" endline="2243">dbus_message_iter_get_signature</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac5bc10de155a2d90454e5cbdf9e6a4f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t replacement_block_init</definition>
        <argsstring>(ReplacementBlock *block, DBusTypeReader *reader)</argsstring>
        <name>replacement_block_init</name>
        <param>
          <type><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1139" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1139" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac68ac9b2e5d5c06e77dd1d4b2f9fa29d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t replacement_block_replace</definition>
        <argsstring>(ReplacementBlock *block, DBusTypeReader *reader, const DBusTypeReader *realign_root)</argsstring>
        <name>replacement_block_replace</name>
        <param>
          <type><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1161" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1161" bodyend="1235"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga18d79940249e9558019884666c995275" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void replacement_block_free</definition>
        <argsstring>(ReplacementBlock *block)</argsstring>
        <name>replacement_block_free</name>
        <param>
          <type><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1238" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1238" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gad495a756e91fb5830912352d13673538" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t reader_set_basic_variable_length</definition>
        <argsstring>(DBusTypeReader *reader, int current_type, const void *value, const DBusTypeReader *realign_root)</argsstring>
        <name>reader_set_basic_variable_length</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1267" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1267" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaba7d711379a348b9cdc0124f0138499e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reader_set_basic_fixed_length</definition>
        <argsstring>(DBusTypeReader *reader, int current_type, const void *value)</argsstring>
        <name>reader_set_basic_fixed_length</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1313" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1313" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_set_basic</definition>
        <argsstring>(DBusTypeReader *reader, const void *value, const DBusTypeReader *realign_root)</argsstring>
        <name>_dbus_type_reader_set_basic</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Sets a new value for the basic type value pointed to by the reader, leaving the reader valid to continue reading. </para>        </briefdescription>
        <detaileddescription>
<para>Any other readers will be invalidated if you set a variable-length type such as a string.</para><para>The provided realign_root is the reader to start from when realigning the data that follows the newly-set value. The reader parameter must point to a value below the realign_root parameter. If the type being set is fixed-length, then realign_root may be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>. Only values reachable from realign_root will be realigned, so if your string contains other values you will need to deal with those somehow yourself. It is OK if realign_root is the same reader as the reader parameter, though if you aren&apos;t setting the root it may not be such a good idea.</para><para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> currently takes &quot;const&quot; versions of the type and value strings, and this function modifies those strings by casting away the const, which is of course bad if we want to get picky. (To be truly clean you&apos;d have an object which contained the type and value strings and set_basic would be a method on that object... this would also make <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> the same thing as DBusTypeMark. But since <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> is effectively that object for D-Bus it doesn&apos;t seem worth creating some random object.)</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000015"><xreftitle>Todo</xreftitle><xrefdescription><para>optimize this by only rewriting until the old and new values are at the same alignment. Frequently this should result in only replacing the value that&apos;s immediately at hand.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>reader indicating where to set a new value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the value to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>realign from here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1360" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1360" bodyend="1397"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_delete</definition>
        <argsstring>(DBusTypeReader *reader, const DBusTypeReader *realign_root)</argsstring>
        <name>_dbus_type_reader_delete</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Recursively deletes any value pointed to by the reader, leaving the reader valid to continue reading. </para>        </briefdescription>
        <detaileddescription>
<para>Any other readers will be invalidated.</para><para>The provided realign_root is the reader to start from when realigning the data that follows the newly-set value. See <ref refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" kindref="member">_dbus_type_reader_set_basic()</ref> for more details on the realign_root paramter.</para><para><xrefsect id="todo_1_todo000016"><xreftitle>Todo</xreftitle><xrefdescription><para>for now this does not delete the typecodes associated with the value, so this function should only be used for array elements.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>reader indicating where to delete a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>realign from here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1417" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1417" bodyend="1441"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" compoundref="dbus-marshal-header_8c" startline="1416" endline="1446">_dbus_header_delete_field</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_init</definition>
        <argsstring>(DBusTypeWriter *writer, int byte_order, DBusString *type_str, int type_pos, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_writer_init</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Initialize a write iterator, which is used to write out values in serialized D-Bus format. </para>        </briefdescription>
        <detaileddescription>
<para>The type_pos passed in is expected to be inside an already-valid, though potentially empty, type signature. This means that the byte after type_pos must be either <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref> (aka nul) or some other valid type. <ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> won&apos;t enforce that the signature is already valid (you can append the nul byte at the end if you like), but just be aware that you need the nul byte eventually and <ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> isn&apos;t going to write it for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to marshal into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write typecodes into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert typecodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write values into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1490" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1490" bodyend="1512"/>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" compoundref="dbus-marshal-recursive_8c" startline="1525" endline="1532">_dbus_type_writer_init_types_delayed</referencedby>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_init_types_delayed</definition>
        <argsstring>(DBusTypeWriter *writer, int byte_order, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_writer_init_types_delayed</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Initialize a write iterator, with the signature to be provided later. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to marshal into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write values into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1525" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1525" bodyend="1532"/>
        <references refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" compoundref="dbus-marshal-recursive_8c" startline="1490" endline="1512">_dbus_type_writer_init</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga863b2f232a21582f9e6fe1951b09da91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_add_types</definition>
        <argsstring>(DBusTypeWriter *writer, DBusString *type_str, int type_pos)</argsstring>
        <name>_dbus_type_writer_add_types</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
<para>Adds type string to the writer, if it had none. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>type string to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>type position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1543" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1543" bodyend="1552"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_remove_types</definition>
        <argsstring>(DBusTypeWriter *writer)</argsstring>
        <name>_dbus_type_writer_remove_types</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
<para>Removes type string from the writer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to remove from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1560" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1560" bodyend="1564"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_init_values_only</definition>
        <argsstring>(DBusTypeWriter *writer, int byte_order, const DBusString *type_str, int type_pos, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_writer_init_values_only</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" kindref="member">_dbus_type_writer_init()</ref>, except the type string passed in should correspond to an existing signature that matches what you&apos;re going to write out. </para>        </briefdescription>
        <detaileddescription>
<para>The writer will check what you write vs. this existing signature.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to marshal into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string with signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>start of signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write values into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1581" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1581" bodyend="1593"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga54323d48921de8c5bd04ae01548312bb" compoundref="dbus-marshal-basic_8c" startline="794" endline="851">_dbus_marshal_write_basic</references>
        <references refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" compoundref="dbus-string_8c" startline="899" endline="907">_dbus_string_alloc_space</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" compoundref="dbus-string_8c" startline="2103" endline="2141">_dbus_string_equal_substring</references>
        <references refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" compoundref="dbus-string_8c" startline="614" endline="628">_dbus_string_insert_byte</references>
        <references refid="group__DBusString_1gaa0964d662ad17c58eb044c1b153017a6" compoundref="dbus-string_8c" startline="584" endline="603">_dbus_string_insert_bytes</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" compoundref="dbus-marshal-recursive_8c" startline="1490" endline="1512">_dbus_type_writer_init</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gafefb8bbb7b678133581abd0bb8f9be0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_writer_write_basic_no_typecode</definition>
        <argsstring>(DBusTypeWriter *writer, int type, const void *value)</argsstring>
        <name>_dbus_type_writer_write_basic_no_typecode</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1596" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1596" bodyend="1609"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7828e924b66988387fbc7d69f7b209a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writer_recurse_init_and_check</definition>
        <argsstring>(DBusTypeWriter *writer, int container_type, DBusTypeWriter *sub)</argsstring>
        <name>writer_recurse_init_and_check</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1633" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1633" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae7bddba3e5e8669032bee2666a5c4435" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t write_or_verify_typecode</definition>
        <argsstring>(DBusTypeWriter *writer, int typecode)</argsstring>
        <name>write_or_verify_typecode</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typecode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1699" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1699" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gade56bea443e3b35aea39978cb5c8436d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_recurse_struct_or_dict_entry</definition>
        <argsstring>(DBusTypeWriter *writer, int begin_char, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub)</argsstring>
        <name>writer_recurse_struct_or_dict_entry</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>begin_char</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1771" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1771" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5a0ffa991a8735c36374e33bfaf0bd39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_recurse_array</definition>
        <argsstring>(DBusTypeWriter *writer, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub, dbus_bool_t is_array_append)</argsstring>
        <name>writer_recurse_array</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>is_array_append</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1808" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1808" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga265b8a26fcad8dbb2fb3f463d1293e73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_recurse_variant</definition>
        <argsstring>(DBusTypeWriter *writer, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub)</argsstring>
        <name>writer_recurse_variant</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1981" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1981" bodyend="2049"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab8afaa514a69cacad4d86c3006cce663" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_writer_recurse_contained_len</definition>
        <argsstring>(DBusTypeWriter *writer, int container_type, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub, dbus_bool_t is_array_append)</argsstring>
        <name>_dbus_type_writer_recurse_contained_len</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>is_array_append</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2052" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2052" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_recurse</definition>
        <argsstring>(DBusTypeWriter *writer, int container_type, const DBusString *contained_type, int contained_type_start, DBusTypeWriter *sub)</argsstring>
        <name>_dbus_type_writer_recurse</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Opens a new container and writes out the initial information for that container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>container_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the container to open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the array element type or variant content type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type_start</parametername>
</parameternamelist>
<parameterdescription>
<para>position to look for the type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the new sub-writer to write container contents </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2106" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2106" bodyend="2125"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" compoundref="dbus-message_8c" startline="2849" endline="2901">dbus_message_iter_open_container</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_append_array</definition>
        <argsstring>(DBusTypeWriter *writer, const DBusString *contained_type, int contained_type_start, DBusTypeWriter *sub)</argsstring>
        <name>_dbus_type_writer_append_array</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Append to an existing array. </para>        </briefdescription>
        <detaileddescription>
<para>Essentially, the writer will read an existing length at the write location; jump over that length; and write new fields. On unrecurse(), the existing length will be updated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type</parametername>
</parameternamelist>
<parameterdescription>
<para>element type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type_start</parametername>
</parameternamelist>
<parameterdescription>
<para>position of element type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the subwriter to init </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2140" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2140" bodyend="2158"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaaa1f89cd948707b896763119300db18d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int writer_get_array_len</definition>
        <argsstring>(DBusTypeWriter *writer)</argsstring>
        <name>writer_get_array_len</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2161" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2161" bodyend="2165"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_unrecurse</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeWriter *sub)</argsstring>
        <name>_dbus_type_writer_unrecurse</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Closes a container created by <ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse()</ref> and writes any additional information to the values block. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the sub-writer created by <ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2176" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2176" bodyend="2297"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" compoundref="dbus-message_8c" startline="2918" endline="2937">dbus_message_iter_close_container</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_write_basic</definition>
        <argsstring>(DBusTypeWriter *writer, int type, const void *value)</argsstring>
        <name>_dbus_type_writer_write_basic</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes out a basic type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the value to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2308" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2308" bodyend="2339"/>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" compoundref="dbus-string_8c" startline="899" endline="907">_dbus_string_alloc_space</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2656" endline="2753">dbus_message_iter_append_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_write_fixed_multi</definition>
        <argsstring>(DBusTypeWriter *writer, int element_type, const void *value, int n_elements)</argsstring>
        <name>_dbus_type_writer_write_fixed_multi</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <briefdescription>
<para>Writes a block of fixed-length basic values, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>those that are both <ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed()</ref> and _dbus_type_is_basic(). The block must be written inside an array.</para><para>The value parameter should be the address of said array of values, so e.g. if it&apos;s an array of double, pass in &quot;const double**&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of stuff in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2356" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2356" bodyend="2392"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusList_1gad99045e79db46159babe69718f343053" compoundref="dbus-list_8c" startline="270" endline="280">_dbus_list_append</references>
        <references refid="group__DBusMarshal_1ga990da87b984d8917da26b89a6470fdf5" compoundref="dbus-marshal-basic_8c" startline="1020" endline="1064">_dbus_marshal_write_fixed_multi</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" compoundref="dbus-marshal-recursive_8c" startline="1122" endline="1130">_dbus_type_reader_get_signature</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" compoundref="dbus-marshal-recursive_8c" startline="213">ARRAY_READER_LEN_POS</references>
        <references refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" compoundref="dbus-marshal-recursive_8h" startline="41">DBusTypeReader::byte_order</references>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1gaa0c4c8aa34fa266daa55bd37bdad39b8" compoundref="dbus-signature_8c" startline="294" endline="300">dbus_type_is_container</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" compoundref="dbus-marshal-recursive_8h" startline="95">DBusArrayLenFixup::len_pos_in_reader</references>
        <references refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" compoundref="dbus-marshal-recursive_8h" startline="96">DBusArrayLenFixup::new_len</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be">DBusTypeReader::u</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" compoundref="dbus-message_8c" startline="2791" endline="2825">dbus_message_iter_append_fixed_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae01fd398187c731026927b64b6508644" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_if_after</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader, const DBusTypeReader *start_after)</argsstring>
        <name>enable_if_after</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>start_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2395" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2395" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga70930e215a76bb5cd6c4e40f60e8dd05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t append_fixup</definition>
        <argsstring>(DBusList **fixups, const DBusArrayLenFixup *fixup)</argsstring>
        <name>append_fixup</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref> *</type>
          <declname>fixup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2416" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2416" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf0ef438dbf930613c9e9cad468442e45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_write_reader_helper</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader, const DBusTypeReader *start_after, int start_after_new_pos, int start_after_new_len, DBusList **fixups, dbus_bool_t inside_start_after)</argsstring>
        <name>writer_write_reader_helper</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>start_after</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>inside_start_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2443" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2443" bodyend="2640"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4905750705d220efe9dfc71f49bedc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_write_reader</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_writer_write_reader</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Iterate through all values in the given reader, writing a copy of each value to the writer. </para>        </briefdescription>
        <detaileddescription>
<para>The reader will be moved forward to its end position.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to copy to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader to copy from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2728" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2728" bodyend="2732"/>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-marshal-recursive.c<sp/><sp/>Marshalling<sp/>routines<sp/>for<sp/>recursive<sp/>types</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2004,<sp/>2005<sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-recursive.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-basic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-signature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_type_reader_greater_than<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*lhs,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*rhs);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_type_writer_set_enabled<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_type_writer_write_reader_partial<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*start_after,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_pos,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_len,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fixups);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="group__DBusMarshal_1ga2055dc20f1e0c13064cebf1fb65b8ce8" refkind="member"><highlight class="preprocessor">#define<sp/>RECURSIVE_MARSHAL_READ_TRACE<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="group__DBusMarshal_1ga428a18f23d9a4c59560f03fd2088fe7f" refkind="member"><highlight class="preprocessor">#define<sp/>RECURSIVE_MARSHAL_WRITE_TRACE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">free_fixups<sp/>(<ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>**fixups)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>link<sp/>=<sp/><ref refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" kindref="member">_dbus_list_get_first_link</ref><sp/>(fixups);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(link<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*next;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" kindref="member">_dbus_list_get_next_link</ref><sp/>(fixups,<sp/>link);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1ga6e824f717125ce40c549d5402e32610f" kindref="member">_dbus_list_free_link</ref><sp/>(link);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>*fixups<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">apply_and_free_fixups<sp/>(<ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/><sp/>**fixups,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fixups)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>%d<sp/>FIXUPS<sp/>to<sp/>apply\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1gaa2144a5489bb35b16b2b671488ad597c" kindref="member">_dbus_list_get_length</ref><sp/>(fixups));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>link<sp/>=<sp/><ref refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" kindref="member">_dbus_list_get_first_link</ref><sp/>(fixups);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(link<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*next;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" kindref="member">_dbus_list_get_next_link</ref><sp/>(fixups,<sp/>link);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref><sp/>*f;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>applying<sp/>FIXUP<sp/>to<sp/>reader<sp/>%p<sp/>at<sp/>pos<sp/>%d<sp/>new_len<sp/>=<sp/>%d<sp/>old<sp/>len<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>f-&gt;<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>,<sp/>f-&gt;<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" kindref="member">_dbus_marshal_read_uint32</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" kindref="member">_dbus_marshal_set_uint32</ref><sp/>((<ref refid="structDBusString" kindref="compound">DBusString</ref>*)<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f-&gt;<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1ga6e824f717125ce40c549d5402e32610f" kindref="member">_dbus_list_free_link</ref><sp/>(link);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>*fixups<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structDBusTypeReaderClass" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127" refid="structDBusTypeReaderClass_1afd813c32ff4b8b96266efe392dc25a89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structDBusTypeReaderClass_1afd813c32ff4b8b96266efe392dc25a89" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="structDBusTypeReaderClass_1a7cd297c0e03c5204bc41bf305c7688c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReaderClass_1a7cd297c0e03c5204bc41bf305c7688c9" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>;<sp/></highlight></codeline>
<codeline lineno="130" refid="structDBusTypeReaderClass_1ae9a1b13f853dda37eeaf6acb93879317" refkind="member"><highlight class="normal"><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/><ref refid="structDBusTypeReaderClass_1ae9a1b13f853dda37eeaf6acb93879317" kindref="member">recurse</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sub,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*parent);<sp/></highlight></codeline>
<codeline lineno="132" refid="structDBusTypeReaderClass_1aafa6c7a0dac10c17b46deb2b6dbd4665" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>(*<sp/><ref refid="structDBusTypeReaderClass_1aafa6c7a0dac10c17b46deb2b6dbd4665" kindref="member">check_finished</ref>)<sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader);<sp/></highlight></codeline>
<codeline lineno="133" refid="structDBusTypeReaderClass_1a9ef686a97bbab3dc264628b62a4d5686" refkind="member"><highlight class="normal"><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/><ref refid="structDBusTypeReaderClass_1a9ef686a97bbab3dc264628b62a4d5686" kindref="member">next</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type);<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">element_type_get_alignment<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" kindref="member">_dbus_type_get_alignment</ref><sp/>(<ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(str,<sp/>pos));</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">reader_init<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*type_str,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*value_str,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_pos)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref><sp/>=<sp/>byte_order;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" kindref="member">finished</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref><sp/>=<sp/>type_str;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>=<sp/>type_pos;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref><sp/>=<sp/>value_str;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>value_pos;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">base_reader_recurse<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>subreader<sp/>at<sp/>the<sp/>same<sp/>place<sp/>as<sp/>parent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>reader_init<sp/>(sub,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">struct_or_dict_entry_types_only_reader_recurse<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>base_reader_recurse<sp/>(sub,<sp/>parent);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_byte<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref><sp/>||</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_byte<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>)<sp/>==<sp/><ref refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" kindref="member">DBUS_DICT_ENTRY_BEGIN_CHAR</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">struct_or_dict_entry_reader_recurse<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>struct_or_dict_entry_types_only_reader_recurse<sp/>(sub,<sp/>parent);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>and<sp/>dict<sp/>entry<sp/>have<sp/>8<sp/>byte<sp/>alignment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">array_types_only_reader_recurse<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>base_reader_recurse<sp/>(sub,<sp/>parent);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>type_pos<sp/>at<sp/>the<sp/>array<sp/>element<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>with<sp/>values<sp/>likely<sp/>to<sp/>crash<sp/>things<sp/>if<sp/>misused<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga5627db5e165848477e620846f6414db1" kindref="member">_DBUS_INT_MAX</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a930fb8d6c82f269b0a151cfb33df86b3" kindref="member">array_len_offset</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" refkind="member"><highlight class="preprocessor">#define<sp/>ARRAY_READER_LEN_POS(reader)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/>((reader)-&gt;u.array.start_pos<sp/>-<sp/>((int)(reader)-&gt;array_len_offset)<sp/>-<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">array_reader_get_array_len<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>array_len;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_pos;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>len_pos<sp/>=<sp/><ref refid="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" kindref="member">ARRAY_READER_LEN_POS</ref><sp/>(reader);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_DBUS_ALIGN_VALUE<sp/>(len_pos,<sp/>4)<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>len_pos);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>array_len<sp/>=<sp/><ref refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" kindref="member">_dbus_unpack_uint32</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,<sp/>len_pos,<sp/>4));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>reader<sp/>%p<sp/>len_pos<sp/>%d<sp/>array<sp/>len<sp/>%u<sp/>len_offset<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>len_pos,<sp/>array_len,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a930fb8d6c82f269b0a151cfb33df86b3" kindref="member">array_len_offset</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>-<sp/>len_pos<sp/>-<sp/>4<sp/>&lt;<sp/>8);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array_len;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">array_reader_recurse<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignment;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len_pos;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>array_types_only_reader_recurse<sp/>(sub,<sp/>parent);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>len_pos<sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>+=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>alignment<sp/>=<sp/>element_type_get_alignment<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>alignment);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((sub-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>-<sp/>(len_pos<sp/>+<sp/>4))<sp/>&lt;<sp/>8);<sp/></highlight><highlight class="comment">/*<sp/>only<sp/>3<sp/>bits<sp/>in<sp/>array_len_offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a930fb8d6c82f269b0a151cfb33df86b3" kindref="member">array_len_offset</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>-<sp/>(len_pos<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>type<sp/>reader<sp/>%p<sp/>array<sp/>start<sp/>=<sp/>%d<sp/>len_offset<sp/>=<sp/>%d<sp/>array<sp/>len<sp/>=<sp/>%d<sp/>array<sp/>element<sp/>type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a930fb8d6c82f269b0a151cfb33df86b3" kindref="member">array_len_offset</ref>,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array_reader_get_array_len<sp/>(sub),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(<ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>)));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal">variant_reader_recurse<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*parent)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig_len;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contained_alignment;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>base_reader_recurse<sp/>(sub,<sp/>parent);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Variant<sp/>is<sp/>1<sp/>byte<sp/>sig<sp/>length<sp/>(without<sp/>nul),<sp/>signature<sp/>with<sp/>nul,</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>*<sp/>padding<sp/>to<sp/>8-boundary,<sp/>then<sp/>values</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>sig_len<sp/>=<sp/>_dbus_string_get_byte<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+<sp/>sig_len<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>contained_alignment<sp/>=<sp/><ref refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" kindref="member">_dbus_type_get_alignment</ref><sp/>(<ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>contained_alignment);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>type<sp/>reader<sp/>%p<sp/>variant<sp/>containing<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="307"><highlight class="normal">array_reader_check_finished<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_pos;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>array<sp/>element<sp/>type<sp/>if<sp/>elements<sp/>remain,<sp/>and</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*<sp/>TYPE_INVALID<sp/>otherwise</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>end_pos<sp/>=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>+<sp/>array_reader_get_array_len<sp/>(reader);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&lt;=<sp/>end_pos);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&gt;=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>==<sp/>end_pos;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">skip_one_complete_type<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*type_pos)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" kindref="member">_dbus_type_signature_next</ref><sp/>(_dbus_string_get_const_data<sp/>(type_str),</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" kindref="member">_dbus_type_signature_next</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*type_str,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*type_pos)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(type_str<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(type_pos<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>type_str;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>start<sp/>+<sp/>*type_pos;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" kindref="member">DBUS_STRUCT_END_CHAR</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" kindref="member">DBUS_DICT_ENTRY_END_CHAR</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" kindref="member">DBUS_STRUCT_END_CHAR</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" kindref="member">DBUS_DICT_ENTRY_END_CHAR</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref>)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" kindref="member">DBUS_STRUCT_END_CHAR</ref>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" kindref="member">DBUS_DICT_ENTRY_BEGIN_CHAR</ref>)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(*p<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" kindref="member">DBUS_DICT_ENTRY_BEGIN_CHAR</ref>)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/><ref refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" kindref="member">DBUS_DICT_ENTRY_END_CHAR</ref>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>*type_pos<sp/>=<sp/>(int)<sp/>(p<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">find_len_of_complete_type<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/>type_pos;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>skip_one_complete_type<sp/>(type_str,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end<sp/>-<sp/>type_pos;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">base_reader_next<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(current_type)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref>:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>forward<sp/>over<sp/>the<sp/>entire<sp/>container<sp/>contents<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>sub;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref><sp/>&amp;&amp;<sp/>current_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recurse<sp/>into<sp/>the<sp/>struct<sp/>or<sp/>variant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(reader,<sp/>&amp;sub);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>everything<sp/>in<sp/>this<sp/>subreader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;sub))</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>sub.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>are<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>container;<sp/>for<sp/>variants,<sp/>the</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>subreader&apos;s<sp/>type_pos<sp/>is<sp/>totally<sp/>inapplicable<sp/>(it&apos;s<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>value<sp/>string)<sp/>but<sp/>we<sp/>know<sp/>that<sp/>we<sp/>increment<sp/>by<sp/>one<sp/>past<sp/>the</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>DBUS_TYPE_VARIANT</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>=<sp/>sub.<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" kindref="member">_dbus_marshal_skip_array</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_one_complete_type<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>&amp;reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" kindref="member">_dbus_marshal_skip_basic</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">struct_reader_next<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>base_reader_next<sp/>(reader,<sp/>current_type);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>STRUCT<sp/>containers<sp/>we<sp/>return<sp/>FALSE<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>struct,</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/>*<sp/>for<sp/>INVALID<sp/>we<sp/>return<sp/>FALSE<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>signature.</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>both<sp/>cases<sp/>we<sp/>arrange<sp/>for<sp/>get_current_type()<sp/>to<sp/>return<sp/>INVALID</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/><sp/><sp/>*<sp/>which<sp/>is<sp/>defined<sp/>to<sp/>happen<sp/>iff<sp/>we&apos;re<sp/>at<sp/>the<sp/>end<sp/>(no<sp/>more<sp/>next())</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>_dbus_string_get_byte<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" kindref="member">DBUS_STRUCT_END_CHAR</ref>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" kindref="member">finished</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">dict_entry_reader_next<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>base_reader_next<sp/>(reader,<sp/>current_type);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>STRUCT<sp/>containers<sp/>we<sp/>return<sp/>FALSE<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>struct,</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/>*<sp/>for<sp/>INVALID<sp/>we<sp/>return<sp/>FALSE<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>signature.</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>both<sp/>cases<sp/>we<sp/>arrange<sp/>for<sp/>get_current_type()<sp/>to<sp/>return<sp/>INVALID</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/>*<sp/>which<sp/>is<sp/>defined<sp/>to<sp/>happen<sp/>iff<sp/>we&apos;re<sp/>at<sp/>the<sp/>end<sp/>(no<sp/>more<sp/>next())</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>_dbus_string_get_byte<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" kindref="member">DBUS_DICT_ENTRY_END_CHAR</ref>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" kindref="member">finished</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal">array_types_only_reader_next<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type)</highlight></codeline>
<codeline lineno="546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>one<sp/>&quot;element&quot;<sp/>to<sp/>be<sp/>iterated<sp/>over</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/>*<sp/>in<sp/>each<sp/>array,<sp/>which<sp/>is<sp/>its<sp/>element<sp/>type.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/>*<sp/>So<sp/>the<sp/>finished<sp/>flag<sp/>indicates<sp/>whether<sp/>we&apos;ve</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/><sp/>*<sp/>iterated<sp/>over<sp/>it<sp/>yet<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" kindref="member">finished</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">array_reader_next<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>one<sp/>array<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_pos;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>end_pos<sp/>=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>+<sp/>array_reader_get_array_len<sp/>(reader);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>reader<sp/>%p<sp/>array<sp/>next<sp/>START<sp/>start_pos<sp/>=<sp/>%d<sp/>end_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>current_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_pos,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&lt;<sp/>end_pos);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&gt;=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>))</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref>:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>sub;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Recurse<sp/>into<sp/>the<sp/>struct<sp/>or<sp/>variant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(reader,<sp/>&amp;sub);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>everything<sp/>in<sp/>this<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;sub))</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>*/</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>are<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>=<sp/>sub.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>:</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" kindref="member">_dbus_marshal_skip_array</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" kindref="member">_dbus_marshal_skip_basic</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>reader<sp/>%p<sp/>array<sp/>next<sp/>END<sp/>start_pos<sp/>=<sp/>%d<sp/>end_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>current_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_pos,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&lt;=<sp/>end_pos);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>==<sp/>end_pos)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>skip_one_complete_type<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>body_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;body&quot;</highlight><highlight class="normal">,<sp/>0,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>body<sp/>is<sp/>always<sp/>toplevel,<sp/>so<sp/>doesn&apos;t<sp/>get<sp/>recursed<sp/>into<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>base_reader_next</highlight></codeline>
<codeline lineno="640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>body_types_only_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;body<sp/>types&quot;</highlight><highlight class="normal">,<sp/>1,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="comment">/*<sp/>body<sp/>is<sp/>always<sp/>toplevel,<sp/>so<sp/>doesn&apos;t<sp/>get<sp/>recursed<sp/>into<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>base_reader_next</highlight></codeline>
<codeline lineno="648"><highlight class="normal">};</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>struct_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;struct&quot;</highlight><highlight class="normal">,<sp/>2,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>struct_or_dict_entry_reader_recurse,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>struct_reader_next</highlight></codeline>
<codeline lineno="656"><highlight class="normal">};</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>struct_types_only_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;struct<sp/>types&quot;</highlight><highlight class="normal">,<sp/>3,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>struct_or_dict_entry_types_only_reader_recurse,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>struct_reader_next</highlight></codeline>
<codeline lineno="664"><highlight class="normal">};</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>dict_entry_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;dict_entry&quot;</highlight><highlight class="normal">,<sp/>4,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>struct_or_dict_entry_reader_recurse,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>dict_entry_reader_next</highlight></codeline>
<codeline lineno="672"><highlight class="normal">};</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>dict_entry_types_only_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;dict_entry<sp/>types&quot;</highlight><highlight class="normal">,<sp/>5,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>struct_or_dict_entry_types_only_reader_recurse,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>dict_entry_reader_next</highlight></codeline>
<codeline lineno="680"><highlight class="normal">};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>array_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">,<sp/>6,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>array_reader_recurse,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>array_reader_check_finished,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>array_reader_next</highlight></codeline>
<codeline lineno="688"><highlight class="normal">};</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>array_types_only_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;array<sp/>types&quot;</highlight><highlight class="normal">,<sp/>7,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>array_types_only_reader_recurse,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>array_types_only_reader_next</highlight></codeline>
<codeline lineno="696"><highlight class="normal">};</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>variant_reader_class<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;variant&quot;</highlight><highlight class="normal">,<sp/>8,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>variant_reader_recurse,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>base_reader_next</highlight></codeline>
<codeline lineno="704"><highlight class="normal">};</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal">all_reader_classes[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>&amp;body_reader_class,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>&amp;body_types_only_reader_class,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>&amp;struct_reader_class,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>&amp;struct_types_only_reader_class,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>&amp;dict_entry_reader_class,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>&amp;dict_entry_types_only_reader_class,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>&amp;array_reader_class,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>&amp;array_types_only_reader_class,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>&amp;variant_reader_class</highlight></codeline>
<codeline lineno="718"><highlight class="normal">};</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init</ref><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*type_str,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*value_str,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_pos)</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;body_reader_class;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>reader_init<sp/>(reader,<sp/>byte_order,<sp/>type_str,<sp/>type_pos,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_str,<sp/>value_pos);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>init<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760" refid="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" kindref="member">_dbus_type_reader_init_types_only</ref><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*type_str,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos)</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;body_types_only_reader_class;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>reader_init<sp/>(reader,<sp/>DBUS_COMPILER_BYTE_ORDER<sp/></highlight><highlight class="comment">/*<sp/>irrelevant<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_str,<sp/>type_pos,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusInternalsUtils_1ga5627db5e165848477e620846f6414db1" kindref="member">_DBUS_INT_MAX</ref><sp/></highlight><highlight class="comment">/*<sp/>crashes<sp/>if<sp/>we<sp/>screw<sp/>up<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>init<sp/>types<sp/>only<sp/>type_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" kindref="member">finished</ref><sp/>||</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1aafa6c7a0dac10c17b46deb2b6dbd4665" kindref="member">check_finished</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1aafa6c7a0dac10c17b46deb2b6dbd4665" kindref="member">check_finished</ref>)<sp/>(reader)))</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(t<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" kindref="member">DBUS_STRUCT_END_CHAR</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(t<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(t<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" kindref="member">DBUS_DICT_ENTRY_END_CHAR</ref>);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(t<sp/>!=<sp/><ref refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" kindref="member">DBUS_DICT_ENTRY_BEGIN_CHAR</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>current<sp/>type_pos<sp/>=<sp/>%d<sp/>type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(t));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" kindref="member">_dbus_type_reader_get_element_type</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader)</highlight></codeline>
<codeline lineno="821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>element_type;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>element_type<sp/>=<sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>element_type;</highlight></codeline>
<codeline lineno="830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837" refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader)</highlight></codeline>
<codeline lineno="838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="group__DBusMarshal_1gac87315d74386314ec3b148ef737626d2" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gac87315d74386314ec3b148ef737626d2" kindref="member">_dbus_type_reader_read_raw</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>**value_location)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>*value_location<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869" refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,<sp/>value,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>read<sp/>basic<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="group__DBusMarshal_1ga7def93d676d528c261aa274cea41c29d" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga7def93d676d528c261aa274cea41c29d" kindref="member">_dbus_type_reader_get_array_length</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>==<sp/>&amp;array_reader_class);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array_reader_get_array_len<sp/>(reader);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" kindref="member">_dbus_type_reader_read_fixed_multi</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_elements)</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>element_type;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_pos;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_len;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignment;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_len;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>==<sp/>&amp;array_reader_class);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>element_type<sp/>=<sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(element_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);<sp/></highlight><highlight class="comment">/*<sp/>why<sp/>we<sp/>don&apos;t<sp/>use<sp/>get_current_type()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(element_type));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>alignment<sp/>=<sp/><ref refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" kindref="member">_dbus_type_get_alignment</ref><sp/>(element_type);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&gt;=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>total_len<sp/>=<sp/>array_reader_get_array_len<sp/>(reader);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>end_pos<sp/>=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos<sp/>+<sp/>total_len;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>remaining_len<sp/>=<sp/>end_pos<sp/>-<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;end_pos<sp/>%d<sp/>total_len<sp/>%d<sp/>remaining_len<sp/>%d<sp/>value_pos<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_pos,<sp/>total_len,<sp/>remaining_len,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(remaining_len<sp/>&lt;=<sp/>total_len);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining_len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>**)<sp/>value<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>**)<sp/>value<sp/>=</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining_len);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/>*n_elements<sp/>=<sp/>remaining_len<sp/>/<sp/>alignment;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((remaining_len<sp/>%<sp/>alignment)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>read<sp/>fixed<sp/>array<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988" refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>:</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;struct_types_only_reader_class;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;struct_reader_class;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref>:</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;dict_entry_types_only_reader_class;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;dict_entry_reader_class;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>:</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;array_types_only_reader_class;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;array_reader_class;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>:</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;can&apos;t<sp/>recurse<sp/>into<sp/>variant<sp/>typecode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>=<sp/>&amp;variant_reader_class;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recursing<sp/>into<sp/>type<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(t));</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;You<sp/>can&apos;t<sp/>recurse<sp/>into<sp/>an<sp/>empty<sp/>array<sp/>or<sp/>off<sp/>the<sp/>end<sp/>of<sp/>a<sp/>message<sp/>body\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;don&apos;t<sp/>yet<sp/>handle<sp/>recursing<sp/>into<sp/>this<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>==<sp/>all_reader_classes[sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1a7cd297c0e03c5204bc41bf305c7688c9" kindref="member">id</ref>]);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>(*<sp/>sub-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ae9a1b13f853dda37eeaf6acb93879317" kindref="member">recurse</ref>)<sp/>(sub,<sp/>reader);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>RECURSED<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,<sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(sub-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1051" refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>START<sp/>next()<sp/>{<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;<sp/>current_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(t));</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>(*<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1a9ef686a97bbab3dc264628b62a4d5686" kindref="member">next</ref>)<sp/>(reader,<sp/>t);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_READ_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>reader<sp/>%p<sp/>END<sp/>next()<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;<sp/>current_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader)));</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader)<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1091" refid="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" kindref="member">_dbus_type_reader_has_next</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>efficient<sp/>but<sp/>works<sp/>for<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>copy;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>copy<sp/>=<sp/>*reader;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;copy);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122" refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" kindref="member">_dbus_type_reader_get_signature</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>**str_p,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start_p,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*len_p)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>*str_p<sp/>=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>*start_p<sp/>=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>*len_p<sp/>=<sp/>find_len_of_complete_type<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132" refid="structReplacementBlock" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134" refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>;<sp/></highlight></codeline>
<codeline lineno="1135" refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}<sp/><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref>;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1139"><highlight class="normal">replacement_block_init<sp/>(<ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref><sp/>*block,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/>*reader)</highlight></codeline>
<codeline lineno="1141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>))</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>%<sp/>8<sp/>is<sp/>the<sp/>padding<sp/>to<sp/>have<sp/>the<sp/>same<sp/>align<sp/>properties<sp/>in</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/><sp/>*<sp/>our<sp/>replacement<sp/>string<sp/>as<sp/>we<sp/>do<sp/>at<sp/>the<sp/>position<sp/>being<sp/>replaced</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref><sp/>=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member">_dbus_string_lengthen</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>,<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>))</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1161"><highlight class="normal">replacement_block_replace<sp/>(<ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref><sp/><sp/><sp/><sp/><sp/>*block,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*realign_root)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>realign_reader;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*fixups;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_len;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(realign_root<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/>orig_len<sp/>=<sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>realign_reader<sp/>=<sp/>*realign_root;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;INITIALIZING<sp/>replacement<sp/>block<sp/>writer<sp/>%p<sp/>at<sp/>value_pos<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writer,<sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>));</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" kindref="member">_dbus_type_writer_init_values_only</ref><sp/>(&amp;writer,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>));</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(realign_reader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&lt;=<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;COPYING<sp/>from<sp/>reader<sp/>at<sp/>value_pos<sp/>%d<sp/>to<sp/>writer<sp/>%p<sp/>starting<sp/>after<sp/>value_pos<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>&amp;writer,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>fixups<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_type_writer_write_reader_partial<sp/>(&amp;writer,</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;realign_reader,</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>,</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>)<sp/>-<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fixups))</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;REPLACEMENT<sp/>at<sp/>padding<sp/>%d<sp/>len<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>)<sp/>-<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>,<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>)<sp/>-<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;TO<sp/>BE<sp/>REPLACED<sp/>at<sp/>value_pos<sp/>=<sp/>%d<sp/>(align<sp/>pad<sp/>%d)<sp/>len<sp/>%d<sp/>realign_reader.value_pos<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>%<sp/>8,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>-<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>-<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>the<sp/>replacement<sp/>into<sp/>position</highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/><sp/><sp/>*<sp/>(realign_reader<sp/>should<sp/>now<sp/>be<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>block<sp/>to<sp/>be<sp/>replaced)</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gafe7921a92467cdefaa0a7829d6cf260b" kindref="member">_dbus_string_replace_len</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>,<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>,</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>)<sp/>-<sp/>block-&gt;<ref refid="structReplacementBlock_1a2aa3220ac139545f4fa2ddec2c36d5de" kindref="member">padding</ref>,</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref>*)<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_reader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>-<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>))</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>our<sp/>fixups<sp/>now<sp/>that<sp/>we<sp/>can&apos;t<sp/>have<sp/>an<sp/>OOM<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>apply_and_free_fixups<sp/>(&amp;fixups,<sp/>reader);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>,<sp/>orig_len);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>free_fixups<sp/>(&amp;fixups);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal">replacement_block_free<sp/>(<ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref><sp/>*block)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;block-&gt;<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>the<sp/>variable-length<sp/>case,<sp/>we<sp/>have<sp/>to<sp/>fix<sp/>alignment<sp/>after<sp/>we<sp/>insert.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>*<sp/>The<sp/>strategy<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>pad<sp/>a<sp/>new<sp/>string<sp/>to<sp/>have<sp/>the<sp/>same<sp/>alignment<sp/>as<sp/>the</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>start<sp/>of<sp/>the<sp/>current<sp/>basic<sp/>value</highlight></codeline>
<codeline lineno="1248"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>write<sp/>the<sp/>new<sp/>basic<sp/>value</highlight></codeline>
<codeline lineno="1249"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>copy<sp/>from<sp/>the<sp/>original<sp/>reader<sp/>to<sp/>the<sp/>new<sp/>string,</highlight></codeline>
<codeline lineno="1250"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>which<sp/>will<sp/>fix<sp/>the<sp/>alignment<sp/>of<sp/>types<sp/>following</highlight></codeline>
<codeline lineno="1251"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>new<sp/>value</highlight></codeline>
<codeline lineno="1252"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>this<sp/>copy<sp/>has<sp/>to<sp/>start<sp/>at<sp/>realign_root,</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>not<sp/>really<sp/>write<sp/>anything<sp/>until<sp/>it</highlight></codeline>
<codeline lineno="1254"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>passes<sp/>the<sp/>value<sp/>being<sp/>set</highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>as<sp/>an<sp/>optimization,<sp/>we<sp/>can<sp/>stop<sp/>copying</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>the<sp/>source<sp/>and<sp/>dest<sp/>values<sp/>are<sp/>both</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>an<sp/>8-boundary,<sp/>since<sp/>we<sp/>know<sp/>all<sp/>following</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>padding<sp/>and<sp/>alignment<sp/>will<sp/>be<sp/>identical</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>copy<sp/>the<sp/>new<sp/>string<sp/>back<sp/>to<sp/>the<sp/>original</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>string,<sp/>replacing<sp/>the<sp/>relevant<sp/>part<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>original<sp/>string</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>now<sp/>any<sp/>arrays<sp/>in<sp/>the<sp/>original<sp/>string<sp/>that</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>contained<sp/>the<sp/>replaced<sp/>string<sp/>may<sp/>have<sp/>the</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>wrong<sp/>length;<sp/>so<sp/>we<sp/>have<sp/>to<sp/>fix<sp/>that</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1267"><highlight class="normal">reader_set_basic_variable_length<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*realign_root)</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref><sp/>block;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(realign_root<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!replacement_block_init<sp/>(&amp;block,<sp/>reader))</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>the<sp/>new<sp/>basic<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;INITIALIZING<sp/>writer<sp/>%p<sp/>to<sp/>write<sp/>basic<sp/>value<sp/>at<sp/>value_pos<sp/>%d<sp/>of<sp/>replacement<sp/>string\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writer,<sp/>_dbus_string_get_length<sp/>(&amp;block.<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>));</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" kindref="member">_dbus_type_writer_init_values_only</ref><sp/>(&amp;writer,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;block.<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;block.<ref refid="structReplacementBlock_1a562018cd2a0870abe3897b289bdd8488" kindref="member">replacement</ref>));</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WRITING<sp/>basic<sp/>value<sp/>to<sp/>writer<sp/>%p<sp/>(replacement<sp/>string)\n&quot;</highlight><highlight class="normal">,<sp/>&amp;writer);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/>current_type,<sp/>value))</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!replacement_block_replace<sp/>(&amp;block,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_root))</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>replacement_block_free<sp/>(&amp;block);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal">reader_set_basic_fixed_length<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic</ref><sp/>((<ref refid="structDBusString" kindref="compound">DBusString</ref>*)<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type,</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1360" refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" kindref="member">_dbus_type_reader_set_basic</ref><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*realign_root)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_type;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref>-&gt;<ref refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" kindref="member">types_only</ref>);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref><sp/>==<sp/>realign_root-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&gt;=<sp/>realign_root-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>current_type<sp/>=<sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>SET<sp/>BASIC<sp/>type<sp/>reader<sp/>%p<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;<sp/>realign_root<sp/>=<sp/>%p<sp/>with<sp/>value_pos<sp/>%d<sp/>current_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>,<sp/>0),</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_root,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_root<sp/>?<sp/>realign_root-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>:<sp/>-1,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type));</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(realign_root-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,<sp/>realign_root-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(realign_root-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>)<sp/>-</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_root-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" kindref="member">dbus_type_is_basic</ref><sp/>(current_type));</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(current_type))</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reader_set_basic_fixed_length<sp/>(reader,<sp/>current_type,<sp/>value);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(realign_root<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reader_set_basic_variable_length<sp/>(reader,<sp/>current_type,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>realign_root);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1417" refid="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" kindref="member">_dbus_type_reader_delete</ref><sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*realign_root)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref><sp/>block;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(realign_root<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" kindref="member">klass</ref><sp/>==<sp/>&amp;array_reader_class);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!replacement_block_init<sp/>(&amp;block,<sp/>reader))</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!replacement_block_replace<sp/>(&amp;block,</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realign_root))</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>replacement_block_free<sp/>(&amp;block);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/>*<sp/>Compares<sp/>two<sp/>readers,<sp/>which<sp/>must<sp/>be<sp/>iterating<sp/>over<sp/>the<sp/>same<sp/>value<sp/>data.</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/>*<sp/>Returns<sp/>#TRUE<sp/>if<sp/>the<sp/>first<sp/>parameter<sp/>is<sp/>further<sp/>along<sp/>than<sp/>the<sp/>second<sp/>parameter.</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*<sp/>@param<sp/>lhs<sp/>left-hand-side<sp/>(first)<sp/>parameter</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/>*<sp/>@param<sp/>rhs<sp/>left-hand-side<sp/>(first)<sp/>parameter</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/>*<sp/>@returns<sp/>whether<sp/>lhs<sp/>is<sp/>greater<sp/>than<sp/>rhs</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1452"><highlight class="normal">_dbus_type_reader_greater_than<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*lhs,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/>*rhs)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(lhs-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref><sp/>==<sp/>rhs-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&gt;<sp/>rhs-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusTypeWriter</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490" refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" kindref="member">_dbus_type_writer_init</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>*type_str,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>*value_str,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_pos)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref><sp/>=<sp/>byte_order;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>=<sp/>type_str;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>=<sp/>type_pos;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref><sp/>=<sp/>value_str;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>=<sp/>value_pos;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;writer<sp/>%p<sp/>init<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>writer,</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>?</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525" refid="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" kindref="member">_dbus_type_writer_init_types_delayed</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>*value_str,</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_pos)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" kindref="member">_dbus_type_writer_init</ref><sp/>(writer,<sp/>byte_order,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>value_str,<sp/>value_pos);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543" refid="group__DBusMarshal_1ga863b2f232a21582f9e6fe1951b09da91" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga863b2f232a21582f9e6fe1951b09da91" kindref="member">_dbus_type_writer_add_types</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>*type_str,</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="comment">/*<sp/>keeps<sp/>us<sp/>from<sp/>using<sp/>this<sp/>as<sp/>setter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>=<sp/>type_str;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>=<sp/>type_pos;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560" refid="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" kindref="member">_dbus_type_writer_remove_types</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581" refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" kindref="member">_dbus_type_writer_init_values_only</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value_str,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_pos)</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" kindref="member">_dbus_type_writer_init</ref><sp/>(writer,<sp/>byte_order,</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref>*)type_str,<sp/>type_pos,</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_str,<sp/>value_pos);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1596"><highlight class="normal">_dbus_type_writer_write_basic_no_typecode<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga54323d48921de8c5bd04ae01548312bb" kindref="member">_dbus_marshal_write_basic</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>our<sp/>parent<sp/>is<sp/>an<sp/>array,<sp/>things<sp/>are<sp/>a<sp/>little<sp/>bit<sp/>complicated.</highlight></codeline>
<codeline lineno="1612"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1613"><highlight class="comment"><sp/>*<sp/>The<sp/>parent<sp/>must<sp/>have<sp/>a<sp/>complete<sp/>element<sp/>type,<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="1614"><highlight class="comment"><sp/>*<sp/>&quot;i&quot;<sp/>or<sp/>&quot;aai&quot;<sp/>or<sp/>&quot;(ii)&quot;<sp/>or<sp/>&quot;a(ii)&quot;.<sp/>There<sp/>can&apos;t<sp/>be</highlight></codeline>
<codeline lineno="1615"><highlight class="comment"><sp/>*<sp/>unclosed<sp/>parens,<sp/>or<sp/>an<sp/>&quot;a&quot;<sp/>with<sp/>no<sp/>following<sp/>type.</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/>*<sp/>To<sp/>recurse,<sp/>the<sp/>only<sp/>allowed<sp/>operation<sp/>is<sp/>to<sp/>recurse<sp/>into<sp/>the</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/>*<sp/>first<sp/>type<sp/>in<sp/>the<sp/>element<sp/>type.<sp/>So<sp/>for<sp/>&quot;i&quot;<sp/>you<sp/>can&apos;t<sp/>recurse,<sp/>for</highlight></codeline>
<codeline lineno="1619"><highlight class="comment"><sp/>*<sp/>&quot;ai&quot;<sp/>you<sp/>can<sp/>recurse<sp/>into<sp/>the<sp/>array,<sp/>for<sp/>&quot;(ii)&quot;<sp/>you<sp/>can<sp/>recurse</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/>*<sp/>into<sp/>the<sp/>struct.</highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>recurse<sp/>into<sp/>the<sp/>array<sp/>for<sp/>&quot;ai&quot;,<sp/>then<sp/>you<sp/>must<sp/>specify</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/>*<sp/>&quot;i&quot;<sp/>for<sp/>the<sp/>element<sp/>type<sp/>of<sp/>the<sp/>array<sp/>you<sp/>recurse<sp/>into.</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/>*<sp/>While<sp/>inside<sp/>an<sp/>array<sp/>at<sp/>any<sp/>level,<sp/>we<sp/>need<sp/>to<sp/>avoid<sp/>writing<sp/>to</highlight></codeline>
<codeline lineno="1626"><highlight class="comment"><sp/>*<sp/>type_str,<sp/>since<sp/>the<sp/>type<sp/>only<sp/>appears<sp/>once<sp/>for<sp/>the<sp/>whole<sp/>array,</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/>*<sp/>it<sp/>does<sp/>not<sp/>appear<sp/>for<sp/>each<sp/>array<sp/>element.</highlight></codeline>
<codeline lineno="1628"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/>*<sp/>While<sp/>inside<sp/>an<sp/>array<sp/>type_pos<sp/>points<sp/>to<sp/>the<sp/>expected<sp/>next</highlight></codeline>
<codeline lineno="1630"><highlight class="comment"><sp/>*<sp/>typecode,<sp/>rather<sp/>than<sp/>the<sp/>next<sp/>place<sp/>we<sp/>could<sp/>write<sp/>a<sp/>typecode.</highlight></codeline>
<codeline lineno="1631"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal">writer_recurse_init_and_check<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_type,</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" kindref="member">_dbus_type_writer_init</ref><sp/>(sub,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>=<sp/>container_type;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>||</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref><sp/>||<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>))</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>=<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>&amp;&amp;<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>=<sp/><ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Writing<sp/>an<sp/>element<sp/>of<sp/>type<sp/>%s,<sp/>but<sp/>the<sp/>expected<sp/>type<sp/>here<sp/>is<sp/>%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>overall<sp/>signature<sp/>expected<sp/>here<sp/>was<sp/>&apos;%s&apos;<sp/>and<sp/>we<sp/>are<sp/>on<sp/>byte<sp/>%d<sp/>of<sp/>that<sp/>signature.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>),</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(expected),</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>),<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Writing<sp/>an<sp/>element<sp/>of<sp/>type<sp/>%s,<sp/>but<sp/>no<sp/>value<sp/>is<sp/>expected<sp/>here\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>overall<sp/>signature<sp/>expected<sp/>here<sp/>was<sp/>&apos;%s&apos;<sp/>and<sp/>we<sp/>are<sp/>on<sp/>byte<sp/>%d<sp/>of<sp/>that<sp/>signature.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>),</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>),<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;bad<sp/>array<sp/>element<sp/>or<sp/>variant<sp/>content<sp/>written&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>recurse<sp/>parent<sp/>%s<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>is_expectation<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;<sp/>enabled<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>),</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>,</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>?</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>recurse<sp/>sub<sp/>%s<sp/><sp/><sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>is_expectation<sp/>=<sp/>%d<sp/>enabled<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>),</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>,</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1699"><highlight class="normal">write_or_verify_typecode<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typecode)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>A<sp/>subwriter<sp/>inside<sp/>an<sp/>array<sp/>or<sp/>variant<sp/>will<sp/>have<sp/>type_pos</highlight></codeline>
<codeline lineno="1703"><highlight class="comment"><sp/><sp/><sp/>*<sp/>pointing<sp/>to<sp/>the<sp/>expected<sp/>typecode;<sp/>a<sp/>writer<sp/>not<sp/>inside<sp/>an<sp/>array</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/><sp/><sp/>*<sp/>or<sp/>variant<sp/>has<sp/>type_pos<sp/>pointing<sp/>to<sp/>the<sp/>next<sp/>place<sp/>to<sp/>insert<sp/>a</highlight></codeline>
<codeline lineno="1705"><highlight class="comment"><sp/><sp/><sp/>*<sp/>typecode.</highlight></codeline>
<codeline lineno="1706"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>write_or_verify<sp/>start<sp/>type_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;<sp/>enabled<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>?</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>)</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/>=<sp/>_dbus_string_get_byte<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/>typecode)</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Array<sp/>or<sp/>variant<sp/>type<sp/>requires<sp/>that<sp/>type<sp/>%s<sp/>be<sp/>written,<sp/>but<sp/>%s<sp/>was<sp/>written.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>overall<sp/>signature<sp/>expected<sp/>here<sp/>was<sp/>&apos;%s&apos;<sp/>and<sp/>we<sp/>are<sp/>on<sp/>byte<sp/>%d<sp/>of<sp/>that<sp/>signature.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(expected),<sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(typecode),</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>),<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Array<sp/>or<sp/>variant<sp/>type<sp/>wasn&apos;t<sp/>expecting<sp/>any<sp/>more<sp/>values<sp/>to<sp/>be<sp/>written<sp/>into<sp/>it,<sp/>but<sp/>a<sp/>value<sp/>%s<sp/>was<sp/>written.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>overall<sp/>signature<sp/>expected<sp/>here<sp/>was<sp/>&apos;%s&apos;<sp/>and<sp/>we<sp/>are<sp/>on<sp/>byte<sp/>%d<sp/>of<sp/>that<sp/>signature.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(typecode),</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>),<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;bad<sp/>type<sp/>inserted<sp/>somewhere<sp/>inside<sp/>an<sp/>array<sp/>or<sp/>variant&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>immediately<sp/>inside<sp/>an<sp/>array<sp/>we&apos;d<sp/>always<sp/>be<sp/>appending<sp/>an<sp/>element,</highlight></codeline>
<codeline lineno="1745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>the<sp/>expected<sp/>type<sp/>doesn&apos;t<sp/>change;<sp/>if<sp/>inside<sp/>a<sp/>struct<sp/>or<sp/>something</highlight></codeline>
<codeline lineno="1746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>below<sp/>an<sp/>array,<sp/>we<sp/>need<sp/>to<sp/>move<sp/>through<sp/>said<sp/>struct<sp/>or<sp/>something.</highlight></codeline>
<codeline lineno="1747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>!=<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" kindref="member">_dbus_string_insert_byte</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typecode))</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>write_or_verify<sp/>end<sp/>type_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1771"><highlight class="normal">writer_recurse_struct_or_dict_entry<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_char,</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*contained_type,</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*sub)</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME<sp/>right<sp/>now<sp/>contained_type<sp/>is<sp/>ignored;<sp/>we<sp/>could<sp/>probably</highlight></codeline>
<codeline lineno="1779"><highlight class="comment"><sp/><sp/><sp/>*<sp/>almost<sp/>trivially<sp/>fix<sp/>the<sp/>code<sp/>so<sp/>if<sp/>it&apos;s<sp/>present<sp/>we</highlight></codeline>
<codeline lineno="1780"><highlight class="comment"><sp/><sp/><sp/>*<sp/>write<sp/>it<sp/>out<sp/>and<sp/>then<sp/>set<sp/>type_pos_is_expectation</highlight></codeline>
<codeline lineno="1781"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>that<sp/>we&apos;ll<sp/>be<sp/>able<sp/>to<sp/>add<sp/>alignment<sp/>padding<sp/>and<sp/>the<sp/>typecode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" kindref="member">_dbus_string_alloc_space</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,<sp/>8))</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_or_verify_typecode<sp/>(sub,<sp/>begin_char))</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>insert<sp/>struct<sp/>typecode<sp/>after<sp/>prealloc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaa0964d662ad17c58eb044c1b153017a6" kindref="member">_dbus_string_insert_bytes</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>8)<sp/>-<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>alignment<sp/>padding<sp/>for<sp/>struct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1808"><highlight class="normal">writer_recurse_array<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*contained_type,</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*sub,</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_array_append)</highlight></codeline>
<codeline lineno="1814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alignment;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aligned;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>)</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" kindref="member">_dbus_string_equal_substring</ref><sp/>(contained_type,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.element_type_pos<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Writing<sp/>an<sp/>array<sp/>of<sp/>&apos;%s&apos;<sp/>but<sp/>this<sp/>is<sp/>incompatible<sp/>with<sp/>the<sp/>expected<sp/>type<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>parent<sp/>array\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(contained_type,</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len));</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;incompatible<sp/>type<sp/>for<sp/>child<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>&amp;&amp;<sp/>!is_array_append)</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>pad<sp/>+<sp/>4<sp/>bytes<sp/>for<sp/>the<sp/>array<sp/>length,<sp/>and<sp/>4<sp/>bytes<sp/>possible<sp/>padding</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>before<sp/>array<sp/>values</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" kindref="member">_dbus_string_alloc_space</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,<sp/>3<sp/>+<sp/>4<sp/>+<sp/>4))</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>move<sp/>to<sp/>point<sp/>to<sp/>the<sp/>element<sp/>type,<sp/>since<sp/>type_pos</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>be<sp/>the<sp/>expected<sp/>type<sp/>for<sp/>further<sp/>writes</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.element_type_pos<sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sub<sp/>is<sp/>a<sp/>toplevel/outermost<sp/>array<sp/>so<sp/>we<sp/>need<sp/>to<sp/>write<sp/>the<sp/>type<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>alloc<sp/>space<sp/>for<sp/>array<sp/>typecode,<sp/>element<sp/>signature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" kindref="member">_dbus_string_alloc_space</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>1<sp/>+<sp/>contained_type_len))</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" kindref="member">_dbus_string_insert_byte</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>))</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>insert<sp/>array<sp/>typecode<sp/>after<sp/>prealloc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" kindref="member">_dbus_string_copy_len</ref><sp/>(contained_type,</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,<sp/>contained_type_len,</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.element_type_pos))</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>array<sp/>element<sp/>typecodes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>parent<sp/>is<sp/>an<sp/>array,<sp/>we<sp/>hold<sp/>type_pos<sp/>pointing<sp/>at<sp/>the<sp/>array<sp/>element<sp/>type;</highlight></codeline>
<codeline lineno="1878"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>otherwise<sp/>advance<sp/>it<sp/>to<sp/>reflect<sp/>the<sp/>array<sp/>value<sp/>we<sp/>just<sp/>recursed<sp/>into</highlight></codeline>
<codeline lineno="1879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>!=<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>+=<sp/>1<sp/>+<sp/>contained_type_len;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>);<sp/></highlight><highlight class="comment">/*<sp/>because<sp/>it&apos;s<sp/>an<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>(or<sp/>jump<sp/>over,<sp/>if<sp/>is_array_append)<sp/>the<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos<sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_array_append)</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_type_writer_write_basic_no_typecode<sp/>(sub,<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;value))</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>array<sp/>len&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos<sp/>==<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>-<sp/>4);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>alignment<sp/>padding<sp/>for<sp/>array<sp/>elements</highlight></codeline>
<codeline lineno="1905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Note<sp/>that<sp/>we<sp/>write<sp/>the<sp/>padding<sp/>*even<sp/>for<sp/>empty<sp/>arrays*</highlight></codeline>
<codeline lineno="1906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>avoid<sp/>wonky<sp/>special<sp/>cases</highlight></codeline>
<codeline lineno="1907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alignment<sp/>=<sp/>element_type_get_alignment<sp/>(contained_type,<sp/>contained_type_start);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aligned<sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>alignment);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aligned<sp/>!=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>)</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_array_append)</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaa0964d662ad17c58eb044c1b153017a6" kindref="member">_dbus_string_insert_bytes</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aligned<sp/>-<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>alignment<sp/>padding&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>=<sp/>aligned;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos<sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_array_append)</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>len;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos,<sp/>4)<sp/>==</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos);</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" kindref="member">_dbus_unpack_uint32</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4));</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>enabled,<sp/>so<sp/>we<sp/>won&apos;t<sp/>write<sp/>the<sp/>len_pos;<sp/>set<sp/>it<sp/>to<sp/>-1<sp/>to<sp/>so<sp/>indicate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos<sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos<sp/>&lt;<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(is_array_append<sp/>||<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos<sp/>==<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>recurse<sp/>array<sp/>done<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;<sp/>array<sp/>start_pos<sp/>=<sp/>%d<sp/>len_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sub,</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>?</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Variant<sp/>value<sp/>will<sp/>normally<sp/>have:</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/>*<sp/><sp/><sp/>1<sp/>byte<sp/>signature<sp/>length<sp/>not<sp/>including<sp/>nul</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/>*<sp/><sp/><sp/>signature<sp/>typecodes<sp/>(nul<sp/>terminated)</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/>*<sp/><sp/><sp/>padding<sp/>to<sp/>alignment<sp/>of<sp/>contained<sp/>type</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/>*<sp/><sp/><sp/>body<sp/>according<sp/>to<sp/>signature</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/>*<sp/>The<sp/>signature<sp/>string<sp/>can<sp/>only<sp/>have<sp/>a<sp/>single<sp/>type</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/>*<sp/>in<sp/>it<sp/>but<sp/>that<sp/>type<sp/>may<sp/>be<sp/>complex/recursive.</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/>*<sp/>So<sp/>a<sp/>typical<sp/>variant<sp/>type<sp/>with<sp/>the<sp/>integer<sp/>3<sp/>will<sp/>have<sp/>these</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/>*<sp/>octets:</highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/>*<sp/><sp/><sp/>0x1<sp/>&apos;i&apos;<sp/>&apos;\0&apos;<sp/>[1<sp/>byte<sp/>padding<sp/>to<sp/>alignment<sp/>boundary]<sp/>0x0<sp/>0x0<sp/>0x0<sp/>0x3</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/>*<sp/>The<sp/>main<sp/>world<sp/>of<sp/>hurt<sp/>for<sp/>writing<sp/>out<sp/>a<sp/>variant<sp/>is<sp/>that<sp/>the<sp/>type</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/>*<sp/>string<sp/>is<sp/>the<sp/>same<sp/>string<sp/>as<sp/>the<sp/>value<sp/>string.<sp/>Which<sp/>means</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"><sp/>*<sp/>inserting<sp/>to<sp/>the<sp/>type<sp/>string<sp/>will<sp/>move<sp/>the<sp/>value_pos;<sp/>and<sp/>it<sp/>means</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/>*<sp/>that<sp/>inserting<sp/>to<sp/>the<sp/>type<sp/>string<sp/>could<sp/>break<sp/>type<sp/>alignment.</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1981"><highlight class="normal">writer_recurse_variant<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*contained_type,</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*sub)</highlight></codeline>
<codeline lineno="1986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contained_alignment;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>for<sp/>the<sp/>worst<sp/>case,<sp/>which<sp/>is<sp/>1<sp/>byte<sp/>sig</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>length,<sp/>nul<sp/>byte<sp/>at<sp/>end<sp/>of<sp/>sig,<sp/>and<sp/>7<sp/>bytes<sp/>padding<sp/>to</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>8-boundary.</highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" kindref="member">_dbus_string_alloc_space</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,<sp/>contained_type_len<sp/>+<sp/>9))</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>VARIANT<sp/>typecode<sp/>to<sp/>the<sp/>parent&apos;s<sp/>type<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_or_verify_typecode<sp/>(writer,<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>))</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>not<sp/>enabled,<sp/>mark<sp/>that<sp/>we<sp/>have<sp/>no<sp/>type_str<sp/>anymore<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we&apos;re<sp/>enabled<sp/>then<sp/>continue<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" kindref="member">_dbus_string_insert_byte</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len))</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>variant<sp/>type<sp/>sig<sp/>len&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Here<sp/>we<sp/>switch<sp/>over<sp/>to<sp/>the<sp/>expected<sp/>type<sp/>sig<sp/>we&apos;re<sp/>about<sp/>to<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" kindref="member">_dbus_string_copy_len</ref><sp/>(contained_type,<sp/>contained_type_start,<sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>))</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>variant<sp/>type<sp/>sig&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>+=<sp/>contained_type_len;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" kindref="member">_dbus_string_insert_byte</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>))</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>variant<sp/>type<sp/>nul<sp/>termination&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>contained_alignment<sp/>=<sp/><ref refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" kindref="member">_dbus_type_get_alignment</ref><sp/>(<ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref><sp/>(contained_type,<sp/>contained_type_start));</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaa0964d662ad17c58eb044c1b153017a6" kindref="member">_dbus_string_insert_bytes</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>contained_alignment)<sp/>-<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;should<sp/>not<sp/>have<sp/>failed<sp/>to<sp/>insert<sp/>alignment<sp/>padding<sp/>for<sp/>variant<sp/>body&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>contained_alignment);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2052"><highlight class="normal">_dbus_type_writer_recurse_contained_len<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_type,</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*contained_type,</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*sub,</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_array_append)</highlight></codeline>
<codeline lineno="2059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>writer_recurse_init_and_check<sp/>(writer,<sp/>container_type,<sp/>sub);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(container_type)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>:</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer_recurse_struct_or_dict_entry<sp/>(writer,</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref>,</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type,</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,<sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref>:</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer_recurse_struct_or_dict_entry<sp/>(writer,</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" kindref="member">DBUS_DICT_ENTRY_BEGIN_CHAR</ref>,</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type,</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,<sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>:</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer_recurse_array<sp/>(writer,</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type,<sp/>contained_type_start,<sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,<sp/>is_array_append);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>:</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer_recurse_variant<sp/>(writer,</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type,<sp/>contained_type_start,<sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;tried<sp/>to<sp/>recurse<sp/>into<sp/>type<sp/>that<sp/>doesn&apos;t<sp/>support<sp/>that&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2106" refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container_type,</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*contained_type,</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*sub)</highlight></codeline>
<codeline lineno="2111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contained_type_len;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contained_type)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/>contained_type_len<sp/>=<sp/>find_len_of_complete_type<sp/>(contained_type,<sp/>contained_type_start);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>contained_type_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_type_writer_recurse_contained_len<sp/>(writer,<sp/>container_type,</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type,</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2140" refid="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" kindref="member">_dbus_type_writer_append_array</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*contained_type,</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*sub)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contained_type_len;</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contained_type)</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>contained_type_len<sp/>=<sp/>find_len_of_complete_type<sp/>(contained_type,<sp/>contained_type_start);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/>contained_type_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_type_writer_recurse_contained_len<sp/>(writer,<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>,</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type,</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_start,</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_type_len,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal">writer_get_array_len<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer)</highlight></codeline>
<codeline lineno="2162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>-<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos;</highlight></codeline>
<codeline lineno="2165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2176" refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="2178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>type_pos_is_expectation<sp/>never<sp/>gets<sp/>unset<sp/>once<sp/>set,<sp/>or<sp/>we&apos;d<sp/>get<sp/>all<sp/>hosed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>||</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>&amp;&amp;<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>));</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>unrecurse<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>is_expectation<sp/>=<sp/>%d<sp/>container_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>,</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>));</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>unrecurse<sp/>sub<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>is_expectation<sp/>=<sp/>%d<sp/>container_type<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>,</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref>));</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>)</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_or_verify_typecode<sp/>(sub,<sp/><ref refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" kindref="member">DBUS_STRUCT_END_CHAR</ref>))</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref>)</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_or_verify_typecode<sp/>(sub,<sp/><ref refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" kindref="member">DBUS_DICT_ENTRY_END_CHAR</ref>))</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos<sp/>&gt;=<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>len_pos<sp/>==<sp/>-1<sp/>if<sp/>we<sp/>weren&apos;t<sp/>enabled<sp/>when<sp/>we<sp/>passed<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>len;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>array<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>writer_get_array_len<sp/>(sub);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" kindref="member">_dbus_marshal_set_uint32</ref><sp/>(sub-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos,</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref>);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>filled<sp/>in<sp/>sub<sp/>array<sp/>len<sp/>to<sp/>%u<sp/>at<sp/>len_pos<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>not<sp/>filling<sp/>in<sp/>sub<sp/>array<sp/>len<sp/>because<sp/>we<sp/>were<sp/>disabled<sp/>when<sp/>we<sp/>passed<sp/>the<sp/>len\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>get<sp/>type_pos<sp/>right<sp/>for<sp/>the<sp/>parent<sp/>writer.<sp/>Here<sp/>are<sp/>the<sp/>cases:</highlight></codeline>
<codeline lineno="2229"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2230"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Cases<sp/>!writer-&gt;type_pos_is_expectation:</highlight></codeline>
<codeline lineno="2231"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>(in<sp/>these<sp/>cases<sp/>we<sp/>want<sp/>to<sp/>update<sp/>to<sp/>the<sp/>new<sp/>insertion<sp/>point)</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2233"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>if<sp/>we<sp/>recursed<sp/>into<sp/>a<sp/>STRUCT<sp/>then<sp/>we<sp/>didn&apos;t<sp/>know<sp/>in<sp/>advance</highlight></codeline>
<codeline lineno="2234"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>what<sp/>the<sp/>types<sp/>in<sp/>the<sp/>struct<sp/>would<sp/>be;<sp/>so<sp/>we<sp/>have<sp/>to<sp/>fill<sp/>in</highlight></codeline>
<codeline lineno="2235"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>that<sp/>information<sp/>now.</highlight></codeline>
<codeline lineno="2236"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;type_pos<sp/>=<sp/>sub-&gt;type_pos</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2238"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>if<sp/>we<sp/>recursed<sp/>into<sp/>anything<sp/>else,<sp/>we<sp/>knew<sp/>the<sp/>full<sp/>array</highlight></codeline>
<codeline lineno="2239"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>type,<sp/>or<sp/>knew<sp/>the<sp/>single<sp/>typecode<sp/>marking<sp/>VARIANT,<sp/>so</highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>writer-&gt;type_pos<sp/>is<sp/>already<sp/>correct.</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;type_pos<sp/>should<sp/>remain<sp/>as-is</highlight></codeline>
<codeline lineno="2242"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2243"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>note<sp/>that<sp/>the<sp/>parent<sp/>is<sp/>never<sp/>an<sp/>ARRAY<sp/>or<sp/>VARIANT,<sp/>if<sp/>it<sp/>were</highlight></codeline>
<codeline lineno="2244"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>then<sp/>type_pos_is_expectation<sp/>would<sp/>be<sp/>TRUE.<sp/>The<sp/>parent</highlight></codeline>
<codeline lineno="2245"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>is<sp/>thus<sp/>known<sp/>to<sp/>be<sp/>a<sp/>toplevel<sp/>or<sp/>STRUCT.</highlight></codeline>
<codeline lineno="2246"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2247"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Cases<sp/>where<sp/>writer-&gt;type_pos_is_expectation:</highlight></codeline>
<codeline lineno="2248"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>(in<sp/>these<sp/>cases<sp/>we<sp/>want<sp/>to<sp/>update<sp/>to<sp/>next<sp/>expected<sp/>type<sp/>to<sp/>write)</highlight></codeline>
<codeline lineno="2249"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2250"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>we<sp/>recursed<sp/>from<sp/>STRUCT<sp/>into<sp/>STRUCT<sp/>and<sp/>we<sp/>didn&apos;t<sp/>increment</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>type_pos<sp/>in<sp/>the<sp/>parent<sp/>just<sp/>to<sp/>stay<sp/>consistent<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>!writer-&gt;type_pos_is_expectation<sp/>case<sp/>(though<sp/>we<sp/>could</highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>special-case<sp/>this<sp/>in<sp/>recurse_struct<sp/>instead<sp/>if<sp/>we<sp/>wanted)</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;type_pos<sp/>=<sp/>sub-&gt;type_pos</highlight></codeline>
<codeline lineno="2255"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>we<sp/>recursed<sp/>from<sp/>STRUCT<sp/>into<sp/>ARRAY<sp/>or<sp/>VARIANT<sp/>and<sp/>type_pos</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>for<sp/>parent<sp/>should<sp/>have<sp/>been<sp/>incremented<sp/>already</highlight></codeline>
<codeline lineno="2258"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;type_pos<sp/>should<sp/>remain<sp/>as-is</highlight></codeline>
<codeline lineno="2259"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>we<sp/>recursed<sp/>from<sp/>ARRAY<sp/>into<sp/>a<sp/>sub-element,<sp/>so<sp/>type_pos<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2261"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>parent<sp/>is<sp/>the<sp/>element<sp/>type<sp/>and<sp/>should<sp/>remain<sp/>the<sp/>element<sp/>type</highlight></codeline>
<codeline lineno="2262"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>for<sp/>the<sp/>benefit<sp/>of<sp/>the<sp/>next<sp/>child<sp/>element</highlight></codeline>
<codeline lineno="2263"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;type_pos<sp/>should<sp/>remain<sp/>as-is</highlight></codeline>
<codeline lineno="2264"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2265"><highlight class="comment"><sp/><sp/><sp/>*<sp/>-<sp/>we<sp/>recursed<sp/>from<sp/>VARIANT<sp/>into<sp/>its<sp/>value,<sp/>so<sp/>type_pos<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2266"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>parent<sp/>makes<sp/>no<sp/>difference<sp/>since<sp/>there&apos;s<sp/>only<sp/>one<sp/>value</highlight></codeline>
<codeline lineno="2267"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/>and<sp/>we<sp/>just<sp/>finished<sp/>writing<sp/>it<sp/>and<sp/>won&apos;t<sp/>use<sp/>type_pos<sp/>again</highlight></codeline>
<codeline lineno="2268"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;type_pos<sp/>should<sp/>remain<sp/>as-is</highlight></codeline>
<codeline lineno="2269"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2270"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2271"><highlight class="comment"><sp/><sp/><sp/>*<sp/>For<sp/>all<sp/>these,<sp/>DICT_ENTRY<sp/>is<sp/>the<sp/>same<sp/>as<sp/>STRUCT</highlight></codeline>
<codeline lineno="2272"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref><sp/>||</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref><sp/>||</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref><sp/>||</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>))</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Advance<sp/>the<sp/>parent<sp/>to<sp/>the<sp/>next<sp/>struct<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>=<sp/>sub-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>unrecursed<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>remaining<sp/>sig<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>?</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2308" refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="2311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>ensure<sp/>that<sp/>our<sp/>type<sp/>realloc<sp/>will<sp/>succeed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref><sp/>&amp;&amp;<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" kindref="member">_dbus_string_alloc_space</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_type_writer_write_basic_no_typecode<sp/>(writer,<sp/>type,<sp/>value))</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_or_verify_typecode<sp/>(writer,<sp/>type))</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>write<sp/>typecode<sp/>after<sp/>prealloc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>basic<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>is_expectation<sp/>=<sp/>%d<sp/>enabled<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>,</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2356" refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" kindref="member">_dbus_type_writer_write_fixed_multi</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type,</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(element_type));</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(n_elements<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>entering<sp/>fixed<sp/>multi<sp/>type_pos<sp/>=<sp/>%d<sp/>value_pos<sp/>=<sp/>%d<sp/>n_elements<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>n_elements);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_or_verify_typecode<sp/>(writer,<sp/>element_type))</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;OOM<sp/>should<sp/>not<sp/>happen<sp/>if<sp/>only<sp/>verifying<sp/>typecode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga990da87b984d8917da26b89a6470fdf5" kindref="member">_dbus_marshal_write_fixed_multi</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type,</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements,</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>))</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>type<sp/>writer<sp/>%p<sp/>fixed<sp/>multi<sp/>written<sp/>new<sp/>type_pos<sp/>=<sp/>%d<sp/>new<sp/>value_pos<sp/>=<sp/>%d<sp/>n_elements<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>n_elements);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal">enable_if_after<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*start_after)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_after)</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>&amp;&amp;<sp/>_dbus_type_reader_greater_than<sp/>(reader,<sp/>start_after))</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_type_writer_set_enabled<sp/>(writer,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;ENABLING<sp/>writer<sp/>%p<sp/>at<sp/>%d<sp/>because<sp/>reader<sp/>at<sp/>value_pos<sp/>%d<sp/>is<sp/>after<sp/>reader<sp/>at<sp/>value_pos<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,<sp/>start_after-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((!writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>&amp;&amp;<sp/>!_dbus_type_reader_greater_than<sp/>(reader,<sp/>start_after))<sp/>||</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>&amp;&amp;<sp/>_dbus_type_reader_greater_than<sp/>(reader,<sp/>start_after)));</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2416"><highlight class="normal">append_fixup<sp/>(<ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fixups,</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref><sp/>*fixup)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref><sp/>*f;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>f<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member">dbus_new</ref><sp/>(<ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>*f<sp/>=<sp/>*fixup;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusList_1gad99045e79db46159babe69718f343053" kindref="member">_dbus_list_append</ref><sp/>(fixups,<sp/>f))</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(f);</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(f-&gt;<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref><sp/>==<sp/>fixup-&gt;<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(f-&gt;<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref><sp/>==<sp/>fixup-&gt;<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref>);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>loop<sp/>is<sp/>trivial<sp/>if<sp/>you<sp/>ignore<sp/>all<sp/>the<sp/>start_after<sp/>nonsense,</highlight></codeline>
<codeline lineno="2440"><highlight class="comment"><sp/>*<sp/>so<sp/>if<sp/>you&apos;re<sp/>trying<sp/>to<sp/>figure<sp/>it<sp/>out,<sp/>start<sp/>by<sp/>ignoring<sp/>that</highlight></codeline>
<codeline lineno="2441"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2443"><highlight class="normal">writer_write_reader_helper<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*start_after,</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_pos,</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_len,</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fixups,</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_start_after)</highlight></codeline>
<codeline lineno="2450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_type;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((current_type<sp/>=<sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader))<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1gaa0c4c8aa34fa266daa55bd37bdad39b8" kindref="member">dbus_type_is_container</ref><sp/>(current_type))</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>subreader;</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>subwriter;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*sig_str;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig_start;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig_len;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>enabled_at_recurse;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>past_start_after;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reader_array_len_pos;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reader_array_start_pos;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>this_is_start_after;</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type_pos<sp/>is<sp/>checked<sp/>since<sp/>e.g.<sp/>in<sp/>a<sp/>struct<sp/>the<sp/>struct</highlight></codeline>
<codeline lineno="2469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>its<sp/>first<sp/>field<sp/>have<sp/>the<sp/>same<sp/>value_pos.</highlight></codeline>
<codeline lineno="2470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>type_str<sp/>will<sp/>differ<sp/>in<sp/>reader/start_after<sp/>for<sp/>variants</highlight></codeline>
<codeline lineno="2471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>where<sp/>type_str<sp/>is<sp/>inside<sp/>the<sp/>value_str</highlight></codeline>
<codeline lineno="2472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inside_start_after<sp/>&amp;&amp;<sp/>start_after<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>==<sp/>start_after-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref><sp/>==<sp/>start_after-&gt;<ref refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" kindref="member">type_str</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref><sp/>==<sp/>start_after-&gt;<ref refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" kindref="member">type_pos</ref>)</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_is_start_after<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_is_start_after<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(reader,<sp/>&amp;subreader);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_array_len_pos<sp/>=<sp/><ref refid="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" kindref="member">ARRAY_READER_LEN_POS</ref><sp/>(&amp;subreader);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_array_start_pos<sp/>=<sp/>subreader.<ref refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be" kindref="member">u</ref>.array.start_pos;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>quiet<sp/>gcc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_array_len_pos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_array_start_pos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" kindref="member">_dbus_type_reader_get_signature</ref><sp/>(&amp;subreader,<sp/>&amp;sig_str,</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sig_start,<sp/>&amp;sig_len);</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;about<sp/>to<sp/>recurse<sp/>into<sp/>%s<sp/>reader<sp/>at<sp/>%d<sp/>subreader<sp/>at<sp/>%d<sp/>writer<sp/>at<sp/>%d<sp/>start_after<sp/>reader<sp/>at<sp/>%d<sp/>write<sp/>target<sp/>len<sp/>%d<sp/>inside_start_after<sp/>=<sp/>%d<sp/>this_is_start_after<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type),</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subreader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after<sp/>?<sp/>start_after-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>:<sp/>-1,</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>),</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_start_after,<sp/>this_is_start_after);</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inside_start_after<sp/>&amp;&amp;<sp/>!this_is_start_after)</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_if_after<sp/>(writer,<sp/>&amp;subreader,<sp/>start_after);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled_at_recurse<sp/>=<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_type_writer_recurse_contained_len<sp/>(writer,<sp/>current_type,</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sig_str,<sp/>sig_start,<sp/>sig_len,</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;subwriter,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>))</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recursed<sp/>into<sp/>subwriter<sp/>at<sp/>%d<sp/>write<sp/>target<sp/>len<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subwriter.<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(subwriter.<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>));</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer_write_reader_helper<sp/>(&amp;subwriter,<sp/>&amp;subreader,<sp/>start_after,</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_pos,<sp/>start_after_new_len,</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixups,</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_start_after<sp/>||</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_is_start_after))</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;about<sp/>to<sp/>unrecurse<sp/>from<sp/>%s<sp/>subreader<sp/>at<sp/>%d<sp/>writer<sp/>at<sp/>%d<sp/>subwriter<sp/>at<sp/>%d<sp/><sp/>write<sp/>target<sp/>len<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type),</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subreader.<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subwriter.<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>));</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inside_start_after<sp/>&amp;&amp;<sp/>!this_is_start_after)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_if_after<sp/>(writer,<sp/>&amp;subreader,<sp/>start_after);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>past_start_after<sp/>=<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(writer,<sp/>&amp;subwriter))</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>weren&apos;t<sp/>enabled<sp/>when<sp/>we<sp/>recursed,<sp/>we<sp/>didn&apos;t</highlight></codeline>
<codeline lineno="2546"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>write<sp/>an<sp/>array<sp/>len;<sp/>if<sp/>we<sp/>passed<sp/>start_after</highlight></codeline>
<codeline lineno="2547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>somewhere<sp/>inside<sp/>the<sp/>array,<sp/>then<sp/>we<sp/>need<sp/>to<sp/>generate</highlight></codeline>
<codeline lineno="2548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>fixup.</highlight></codeline>
<codeline lineno="2549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_after<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!enabled_at_recurse<sp/>&amp;&amp;<sp/>past_start_after<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixups<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref><sp/>fixup;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written_after_start_after;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_before_start_after;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_len;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>subwriter<sp/>access<sp/>is<sp/>moderately<sp/>unkosher<sp/>since<sp/>we</highlight></codeline>
<codeline lineno="2561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>already<sp/>unrecursed,<sp/>but<sp/>it<sp/>works<sp/>as<sp/>long<sp/>as<sp/>unrecurse</highlight></codeline>
<codeline lineno="2562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>doesn&apos;t<sp/>break<sp/>us<sp/>on<sp/>purpose</highlight></codeline>
<codeline lineno="2563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_written_after_start_after<sp/>=<sp/>writer_get_array_len<sp/>(&amp;subwriter);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_before_start_after<sp/>=</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref><sp/>-<sp/>reader_array_start_pos;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixup.<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref><sp/>=<sp/>reader_array_len_pos;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixup.<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref><sp/>=</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_before_start_after<sp/>+</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_len<sp/>+</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_written_after_start_after;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_DBUS_ALIGN_VALUE<sp/>(fixup.<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>,<sp/>4)<sp/>==</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>fixup.<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_len<sp/>=<sp/><ref refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" kindref="member">_dbus_unpack_uint32</ref><sp/>(reader-&gt;<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref>,</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data_len<sp/>(reader-&gt;<ref refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixup.<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>,<sp/>4));</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_len<sp/>!=<sp/>fixup.<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref><sp/>&amp;&amp;<sp/>!append_fixup<sp/>(fixups,<sp/>&amp;fixup))</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Generated<sp/>fixup<sp/>len_pos_in_reader<sp/>=<sp/>%d<sp/>new_len<sp/>=<sp/>%d<sp/>reader_array_start_pos<sp/>=<sp/>%d<sp/>start_after-&gt;value_pos<sp/>=<sp/>%d<sp/>bytes_before_start_after<sp/>=<sp/>%d<sp/>start_after_new_len<sp/>=<sp/>%d<sp/>bytes_written_after_start_after<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixup.<ref refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" kindref="member">len_pos_in_reader</ref>,</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixup.<ref refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" kindref="member">new_len</ref>,</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader_array_start_pos,</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_before_start_after,</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_len,</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_written_after_start_after);</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>val;</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" kindref="member">dbus_type_is_basic</ref><sp/>(current_type));</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>basic<sp/>value<sp/>%s<sp/>at<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type),</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader-&gt;<ref refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" kindref="member">value_pos</ref>);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(reader,<sp/>&amp;val);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Writing<sp/>basic<sp/>value<sp/>%s<sp/>at<sp/>%d<sp/>write<sp/>target<sp/>len<sp/>%d<sp/>inside_start_after<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type),</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>),</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside_start_after);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inside_start_after)</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_if_after<sp/>(writer,<sp/>reader,<sp/>start_after);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(writer,<sp/>current_type,<sp/>&amp;val))</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>RECURSIVE_MARSHAL_WRITE_TRACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>basic<sp/>value<sp/>%s,<sp/>new<sp/>value_pos<sp/>%d<sp/>write<sp/>target<sp/>len<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(current_type),</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>));</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(reader);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixups)</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>apply_and_free_fixups<sp/>(fixups,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="comment">/*<sp/>NULL<sp/>for<sp/>reader<sp/>to<sp/>apply<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2643"><highlight class="comment"><sp/>*<sp/>Iterate<sp/>through<sp/>all<sp/>values<sp/>in<sp/>the<sp/>given<sp/>reader,<sp/>writing<sp/>a<sp/>copy<sp/>of</highlight></codeline>
<codeline lineno="2644"><highlight class="comment"><sp/>*<sp/>each<sp/>value<sp/>to<sp/>the<sp/>writer.<sp/><sp/>The<sp/>reader<sp/>will<sp/>be<sp/>moved<sp/>forward<sp/>to<sp/>its</highlight></codeline>
<codeline lineno="2645"><highlight class="comment"><sp/>*<sp/>end<sp/>position.</highlight></codeline>
<codeline lineno="2646"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2647"><highlight class="comment"><sp/>*<sp/>If<sp/>a<sp/>reader<sp/>start_after<sp/>is<sp/>provided,<sp/>it<sp/>should<sp/>be<sp/>a<sp/>reader<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="2648"><highlight class="comment"><sp/>*<sp/>same<sp/>data<sp/>as<sp/>the<sp/>reader<sp/>to<sp/>be<sp/>written.<sp/>Only<sp/>values<sp/>occurring<sp/>after</highlight></codeline>
<codeline lineno="2649"><highlight class="comment"><sp/>*<sp/>the<sp/>value<sp/>pointed<sp/>to<sp/>by<sp/>start_after<sp/>will<sp/>be<sp/>written<sp/>to<sp/>the<sp/>writer.</highlight></codeline>
<codeline lineno="2650"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2651"><highlight class="comment"><sp/>*<sp/>If<sp/>start_after<sp/>is<sp/>provided,<sp/>then<sp/>the<sp/>copy<sp/>of<sp/>the<sp/>reader<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="2652"><highlight class="comment"><sp/>*<sp/>partial.<sp/>This<sp/>means<sp/>that<sp/>array<sp/>lengths<sp/>will<sp/>not<sp/>have<sp/>been<sp/>copied.</highlight></codeline>
<codeline lineno="2653"><highlight class="comment"><sp/>*<sp/>The<sp/>assumption<sp/>is<sp/>that<sp/>you<sp/>wrote<sp/>a<sp/>new<sp/>version<sp/>of<sp/>the<sp/>value<sp/>at</highlight></codeline>
<codeline lineno="2654"><highlight class="comment"><sp/>*<sp/>start_after<sp/>to<sp/>the<sp/>writer.<sp/>You<sp/>have<sp/>to<sp/>pass<sp/>in<sp/>the<sp/>start<sp/>position</highlight></codeline>
<codeline lineno="2655"><highlight class="comment"><sp/>*<sp/>and<sp/>length<sp/>of<sp/>the<sp/>new<sp/>value.<sp/>(If<sp/>you<sp/>are<sp/>deleting<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="2656"><highlight class="comment"><sp/>*<sp/>at<sp/>start_after,<sp/>pass<sp/>in<sp/>0<sp/>for<sp/>the<sp/>length.)</highlight></codeline>
<codeline lineno="2657"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2658"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>fixups<sp/>parameter<sp/>is<sp/>non-#NULL,<sp/>then<sp/>any<sp/>array<sp/>length<sp/>that</highlight></codeline>
<codeline lineno="2659"><highlight class="comment"><sp/>*<sp/>was<sp/>read<sp/>but<sp/>not<sp/>written<sp/>due<sp/>to<sp/>start_after<sp/>will<sp/>be<sp/>provided</highlight></codeline>
<codeline lineno="2660"><highlight class="comment"><sp/>*<sp/>as<sp/>a<sp/>#DBusArrayLenFixup.<sp/>The<sp/>fixup<sp/>contains<sp/>the<sp/>position<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="2661"><highlight class="comment"><sp/>*<sp/>array<sp/>length<sp/>in<sp/>the<sp/>source<sp/>data,<sp/>and<sp/>the<sp/>correct<sp/>array<sp/>length</highlight></codeline>
<codeline lineno="2662"><highlight class="comment"><sp/>*<sp/>assuming<sp/>you<sp/>combine<sp/>the<sp/>source<sp/>data<sp/>before<sp/>start_after<sp/>with</highlight></codeline>
<codeline lineno="2663"><highlight class="comment"><sp/>*<sp/>the<sp/>written<sp/>data<sp/>at<sp/>start_after<sp/>and<sp/>beyond.</highlight></codeline>
<codeline lineno="2664"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2665"><highlight class="comment"><sp/>*<sp/>@param<sp/>writer<sp/>the<sp/>writer<sp/>to<sp/>copy<sp/>to</highlight></codeline>
<codeline lineno="2666"><highlight class="comment"><sp/>*<sp/>@param<sp/>reader<sp/>the<sp/>reader<sp/>to<sp/>copy<sp/>from</highlight></codeline>
<codeline lineno="2667"><highlight class="comment"><sp/>*<sp/>@param<sp/>start_after<sp/>#NULL<sp/>or<sp/>a<sp/>reader<sp/>showing<sp/>where<sp/>to<sp/>start</highlight></codeline>
<codeline lineno="2668"><highlight class="comment"><sp/>*<sp/>@param<sp/>start_after_new_pos<sp/>the<sp/>position<sp/>of<sp/>start_after<sp/>equivalent<sp/>in<sp/>the<sp/>target<sp/>data</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/>*<sp/>@param<sp/>start_after_new_len<sp/>the<sp/>length<sp/>of<sp/>start_after<sp/>equivalent<sp/>in<sp/>the<sp/>target<sp/>data</highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/>*<sp/>@param<sp/>fixups<sp/>list<sp/>to<sp/>append<sp/>#DBusArrayLenFixup<sp/>if<sp/>the<sp/>write<sp/>was<sp/>partial</highlight></codeline>
<codeline lineno="2671"><highlight class="comment"><sp/>*<sp/>@returns<sp/>#FALSE<sp/>if<sp/>no<sp/>memory</highlight></codeline>
<codeline lineno="2672"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2674"><highlight class="normal">_dbus_type_writer_write_reader_partial<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*start_after,</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_pos,</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_len,</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fixups)</highlight></codeline>
<codeline lineno="2680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>orig;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_type_len;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_value_len;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_bytes;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_enabled;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/>orig<sp/>=<sp/>*writer;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/>orig_type_len<sp/>=<sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>);</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/>orig_value_len<sp/>=<sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>);</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/>orig_enabled<sp/>=<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_after)</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_type_writer_set_enabled<sp/>(writer,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer_write_reader_helper<sp/>(writer,<sp/>reader,<sp/>start_after,</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_pos,</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_after_new_len,</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixups,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>))</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/>_dbus_type_writer_set_enabled<sp/>(writer,<sp/>orig_enabled);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer-&gt;<ref refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" kindref="member">type_pos_is_expectation</ref>)</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_bytes<sp/>=<sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>)<sp/>-<sp/>orig_type_len;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" kindref="member">_dbus_string_delete</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>,<sp/>orig.<ref refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" kindref="member">type_pos</ref>,<sp/>new_bytes);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/>new_bytes<sp/>=<sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>)<sp/>-<sp/>orig_value_len;</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" kindref="member">_dbus_string_delete</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,<sp/>orig.<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>,<sp/>new_bytes);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/>*writer<sp/>=<sp/>orig;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2728" refid="group__DBusMarshal_1ga4905750705d220efe9dfc71f49bedc11" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga4905750705d220efe9dfc71f49bedc11" kindref="member">_dbus_type_writer_write_reader</ref><sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader)</highlight></codeline>
<codeline lineno="2730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_type_writer_write_reader_partial<sp/>(writer,<sp/>reader,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2735"><highlight class="comment"><sp/>*<sp/>If<sp/>disabled,<sp/>a<sp/>writer<sp/>can<sp/>still<sp/>be<sp/>iterated<sp/>forward<sp/>and<sp/>recursed/unrecursed</highlight></codeline>
<codeline lineno="2736"><highlight class="comment"><sp/>*<sp/>but<sp/>won&apos;t<sp/>write<sp/>any<sp/>values.<sp/>Types<sp/>will<sp/>still<sp/>be<sp/>written<sp/>unless<sp/>the</highlight></codeline>
<codeline lineno="2737"><highlight class="comment"><sp/>*<sp/>writer<sp/>is<sp/>a<sp/>&quot;values<sp/>only&quot;<sp/>writer,<sp/>because<sp/>the<sp/>writer<sp/>needs<sp/>access<sp/>to</highlight></codeline>
<codeline lineno="2738"><highlight class="comment"><sp/>*<sp/>a<sp/>valid<sp/>signature<sp/>to<sp/>be<sp/>able<sp/>to<sp/>iterate.</highlight></codeline>
<codeline lineno="2739"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2740"><highlight class="comment"><sp/>*<sp/>@param<sp/>writer<sp/>the<sp/>type<sp/>writer</highlight></codeline>
<codeline lineno="2741"><highlight class="comment"><sp/>*<sp/>@param<sp/>enabled<sp/>#TRUE<sp/>if<sp/>values<sp/>should<sp/>be<sp/>written</highlight></codeline>
<codeline lineno="2742"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal">_dbus_type_writer_set_enabled<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><sp/><sp/>*writer,</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled)</highlight></codeline>
<codeline lineno="2746"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" kindref="member">enabled</ref><sp/>=<sp/>enabled<sp/>!=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>DBusMarshal<sp/>group<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>tests<sp/>in<sp/>dbus-marshal-recursive-util.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-marshal-recursive.c"/>
  </compounddef>
</doxygen>
