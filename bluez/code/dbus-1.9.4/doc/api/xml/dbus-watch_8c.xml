<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-watch_8c" kind="file" language="C++">
    <compoundname>dbus-watch.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-watch_8h" local="yes">dbus-watch.h</includes>
    <includes refid="dbus-list_8h" local="yes">dbus-list.h</includes>
    <incdepgraph>
      <node id="5130">
        <label>stdarg.h</label>
      </node>
      <node id="5139">
        <label>dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="5117" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
      </node>
      <node id="5136">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5137" relation="include">
        </childnode>
        <childnode refid="5138" relation="include">
        </childnode>
      </node>
      <node id="5124">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="5119">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="5126">
        <label>stdint.h</label>
      </node>
      <node id="5138">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="5132">
        <label>sys/poll.h</label>
      </node>
      <node id="5125">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="5116" relation="include">
        </childnode>
        <childnode refid="5126" relation="include">
        </childnode>
        <childnode refid="5127" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5128" relation="include">
        </childnode>
        <childnode refid="5129" relation="include">
        </childnode>
        <childnode refid="5131" relation="include">
        </childnode>
        <childnode refid="5130" relation="include">
        </childnode>
        <childnode refid="5132" relation="include">
        </childnode>
      </node>
      <node id="5117">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5125" relation="include">
        </childnode>
        <childnode refid="5133" relation="include">
        </childnode>
      </node>
      <node id="5120">
        <label>stddef.h</label>
      </node>
      <node id="5129">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5130" relation="include">
        </childnode>
      </node>
      <node id="5122">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
      </node>
      <node id="5131">
        <label>string.h</label>
      </node>
      <node id="5134">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
      </node>
      <node id="5137">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
        <childnode refid="5118" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
        <childnode refid="5130" relation="include">
        </childnode>
      </node>
      <node id="5133">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5134" relation="include">
        </childnode>
      </node>
      <node id="5116">
        <label>config.h</label>
      </node>
      <node id="5115">
        <label>dbus-watch.c</label>
        <link refid="dbus-watch.c"/>
        <childnode refid="5116" relation="include">
        </childnode>
        <childnode refid="5117" relation="include">
        </childnode>
        <childnode refid="5135" relation="include">
        </childnode>
        <childnode refid="5139" relation="include">
        </childnode>
      </node>
      <node id="5135">
        <label>dbus-watch.h</label>
        <link refid="dbus-watch_8h_source"/>
        <childnode refid="5117" relation="include">
        </childnode>
        <childnode refid="5136" relation="include">
        </childnode>
      </node>
      <node id="5128">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="5129" relation="include">
        </childnode>
        <childnode refid="5123" relation="include">
        </childnode>
      </node>
      <node id="5123">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5121" relation="include">
        </childnode>
        <childnode refid="5124" relation="include">
        </childnode>
      </node>
      <node id="5121">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="5120" relation="include">
        </childnode>
        <childnode refid="5122" relation="include">
        </childnode>
      </node>
      <node id="5127">
        <label>inttypes.h</label>
      </node>
      <node id="5118">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="5119" relation="include">
        </childnode>
        <childnode refid="5120" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structDBusWatch" prot="public">DBusWatch</innerclass>
    <innerclass refid="structDBusWatchList" prot="public">DBusWatchList</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dbus-watch_8c_1a357ff92ec4267259d83e3aafd5be3c8b" prot="public" static="no">
        <name>VALID_WATCH_FLAGS</name>
        <initializer>(<ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a62ddca29b06bfbbc08bb7f3dfd3d307f" kindref="member">DBUS_WATCH_WRITABLE</ref> | <ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="97" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusWatchInternals_1ga7dcad11a2e5588c0a36e43a599bc9f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_watch_get_enabled</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>_dbus_watch_get_enabled</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="57" column="1" bodyfile="dbus/dbus-watch.c" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga17eb67d58b3d35d1a71dc4823f9e05e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_watch_get_oom_last_time</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>_dbus_watch_get_oom_last_time</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="63" column="1" bodyfile="dbus/dbus-watch.c" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga14a6b56f2b9b39ec51b8c5ff1662106f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_set_oom_last_time</definition>
        <argsstring>(DBusWatch *watch, dbus_bool_t oom)</argsstring>
        <name>_dbus_watch_set_oom_last_time</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>oom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="69" column="1" bodyfile="dbus/dbus-watch.c" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga1f940e505b20e6429ae858a7b70b0541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
        <definition>DBusWatch * _dbus_watch_new</definition>
        <argsstring>(int fd, unsigned int flags, dbus_bool_t enabled, DBusWatchHandler handler, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>_dbus_watch_new</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>enabled</declname>
        </param>
        <param>
          <type><ref refid="group__DBusWatchInternals_1ga7d5aec875c291514539abb3ebe012341" kindref="member">DBusWatchHandler</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Used to add a file descriptor to be polled by a main loop.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to be watched. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>the conditions to watch for on the descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial enabled state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the handler function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data for handler function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to free the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="88" column="1" bodyfile="dbus/dbus-watch.c" bodystart="88" bodyend="115"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" compoundref="dbus-watch_8c" startline="50">DBusWatch::data</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" compoundref="dbus-watch_8c" startline="52">DBusWatch::enabled</references>
        <references refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" compoundref="dbus-watch_8c" startline="43">DBusWatch::fd</references>
        <references refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" compoundref="dbus-watch_8c" startline="44">DBusWatch::flags</references>
        <references refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" compoundref="dbus-watch_8c" startline="51">DBusWatch::free_data_function</references>
        <references refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" compoundref="dbus-watch_8c" startline="48">DBusWatch::free_handler_data_function</references>
        <references refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" compoundref="dbus-watch_8c" startline="46">DBusWatch::handler</references>
        <references refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" compoundref="dbus-watch_8c" startline="47">DBusWatch::handler_data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" compoundref="dbus-watch_8c" startline="42">DBusWatch::refcount</references>
        <referencedby refid="group__DBusServerSocket_1ga93d00891e32dbc05a33d3c69ca2ffef6" compoundref="dbus-server-socket_8c" startline="283" endline="369">_dbus_server_new_for_socket</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
        <referencedby refid="group__DBusTransportSocket_1gac714eaa33ff4ab5c01be1304b23339a7" compoundref="dbus-transport-socket_8c" startline="1273" endline="1334">_dbus_transport_new_for_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga0db8530cc53589589d67dfb35d03db61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
        <definition>DBusWatch * _dbus_watch_ref</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>_dbus_watch_ref</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Increments the reference count of a <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the watch object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="124" column="1" bodyfile="dbus/dbus-watch.c" bodystart="124" bodyend="129"/>
        <references refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" compoundref="dbus-watch_8c" startline="42">DBusWatch::refcount</references>
        <referencedby refid="group__DBusTransport_1ga4a010098fe079eb6f201ff034d15fdff" compoundref="dbus-transport_8c" startline="889" endline="915">_dbus_transport_handle_watch</referencedby>
        <referencedby refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" compoundref="dbus-watch_8c" startline="376" endline="399">_dbus_watch_list_add_watch</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_unref</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>_dbus_watch_unref</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count of a <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object and finalizes the object if the count reaches zero. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="138" column="1" bodyfile="dbus/dbus-watch.c" bodystart="138" bodyend="156"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" compoundref="dbus-watch_8c" startline="642" endline="657">dbus_watch_set_data</references>
        <references refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" compoundref="dbus-watch_8c" startline="43">DBusWatch::fd</references>
        <references refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" compoundref="dbus-watch_8c" startline="48">DBusWatch::free_handler_data_function</references>
        <references refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" compoundref="dbus-watch_8c" startline="47">DBusWatch::handler_data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" compoundref="dbus-watch_8c" startline="42">DBusWatch::refcount</references>
        <referencedby refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" compoundref="dbus-spawn-win_8c" startline="149" endline="158">_dbus_babysitter_ref</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn-win_8c" startline="187" endline="265">_dbus_babysitter_unref</referencedby>
        <referencedby refid="group__DBusServerSocket_1ga93d00891e32dbc05a33d3c69ca2ffef6" compoundref="dbus-server-socket_8c" startline="283" endline="369">_dbus_server_new_for_socket</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
        <referencedby refid="group__DBusTransport_1ga4a010098fe079eb6f201ff034d15fdff" compoundref="dbus-transport_8c" startline="889" endline="915">_dbus_transport_handle_watch</referencedby>
        <referencedby refid="group__DBusTransportSocket_1gac714eaa33ff4ab5c01be1304b23339a7" compoundref="dbus-transport-socket_8c" startline="1273" endline="1334">_dbus_transport_new_for_socket</referencedby>
        <referencedby refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" compoundref="dbus-watch_8c" startline="376" endline="399">_dbus_watch_list_add_watch</referencedby>
        <referencedby refid="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" compoundref="dbus-watch_8c" startline="249" endline="260">_dbus_watch_list_free</referencedby>
        <referencedby refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" compoundref="dbus-watch_8c" startline="409" endline="425">_dbus_watch_list_remove_watch</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_invalidate</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>_dbus_watch_invalidate</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Clears the file descriptor from a now-invalid watch object so that no one tries to use it. </para>        </briefdescription>
        <detaileddescription>
<para>This is because a watch may stay alive due to reference counts after the file descriptor is closed. Invalidation makes it easier to catch bugs. It also keeps people from doing dorky things like assuming file descriptors are unique (never recycled).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="169" column="1" bodyfile="dbus/dbus-watch.c" bodystart="169" bodyend="173"/>
        <references refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" compoundref="dbus-watch_8c" startline="43">DBusWatch::fd</references>
        <references refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" compoundref="dbus-watch_8c" startline="44">DBusWatch::flags</references>
        <referencedby refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" compoundref="dbus-spawn-win_8c" startline="149" endline="158">_dbus_babysitter_ref</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn-win_8c" startline="187" endline="265">_dbus_babysitter_unref</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
        <referencedby refid="group__DBusTransportSocket_1gac714eaa33ff4ab5c01be1304b23339a7" compoundref="dbus-transport-socket_8c" startline="1273" endline="1334">_dbus_transport_new_for_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1gab8f49926fe9ee56cb4ae7c1c8071cca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_sanitize_condition</definition>
        <argsstring>(DBusWatch *watch, unsigned int *condition)</argsstring>
        <name>_dbus_watch_sanitize_condition</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>condition</declname>
        </param>
        <briefdescription>
<para>Sanitizes the given condition so that it only contains flags that the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> requested. </para>        </briefdescription>
        <detaileddescription>
<para>e.g. if the watch is a DBUS_WATCH_READABLE watch then DBUS_WATCH_WRITABLE will be stripped from the condition.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>condition</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the condition to sanitize. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="185" column="1" bodyfile="dbus/dbus-watch.c" bodystart="185" bodyend="192"/>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" compoundref="dbus-connection_8h" startline="60">DBUS_WATCH_READABLE</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a62ddca29b06bfbbc08bb7f3dfd3d307f" compoundref="dbus-connection_8h" startline="61">DBUS_WATCH_WRITABLE</references>
        <references refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" compoundref="dbus-watch_8c" startline="44">DBusWatch::flags</references>
        <referencedby refid="group__DBusTransport_1ga4a010098fe079eb6f201ff034d15fdff" compoundref="dbus-transport_8c" startline="889" endline="915">_dbus_transport_handle_watch</referencedby>
        <referencedby refid="group__DBusWatch_1gac2acdb1794450ac01a43ec4c3e07ebf7" compoundref="dbus-watch_8c" startline="698" endline="724">dbus_watch_handle</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga5d9db5d0af5916a5ec890eb38d5741eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
        <definition>DBusWatchList * _dbus_watch_list_new</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_watch_list_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates a new watch list. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if insufficient memory exists.</para><para><simplesect kind="return"><para>the new watch list, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="232" column="1" bodyfile="dbus/dbus-watch.c" bodystart="232" bodyend="241"/>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1249" endline="1409">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusServerInternals_1gaacfb3d29553f205b362c850cfda02fd9" compoundref="dbus-server_8c" startline="111" endline="184">_dbus_server_init_base</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_list_free</definition>
        <argsstring>(DBusWatchList *watch_list)</argsstring>
        <name>_dbus_watch_list_free</name>
        <param>
          <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
          <declname>watch_list</declname>
        </param>
        <briefdescription>
<para>Frees a <ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch_list</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch list. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="249" column="1" bodyfile="dbus/dbus-watch.c" bodystart="249" bodyend="260"/>
        <references refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" compoundref="dbus-list_8c" startline="542" endline="557">_dbus_list_clear</references>
        <references refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" compoundref="dbus-list_8c" startline="759" endline="774">_dbus_list_foreach</references>
        <references refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" compoundref="dbus-watch_8c" startline="296" endline="365">_dbus_watch_list_set_functions</references>
        <references refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" compoundref="dbus-connection_8h" startline="60">DBUS_WATCH_READABLE</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a62ddca29b06bfbbc08bb7f3dfd3d307f" compoundref="dbus-connection_8h" startline="61">DBUS_WATCH_WRITABLE</references>
        <references refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" compoundref="dbus-watch_8c" startline="44">DBusWatch::flags</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" compoundref="dbus-watch_8c" startline="216">DBusWatchList::watches</references>
        <referencedby refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn-win_8c" startline="187" endline="265">_dbus_babysitter_unref</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1249" endline="1409">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusServerInternals_1ga93b5bca90e69122d5acbbeef2b4ca03e" compoundref="dbus-server_8c" startline="193" endline="218">_dbus_server_finalize_base</referencedby>
        <referencedby refid="group__DBusServerInternals_1gaacfb3d29553f205b362c850cfda02fd9" compoundref="dbus-server_8c" startline="111" endline="184">_dbus_server_init_base</referencedby>
        <referencedby refid="group__DBusConnection_1gae34751e15f114217e5ad10c663e2ef2e" compoundref="dbus-connection_8c" startline="2681" endline="2692">dbus_connection_ref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_watch_list_set_functions</definition>
        <argsstring>(DBusWatchList *watch_list, DBusAddWatchFunction add_function, DBusRemoveWatchFunction remove_function, DBusWatchToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>_dbus_watch_list_set_functions</name>
        <param>
          <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
          <declname>watch_list</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga285ce1f8bb94ef2f89f23db3de8cfe4b" kindref="member">DBusAddWatchFunction</ref></type>
          <declname>add_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga487ca73e58570f302ba7159c81719243" kindref="member">DBusRemoveWatchFunction</ref></type>
          <declname>remove_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga005459ba2ddd69ba2d89f0e04ef57b10" kindref="member">DBusWatchToggledFunction</ref></type>
          <declname>toggled_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets the watch functions. </para>        </briefdescription>
        <detaileddescription>
<para>This function is the &quot;backend&quot; for <ref refid="group__DBusConnection_1gaebf031eb444b4f847606aa27daa3d8e6" kindref="member">dbus_connection_set_watch_functions()</ref> and <ref refid="group__DBusServer_1gaa5723810ea52e9f1815062fd91395892" kindref="member">dbus_server_set_watch_functions()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch_list</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add_function</parametername>
</parameternamelist>
<parameterdescription>
<para>the add watch function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remove_function</parametername>
</parameternamelist>
<parameterdescription>
<para>the remove watch function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toggled_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function on toggling enabled flag, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data for those functions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function to free the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="296" column="1" bodyfile="dbus/dbus-watch.c" bodystart="296" bodyend="365"/>
        <references refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" compoundref="dbus-list_8c" startline="759" endline="774">_dbus_list_foreach</references>
        <references refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" compoundref="dbus-list_8c" startline="567" endline="570">_dbus_list_get_first_link</references>
        <references refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" compoundref="dbus-list_8h" startline="90">_dbus_list_get_next_link</references>
        <references refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" compoundref="dbus-watch_8c" startline="218">DBusWatchList::add_watch_function</references>
        <references refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" compoundref="dbus-list_8h" startline="38">DBusList::data</references>
        <references refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" compoundref="dbus-watch_8c" startline="50">DBusWatch::data</references>
        <references refid="group__DBusWatch_1gaf172a2b1d1f82333e67cec8d99c9204a" compoundref="dbus-watch_8c" startline="607" endline="613">dbus_watch_get_flags</references>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" compoundref="dbus-watch_8c" startline="51">DBusWatch::free_data_function</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" compoundref="dbus-watch_8c" startline="219">DBusWatchList::remove_watch_function</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" compoundref="dbus-watch_8c" startline="221">DBusWatchList::watch_data</references>
        <references refid="structDBusWatchList_1a2308b08f7f4cb858fbcca718f2bef735" compoundref="dbus-watch_8c" startline="222">DBusWatchList::watch_free_data_function</references>
        <references refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" compoundref="dbus-watch_8c" startline="220">DBusWatchList::watch_toggled_function</references>
        <references refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" compoundref="dbus-watch_8c" startline="216">DBusWatchList::watches</references>
        <referencedby refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" compoundref="dbus-spawn-win_8c" startline="361" endline="375">_dbus_babysitter_set_watch_functions</referencedby>
        <referencedby refid="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" compoundref="dbus-watch_8c" startline="249" endline="260">_dbus_watch_list_free</referencedby>
        <referencedby refid="group__DBusConnection_1gaebf031eb444b4f847606aa27daa3d8e6" compoundref="dbus-connection_8c" startline="4926" endline="4947">dbus_connection_set_watch_functions</referencedby>
        <referencedby refid="group__DBusServer_1gaa5723810ea52e9f1815062fd91395892" compoundref="dbus-server_8c" startline="929" endline="964">dbus_server_set_watch_functions</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_watch_list_add_watch</definition>
        <argsstring>(DBusWatchList *watch_list, DBusWatch *watch)</argsstring>
        <name>_dbus_watch_list_add_watch</name>
        <param>
          <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
          <declname>watch_list</declname>
        </param>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Adds a new watch to the watch list, invoking the application DBusAddWatchFunction if appropriate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch_list</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="376" column="1" bodyfile="dbus/dbus-watch.c" bodystart="376" bodyend="399"/>
        <references refid="group__DBusList_1gad99045e79db46159babe69718f343053" compoundref="dbus-list_8c" startline="270" endline="280">_dbus_list_append</references>
        <references refid="group__DBusList_1gad93f1fc853914144e94fc7a7dc0945aa" compoundref="dbus-list_8c" startline="446" endline="459">_dbus_list_remove_last</references>
        <references refid="group__DBusWatchInternals_1ga0db8530cc53589589d67dfb35d03db61" compoundref="dbus-watch_8c" startline="124" endline="129">_dbus_watch_ref</references>
        <references refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</references>
        <references refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" compoundref="dbus-watch_8c" startline="218">DBusWatchList::add_watch_function</references>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" compoundref="dbus-watch_8c" startline="221">DBusWatchList::watch_data</references>
        <references refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" compoundref="dbus-watch_8c" startline="216">DBusWatchList::watches</references>
        <referencedby refid="group__DBusConnectionInternals_1ga82adef36b4cd583bc1146eae5756c063" compoundref="dbus-connection_8c" startline="743" endline="749">_dbus_connection_add_watch_unlocked</referencedby>
        <referencedby refid="group__DBusServerInternals_1ga0866e5b205b8a570c77c8ad787b665fd" compoundref="dbus-server_8c" startline="288" endline="295">_dbus_server_add_watch</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_list_remove_watch</definition>
        <argsstring>(DBusWatchList *watch_list, DBusWatch *watch)</argsstring>
        <name>_dbus_watch_list_remove_watch</name>
        <param>
          <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
          <declname>watch_list</declname>
        </param>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Removes a watch from the watch list, invoking the application&apos;s DBusRemoveWatchFunction if appropriate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch_list</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="409" column="1" bodyfile="dbus/dbus-watch.c" bodystart="409" bodyend="425"/>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusList_1ga202e6ac8ad3e4a9d4413e0248ffcf3e3" compoundref="dbus-list_8c" startline="415" endline="433">_dbus_list_remove</references>
        <references refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</references>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" compoundref="dbus-watch_8c" startline="219">DBusWatchList::remove_watch_function</references>
        <references refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" compoundref="dbus-watch_8c" startline="221">DBusWatchList::watch_data</references>
        <references refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" compoundref="dbus-watch_8c" startline="216">DBusWatchList::watches</references>
        <referencedby refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" compoundref="dbus-spawn-win_8c" startline="149" endline="158">_dbus_babysitter_ref</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn_8c" startline="324" endline="402">_dbus_babysitter_unref</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga65fc02c0756d0c7caaa39cd60922c99b" compoundref="dbus-connection_8c" startline="761" endline="768">_dbus_connection_remove_watch_unlocked</referencedby>
        <referencedby refid="group__DBusServerInternals_1ga61cfdbfcc9316d4bae55f83b069f248c" compoundref="dbus-server_8c" startline="304" endline="312">_dbus_server_remove_watch</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga14bb50e8663a1d9d3960b4f73c09c097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_list_toggle_watch</definition>
        <argsstring>(DBusWatchList *watch_list, DBusWatch *watch, dbus_bool_t enabled)</argsstring>
        <name>_dbus_watch_list_toggle_watch</name>
        <param>
          <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
          <declname>watch_list</declname>
        </param>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Sets a watch to the given enabled state, invoking the application&apos;s DBusWatchToggledFunction if appropriate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch_list</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch to toggle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> to enable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="436" column="1" bodyfile="dbus/dbus-watch.c" bodystart="436" bodyend="455"/>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" compoundref="dbus-watch_8c" startline="52">DBusWatch::enabled</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" compoundref="dbus-watch_8c" startline="221">DBusWatchList::watch_data</references>
        <references refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" compoundref="dbus-watch_8c" startline="220">DBusWatchList::watch_toggled_function</references>
        <referencedby refid="group__DBusConnectionInternals_1ga6c00e2eaf225b154760976af5688d250" compoundref="dbus-connection_8c" startline="781" endline="791">_dbus_connection_toggle_watch_unlocked</referencedby>
        <referencedby refid="group__DBusWatchInternals_1ga935ba95d94a14aee79d80abe970eae53" compoundref="dbus-watch_8c" startline="465" endline="476">_dbus_watch_list_toggle_all_watches</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga935ba95d94a14aee79d80abe970eae53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_list_toggle_all_watches</definition>
        <argsstring>(DBusWatchList *watch_list, dbus_bool_t enabled)</argsstring>
        <name>_dbus_watch_list_toggle_all_watches</name>
        <param>
          <type><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref> *</type>
          <declname>watch_list</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Sets all watches to the given enabled state, invoking the application&apos;s DBusWatchToggledFunction if appropriate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch_list</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> to enable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="465" column="1" bodyfile="dbus/dbus-watch.c" bodystart="465" bodyend="476"/>
        <references refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" compoundref="dbus-list_8c" startline="567" endline="570">_dbus_list_get_first_link</references>
        <references refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" compoundref="dbus-list_8h" startline="90">_dbus_list_get_next_link</references>
        <references refid="group__DBusWatchInternals_1ga14bb50e8663a1d9d3960b4f73c09c097" compoundref="dbus-watch_8c" startline="436" endline="455">_dbus_watch_list_toggle_watch</references>
        <references refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" compoundref="dbus-list_8h" startline="38">DBusList::data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" compoundref="dbus-watch_8c" startline="216">DBusWatchList::watches</references>
        <referencedby refid="group__DBusServerInternals_1gabdc55833c157737f5cb8b3662f8fc0ed" compoundref="dbus-server_8c" startline="322" endline="326">_dbus_server_toggle_all_watches</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatchInternals_1ga75620808f4d2245914012a41e3b82f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_watch_set_handler</definition>
        <argsstring>(DBusWatch *watch, DBusWatchHandler handler, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>_dbus_watch_set_handler</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type><ref refid="group__DBusWatchInternals_1ga7d5aec875c291514539abb3ebe012341" kindref="member">DBusWatchHandler</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets the handler for the watch. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000068"><xreftitle>Todo</xreftitle><xrefdescription><para>this function only exists because of the weird way connection watches are done, see the note in docs for <ref refid="group__DBusConnectionInternals_1ga12756797bd5c1918aa065f9c37ed7bba" kindref="member">_dbus_connection_handle_watch()</ref>.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the watch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>the new handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>free data with this </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-watch.c" line="491" column="1" bodyfile="dbus/dbus-watch.c" bodystart="491" bodyend="502"/>
        <references refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" compoundref="dbus-watch_8c" startline="50">DBusWatch::data</references>
        <references refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" compoundref="dbus-watch_8c" startline="51">DBusWatch::free_data_function</references>
        <references refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" compoundref="dbus-watch_8c" startline="48">DBusWatch::free_handler_data_function</references>
        <references refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" compoundref="dbus-watch_8c" startline="46">DBusWatch::handler</references>
        <references refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" compoundref="dbus-watch_8c" startline="47">DBusWatch::handler_data</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1ga62d7e86fe386ed48fb90d443b3a2ce7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT <ref refid="group__DBusMacros_1ga7b014fa99f6ef38c1aa5a9c02468e3a0" kindref="member">DBUS_DEPRECATED</ref> int</type>
        <definition>int dbus_watch_get_fd</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>dbus_watch_get_fd</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Deprecated former name of <ref refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" kindref="member">dbus_watch_get_unix_fd()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the file descriptor to watch. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="451" column="1" bodyfile="dbus/dbus-watch.c" bodystart="536" bodyend="541"/>
        <references refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" compoundref="dbus-watch_8c" startline="557" endline="571">dbus_watch_get_unix_fd</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT int</type>
        <definition>int dbus_watch_get_unix_fd</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>dbus_watch_get_unix_fd</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Returns a UNIX file descriptor to be watched, which may be a pipe, socket, or other type of descriptor. </para>        </briefdescription>
        <detaileddescription>
<para>On UNIX this is preferred to <ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket()</ref> since it works with more kinds of <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref>.</para><para>Always returns -1 on Windows. On Windows you use <ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket()</ref> to get a Winsock socket to watch.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the file descriptor to watch. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="455" column="1" bodyfile="dbus/dbus-watch.c" bodystart="557" bodyend="571"/>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" compoundref="dbus-watch_8c" startline="43">DBusWatch::fd</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusWatch_1ga62d7e86fe386ed48fb90d443b3a2ce7a" compoundref="dbus-watch_8c" startline="536" endline="541">dbus_watch_get_fd</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT int</type>
        <definition>int dbus_watch_get_socket</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>dbus_watch_get_socket</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Returns a socket to be watched, on UNIX this will return -1 if our transport is not socket-based so <ref refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" kindref="member">dbus_watch_get_unix_fd()</ref> is preferred. </para>        </briefdescription>
        <detaileddescription>
<para>On Windows, <ref refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" kindref="member">dbus_watch_get_unix_fd()</ref> returns -1 but this function returns a Winsock socket (assuming the transport is socket-based, as it always is for now).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the socket to watch. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="457" column="1" bodyfile="dbus/dbus-watch.c" bodystart="586" bodyend="591"/>
        <references refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" compoundref="dbus-watch_8c" startline="43">DBusWatch::fd</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" compoundref="dbus-spawn_8c" startline="813" endline="826">_dbus_babysitter_set_watch_functions</referencedby>
        <referencedby refid="group__DBusTransport_1ga4a010098fe079eb6f201ff034d15fdff" compoundref="dbus-transport_8c" startline="889" endline="915">_dbus_transport_handle_watch</referencedby>
        <referencedby refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" compoundref="dbus-watch_8c" startline="376" endline="399">_dbus_watch_list_add_watch</referencedby>
        <referencedby refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" compoundref="dbus-watch_8c" startline="409" endline="425">_dbus_watch_list_remove_watch</referencedby>
        <referencedby refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" compoundref="dbus-watch_8c" startline="296" endline="365">_dbus_watch_list_set_functions</referencedby>
        <referencedby refid="group__DBusWatchInternals_1ga14bb50e8663a1d9d3960b4f73c09c097" compoundref="dbus-watch_8c" startline="436" endline="455">_dbus_watch_list_toggle_watch</referencedby>
        <referencedby refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" compoundref="dbus-watch_8c" startline="557" endline="571">dbus_watch_get_unix_fd</referencedby>
        <referencedby refid="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" compoundref="dbus-watch_8c" startline="642" endline="657">dbus_watch_set_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1gaf172a2b1d1f82333e67cec8d99c9204a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT unsigned int</type>
        <definition>unsigned int dbus_watch_get_flags</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>dbus_watch_get_flags</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Gets flags from DBusWatchFlags indicating what conditions should be monitored on the file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para>The flags returned will only contain DBUS_WATCH_READABLE and DBUS_WATCH_WRITABLE, never DBUS_WATCH_HANGUP or DBUS_WATCH_ERROR; all watches implicitly include a watch for hangups, errors, and other exceptional conditions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the conditions to watch. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="459" column="1" bodyfile="dbus/dbus-watch.c" bodystart="607" bodyend="613"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" compoundref="dbus-watch_8c" startline="44">DBusWatch::flags</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" compoundref="dbus-watch_8c" startline="296" endline="365">_dbus_watch_list_set_functions</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1ga8dcdbd07f15a56207af4a36cb005da77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT void *</type>
        <definition>void * dbus_watch_get_data</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>dbus_watch_get_data</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Gets data previously set with <ref refid="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" kindref="member">dbus_watch_set_data()</ref> or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>previously-set data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="461" column="1" bodyfile="dbus/dbus-watch.c" bodystart="623" bodyend="628"/>
        <references refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" compoundref="dbus-watch_8c" startline="50">DBusWatch::data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT void</type>
        <definition>void dbus_watch_set_data</definition>
        <argsstring>(DBusWatch *watch, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>dbus_watch_set_data</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets data which can be retrieved with <ref refid="group__DBusWatch_1ga8dcdbd07f15a56207af4a36cb005da77" kindref="member">dbus_watch_get_data()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Intended for use by the DBusAddWatchFunction and DBusRemoveWatchFunction to store their own data. For example with Qt you might store the QSocketNotifier for this watch and with GLib you might store a GSource.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be called to free the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="463" column="1" bodyfile="dbus/dbus-watch.c" bodystart="642" bodyend="657"/>
        <references refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" compoundref="dbus-watch_8c" startline="50">DBusWatch::data</references>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" compoundref="dbus-watch_8c" startline="51">DBusWatch::free_data_function</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1gae7a91e6d4d1bc187419c47c522e33a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT <ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_watch_get_enabled</definition>
        <argsstring>(DBusWatch *watch)</argsstring>
        <name>dbus_watch_get_enabled</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <briefdescription>
<para>Returns whether a watch is enabled or not. </para>        </briefdescription>
        <detaileddescription>
<para>If not enabled, it should not be polled by the main loop.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the watch is enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="470" column="1" bodyfile="dbus/dbus-watch.c" bodystart="667" bodyend="672"/>
        <references refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" compoundref="dbus-watch_8c" startline="52">DBusWatch::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusWatch_1gac2acdb1794450ac01a43ec4c3e07ebf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DBUS_EXPORT <ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_watch_handle</definition>
        <argsstring>(DBusWatch *watch, unsigned int flags)</argsstring>
        <name>dbus_watch_handle</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Called to notify the D-Bus library when a previously-added watch is ready for reading or writing, or has an exception such as a hangup. </para>        </briefdescription>
        <detaileddescription>
<para>If this function returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>, then the file descriptor may still be ready for reading or writing, but more memory is needed in order to do the reading or writing. If you ignore the <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> return, your application may spin in a busy loop on the file descriptor until memory becomes available, but nothing more catastrophic should happen.</para><para><ref refid="group__DBusWatch_1gac2acdb1794450ac01a43ec4c3e07ebf7" kindref="member">dbus_watch_handle()</ref> cannot be called during the DBusAddWatchFunction, as the connection will not be ready to handle that watch yet.</para><para>It is not allowed to reference a <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> after it has been passed to remove_function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>watch</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>the poll condition using <ref refid="group__DBusConnection_1ga0556779e61aeb19eb9cf6b6466bd1b98" kindref="member">DBusWatchFlags</ref> values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if there wasn&apos;t enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-connection.h" line="467" column="1" bodyfile="dbus/dbus-watch.c" bodystart="698" bodyend="724"/>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="group__DBusWatchInternals_1gab8f49926fe9ee56cb4ae7c1c8071cca3" compoundref="dbus-watch_8c" startline="185" endline="192">_dbus_watch_sanitize_condition</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" compoundref="dbus-watch_8c" startline="43">DBusWatch::fd</references>
        <references refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" compoundref="dbus-watch_8c" startline="44">DBusWatch::flags</references>
        <references refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" compoundref="dbus-watch_8c" startline="46">DBusWatch::handler</references>
        <references refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" compoundref="dbus-watch_8c" startline="47">DBusWatch::handler_data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-watch.c<sp/>DBusWatch<sp/>implementation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/><sp/>Red<sp/>Hat<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-watch.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structDBusWatch" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" kindref="member">refcount</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d5aec875c291514539abb3ebe012341" kindref="member">DBusWatchHandler</ref><sp/><ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" kindref="member">handler_data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref>;<sp/></highlight></codeline>
<codeline lineno="50" refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>;<sp/></highlight></codeline>
<codeline lineno="52" refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref><sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="structDBusWatch_1a1020150c9fd9764ac85919d2c48bb6e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusWatch_1a1020150c9fd9764ac85919d2c48bb6e1" kindref="member">oom_last_time</ref><sp/>:<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">_dbus_watch_get_enabled<sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">_dbus_watch_get_oom_last_time<sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1a1020150c9fd9764ac85919d2c48bb6e1" kindref="member">oom_last_time</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">_dbus_watch_set_oom_last_time<sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/>oom)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a1020150c9fd9764ac85919d2c48bb6e1" kindref="member">oom_last_time</ref><sp/>=<sp/>oom;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref>*</highlight></codeline>
<codeline lineno="88" refid="group__DBusWatchInternals_1ga1f940e505b20e6429ae858a7b70b0541" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga1f940e505b20e6429ae858a7b70b0541" kindref="member">_dbus_watch_new</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d5aec875c291514539abb3ebe012341" kindref="member">DBusWatchHandler</ref><sp/><sp/><ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VALID_WATCH_FLAGS<sp/>(DBUS_WATCH_WRITABLE<sp/>|<sp/>DBUS_WATCH_READABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((flags<sp/>&amp;<sp/>VALID_WATCH_FLAGS)<sp/>==<sp/>flags);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>watch<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" kindref="member">refcount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref><sp/>=<sp/><ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref><sp/>=<sp/><ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref><sp/>=<sp/><ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref><sp/>=<sp/><ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" kindref="member">handler_data</ref><sp/>=<sp/><ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref><sp/>=<sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*</highlight></codeline>
<codeline lineno="124" refid="group__DBusWatchInternals_1ga0db8530cc53589589d67dfb35d03db61" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga0db8530cc53589589d67dfb35d03db61" kindref="member">_dbus_watch_ref</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" kindref="member">refcount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(watch-&gt;<ref refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" kindref="member">refcount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" kindref="member">refcount</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch-&gt;<ref refid="structDBusWatch_1a3984cbcb64ed76d2f0c1182c386f7978" kindref="member">refcount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref><sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;this<sp/>watch<sp/>should<sp/>have<sp/>been<sp/>invalidated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" kindref="member">dbus_watch_set_data</ref><sp/>(watch,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="comment">/*<sp/>call<sp/>free_data_function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch-&gt;<ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>watch-&gt;<ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref>)<sp/>(watch-&gt;<ref refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" kindref="member">handler_data</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(watch);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" kindref="member">_dbus_watch_invalidate</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="group__DBusWatchInternals_1gab8f49926fe9ee56cb4ae7c1c8071cca3" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1gab8f49926fe9ee56cb4ae7c1c8071cca3" kindref="member">_dbus_watch_sanitize_condition</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*condition)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>))</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>*condition<sp/>&amp;=<sp/>~<ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref><sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a62ddca29b06bfbbc08bb7f3dfd3d307f" kindref="member">DBUS_WATCH_WRITABLE</ref>))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>*condition<sp/>&amp;=<sp/>~<ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a62ddca29b06bfbbc08bb7f3dfd3d307f" kindref="member">DBUS_WATCH_WRITABLE</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="structDBusWatchList" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216" refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218" refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnection_1ga285ce1f8bb94ef2f89f23db3de8cfe4b" kindref="member">DBusAddWatchFunction</ref><sp/><ref refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" kindref="member">add_watch_function</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219" refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnection_1ga487ca73e58570f302ba7159c81719243" kindref="member">DBusRemoveWatchFunction</ref><sp/><ref refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" kindref="member">remove_watch_function</ref>;<sp/></highlight></codeline>
<codeline lineno="220" refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusConnection_1ga005459ba2ddd69ba2d89f0e04ef57b10" kindref="member">DBusWatchToggledFunction</ref><sp/><ref refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" kindref="member">watch_toggled_function</ref>;<sp/></highlight></codeline>
<codeline lineno="221" refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222" refid="structDBusWatchList_1a2308b08f7f4cb858fbcca718f2bef735" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><ref refid="structDBusWatchList_1a2308b08f7f4cb858fbcca718f2bef735" kindref="member">watch_free_data_function</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref>*</highlight></codeline>
<codeline lineno="232" refid="group__DBusWatchInternals_1ga5d9db5d0af5916a5ec890eb38d5741eb" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga5d9db5d0af5916a5ec890eb38d5741eb" kindref="member">_dbus_watch_list_new</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/>*watch_list;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>watch_list<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_list<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch_list;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" kindref="member">_dbus_watch_list_free</ref><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/>*watch_list)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>watch_data<sp/>and<sp/>removes<sp/>watches<sp/>as<sp/>a<sp/>side<sp/>effect<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" kindref="member">_dbus_watch_list_set_functions</ref><sp/>(watch_list,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" kindref="member">_dbus_list_foreach</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__DBusInternalsUtils_1ga692fe3070eecaffa172266d2f138fd69" kindref="member">DBusForeachFunction</ref>)<sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref>,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" kindref="member">_dbus_list_clear</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(watch_list);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="264"><highlight class="normal">watch_flags_to_string<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*watch_type;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(flags<sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a62ddca29b06bfbbc08bb7f3dfd3d307f" kindref="member">DBUS_WATCH_WRITABLE</ref>))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>watch_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;readwrite&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>DBUS_WATCH_READABLE)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>watch_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>DBUS_WATCH_WRITABLE)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>watch_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;write&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>watch_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>read<sp/>or<sp/>write&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch_type;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_ENABLE_VERBOSE_MODE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="296" refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" kindref="member">_dbus_watch_list_set_functions</ref><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch_list,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga285ce1f8bb94ef2f89f23db3de8cfe4b" kindref="member">DBusAddWatchFunction</ref><sp/><sp/><sp/><sp/><sp/>add_function,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga487ca73e58570f302ba7159c81719243" kindref="member">DBusRemoveWatchFunction</ref><sp/><sp/>remove_function,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga005459ba2ddd69ba2d89f0e04ef57b10" kindref="member">DBusWatchToggledFunction</ref><sp/>toggled_function,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>watches<sp/>with<sp/>the<sp/>new<sp/>watch<sp/>function,<sp/>failing<sp/>on<sp/>OOM<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(add_function<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/><ref refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" kindref="member">_dbus_list_get_first_link</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(link<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*next<sp/>=<sp/><ref refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" kindref="member">_dbus_list_get_next_link</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>a<sp/>%s<sp/>watch<sp/>on<sp/>fd<sp/>%d<sp/>using<sp/>newly-set<sp/>add<sp/>watch<sp/>function\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch_flags_to_string<sp/>(<ref refid="group__DBusWatch_1gaf172a2b1d1f82333e67cec8d99c9204a" kindref="member">dbus_watch_get_flags</ref><sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>)),</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*<sp/>add_function)<sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>,<sp/>data))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>it<sp/>all<sp/>again<sp/>and<sp/>return<sp/>FALSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link2;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link2<sp/>=<sp/><ref refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" kindref="member">_dbus_list_get_first_link</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(link2<sp/>!=<sp/>link)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*next<sp/>=<sp/><ref refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" kindref="member">_dbus_list_get_next_link</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link2);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>watch<sp/>on<sp/>fd<sp/>%d<sp/>using<sp/>newly-set<sp/>remove<sp/>function<sp/>because<sp/>initial<sp/>add<sp/>failed\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(link2-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>remove_function)<sp/>(link2-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>,<sp/><ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link2<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>all<sp/>current<sp/>watches<sp/>from<sp/>previous<sp/>watch<sp/>handlers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_list-&gt;<ref refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" kindref="member">remove_watch_function</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>all<sp/>pre-existing<sp/>watches\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" kindref="member">_dbus_list_foreach</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__DBusInternalsUtils_1ga692fe3070eecaffa172266d2f138fd69" kindref="member">DBusForeachFunction</ref>)<sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" kindref="member">remove_watch_function</ref>,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_list-&gt;<ref refid="structDBusWatchList_1a2308b08f7f4cb858fbcca718f2bef735" kindref="member">watch_free_data_function</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a2308b08f7f4cb858fbcca718f2bef735" kindref="member">watch_free_data_function</ref>)<sp/>(watch_list-&gt;<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" kindref="member">add_watch_function</ref><sp/>=<sp/>add_function;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" kindref="member">remove_watch_function</ref><sp/>=<sp/>remove_function;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" kindref="member">watch_toggled_function</ref><sp/>=<sp/>toggled_function;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref><sp/>=<sp/><ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a2308b08f7f4cb858fbcca718f2bef735" kindref="member">watch_free_data_function</ref><sp/>=<sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="376" refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" kindref="member">_dbus_watch_list_add_watch</ref><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/>*watch_list,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/><sp/>*watch)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusList_1gad99045e79db46159babe69718f343053" kindref="member">_dbus_list_append</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,<sp/>watch))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="group__DBusWatchInternals_1ga0db8530cc53589589d67dfb35d03db61" kindref="member">_dbus_watch_ref</ref><sp/>(watch);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_list-&gt;<ref refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" kindref="member">add_watch_function</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>watch<sp/>on<sp/>fd<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(watch));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*<sp/>watch_list-&gt;<ref refid="structDBusWatchList_1ae515ab01e8d08e6b252e468be7dc7074" kindref="member">add_watch_function</ref>)<sp/>(watch,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref>))</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1gad93f1fc853914144e94fc7a7dc0945aa" kindref="member">_dbus_list_remove_last</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,<sp/>watch);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(watch);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" kindref="member">_dbus_watch_list_remove_watch</ref><sp/><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/>*watch_list,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/><sp/>*watch)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusList_1ga202e6ac8ad3e4a9d4413e0248ffcf3e3" kindref="member">_dbus_list_remove</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,<sp/>watch))</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Nonexistent<sp/>watch<sp/>was<sp/>removed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_list-&gt;<ref refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" kindref="member">remove_watch_function</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>watch<sp/>on<sp/>fd<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(watch));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a3b4b6c6d8aeb77d9b08404575e0b805a" kindref="member">remove_watch_function</ref>)<sp/>(watch,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(watch);</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="group__DBusWatchInternals_1ga14bb50e8663a1d9d3960b4f73c09c097" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga14bb50e8663a1d9d3960b4f73c09c097" kindref="member">_dbus_watch_list_toggle_watch</ref><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch_list,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>enabled<sp/>=<sp/>!!<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled<sp/>==<sp/>watch-&gt;<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref><sp/>=<sp/><ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_list-&gt;<ref refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" kindref="member">watch_toggled_function</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Toggling<sp/>watch<sp/>%p<sp/>on<sp/>fd<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch,<sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(watch),<sp/>watch-&gt;<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>watch_list-&gt;<ref refid="structDBusWatchList_1aed21ba690eb810c4c2da581feaed822a" kindref="member">watch_toggled_function</ref>)<sp/>(watch,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch_list-&gt;<ref refid="structDBusWatchList_1a767770241baf8ddcdb4b5c4b4f2a9727" kindref="member">watch_data</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="group__DBusWatchInternals_1ga935ba95d94a14aee79d80abe970eae53" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga935ba95d94a14aee79d80abe970eae53" kindref="member">_dbus_watch_list_toggle_all_watches</ref><sp/>(<ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch_list,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(link<sp/>=<sp/><ref refid="group__DBusList_1ga1e26ce4fb4acb50593bd5ed2f4eeb3ae" kindref="member">_dbus_list_get_first_link</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/><ref refid="group__DBusList_1gaede4ace46d5ee497d75074bfec4490a2" kindref="member">_dbus_list_get_next_link</ref><sp/>(&amp;watch_list-&gt;<ref refid="structDBusWatchList_1ab4e73fc61203dd03949f0b7d163d456d" kindref="member">watches</ref>,<sp/>link))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga14bb50e8663a1d9d3960b4f73c09c097" kindref="member">_dbus_watch_list_toggle_watch</ref><sp/>(watch_list,<sp/>link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="group__DBusWatchInternals_1ga75620808f4d2245914012a41e3b82f3c" refkind="member"><highlight class="normal"><ref refid="group__DBusWatchInternals_1ga75620808f4d2245914012a41e3b82f3c" kindref="member">_dbus_watch_set_handler</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d5aec875c291514539abb3ebe012341" kindref="member">DBusWatchHandler</ref><sp/><sp/><ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref>,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch-&gt;<ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>watch-&gt;<ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref>)<sp/>(watch-&gt;<ref refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" kindref="member">handler_data</ref>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref><sp/>=<sp/><ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" kindref="member">handler_data</ref><sp/>=<sp/><ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a64eaf9b88cebfc640bc85d0fd37184c8" kindref="member">free_handler_data_function</ref><sp/>=<sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="group__DBusWatch_1ga62d7e86fe386ed48fb90d443b3a2ce7a" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1ga62d7e86fe386ed48fb90d443b3a2ce7a" kindref="member">dbus_watch_get_fd</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" kindref="member">dbus_watch_get_unix_fd</ref>(watch);</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1ga15df7f6120ead3e09bec8a70d3c43c0d" kindref="member">dbus_watch_get_unix_fd</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME<sp/>remove<sp/>#ifdef<sp/>and<sp/>do<sp/>this<sp/>on<sp/>a<sp/>lower<sp/>level</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/><sp/><sp/>*<sp/>(watch<sp/>should<sp/>have<sp/>set_socket<sp/>and<sp/>set_unix_fd<sp/>and<sp/>track</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/>*<sp/>which<sp/>it<sp/>has,<sp/>and<sp/>the<sp/>transport<sp/>should<sp/>provide<sp/>the</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/><sp/><sp/>*<sp/>appropriate<sp/>watch<sp/>type)</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref>(<sp/>watch<sp/>);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>-1);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607" refid="group__DBusWatch_1gaf172a2b1d1f82333e67cec8d99c9204a" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1gaf172a2b1d1f82333e67cec8d99c9204a" kindref="member">dbus_watch_get_flags</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref><sp/>&amp;<sp/>VALID_WATCH_FLAGS)<sp/>==<sp/>watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="623" refid="group__DBusWatch_1ga8dcdbd07f15a56207af4a36cb005da77" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1ga8dcdbd07f15a56207af4a36cb005da77" kindref="member">dbus_watch_get_data</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1ga5c75a65cf0680956cc0188d86a05cfae" kindref="member">dbus_watch_set_data</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Setting<sp/>watch<sp/>fd<sp/>%d<sp/>data<sp/>to<sp/>data<sp/>=<sp/>%p<sp/>function<sp/>=<sp/>%p<sp/>from<sp/>data<sp/>=<sp/>%p<sp/>function<sp/>=<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(watch),</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,<sp/>free_data_function,<sp/>watch-&gt;<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>,<sp/>watch-&gt;<ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch-&gt;<ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>watch-&gt;<ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>)<sp/>(watch-&gt;<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref><sp/>=<sp/><ref refid="structDBusWatch_1a71877a39d8c2a7d533c0c6f280648d53" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref><sp/>=<sp/><ref refid="structDBusWatch_1ad848cbd636518fd346039d0d771ba021" kindref="member">free_data_function</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="667" refid="group__DBusWatch_1gae7a91e6d4d1bc187419c47c522e33a8f" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1gae7a91e6d4d1bc187419c47c522e33a8f" kindref="member">dbus_watch_get_enabled</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*watch)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>watch-&gt;<ref refid="structDBusWatch_1a010564b43e0c7dd438b9ac4b0c1dbe64" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="698" refid="group__DBusWatch_1gac2acdb1794450ac01a43ec4c3e07ebf7" refkind="member"><highlight class="normal"><ref refid="group__DBusWatch_1gac2acdb1794450ac01a43ec4c3e07ebf7" kindref="member">dbus_watch_handle</ref><sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>)</highlight></codeline>
<codeline lineno="700"><highlight class="normal">{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref><sp/>&lt;<sp/>0<sp/>||<sp/>watch-&gt;<ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Watch<sp/>is<sp/>invalid,<sp/>it<sp/>should<sp/>have<sp/>been<sp/>removed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref><sp/>&gt;=<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>fails<sp/>if<sp/>watch<sp/>was<sp/>removed<sp/>*/</highlight><highlight class="normal">,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><ref refid="group__DBusWatchInternals_1gab8f49926fe9ee56cb4ae7c1c8071cca3" kindref="member">_dbus_watch_sanitize_condition</ref><sp/>(watch,<sp/>&amp;flags);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;After<sp/>sanitization,<sp/>watch<sp/>flags<sp/>on<sp/>fd<sp/>%d<sp/>were<sp/>0\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ab4021cce958b50cbcda5eeabc6af2217" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*<sp/>watch-&gt;<ref refid="structDBusWatch_1aad3fb97da0ad7e5897611930f7a1c3e9" kindref="member">handler</ref>)<sp/>(watch,<sp/><ref refid="structDBusWatch_1a7f1c2c609410f58a2328681c2893f70a" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch-&gt;<ref refid="structDBusWatch_1ae906b28caa8a4323f85c882abe901e87" kindref="member">handler_data</ref>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-watch.c"/>
  </compounddef>
</doxygen>
