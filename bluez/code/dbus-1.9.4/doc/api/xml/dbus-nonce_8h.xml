<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-nonce_8h" kind="file" language="C++">
    <compoundname>dbus-nonce.h</compoundname>
    <includes refid="dbus-macros_8h" local="no">dbus/dbus-macros.h</includes>
    <includes refid="dbus-types_8h" local="no">dbus/dbus-types.h</includes>
    <includes refid="dbus-errors_8h" local="no">dbus/dbus-errors.h</includes>
    <includes refid="dbus-string_8h" local="no">dbus/dbus-string.h</includes>
    <includedby refid="dbus-nonce_8c" local="yes">dbus-nonce.c</includedby>
    <includedby refid="dbus-server-socket_8h" local="no">dbus-server-socket.h</includedby>
    <includedby refid="dbus-server-socket_8c" local="yes">dbus-server-socket.c</includedby>
    <includedby refid="dbus-sysdeps-unix_8c" local="yes">dbus-sysdeps-unix.c</includedby>
    <includedby refid="dbus-sysdeps-win_8c" local="yes">dbus-sysdeps-win.c</includedby>
    <includedby refid="dbus-transport-socket_8c" local="yes">dbus-transport-socket.c</includedby>
    <incdepgraph>
      <node id="2224">
        <label>stdarg.h</label>
      </node>
      <node id="2221">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="2216">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="2218">
        <label>stddef.h</label>
      </node>
      <node id="2222">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2217" relation="include">
        </childnode>
        <childnode refid="2223" relation="include">
        </childnode>
        <childnode refid="2224" relation="include">
        </childnode>
      </node>
      <node id="2219">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="2216" relation="include">
        </childnode>
      </node>
      <node id="2215">
        <label>dbus-nonce.h</label>
        <link refid="dbus-nonce.h"/>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2217" relation="include">
        </childnode>
        <childnode refid="2220" relation="include">
        </childnode>
        <childnode refid="2222" relation="include">
        </childnode>
      </node>
      <node id="2220">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2217" relation="include">
        </childnode>
        <childnode refid="2221" relation="include">
        </childnode>
      </node>
      <node id="2217">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="2218" relation="include">
        </childnode>
        <childnode refid="2219" relation="include">
        </childnode>
      </node>
      <node id="2223">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2218" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2230">
        <label>dbus-server-win.c</label>
        <link refid="dbus-server-win_8c_source"/>
      </node>
      <node id="2229">
        <label>dbus-server-unix.c</label>
        <link refid="dbus-server-unix_8c_source"/>
      </node>
      <node id="2232">
        <label>dbus-sysdeps-unix.c</label>
        <link refid="dbus-sysdeps-unix_8c_source"/>
      </node>
      <node id="2231">
        <label>dbus-server.c</label>
        <link refid="dbus-server_8c_source"/>
      </node>
      <node id="2226">
        <label>dbus-nonce.c</label>
        <link refid="dbus-nonce_8c_source"/>
      </node>
      <node id="2225">
        <label>dbus-nonce.h</label>
        <link refid="dbus-nonce.h"/>
        <childnode refid="2226" relation="include">
        </childnode>
        <childnode refid="2227" relation="include">
        </childnode>
        <childnode refid="2228" relation="include">
        </childnode>
        <childnode refid="2232" relation="include">
        </childnode>
        <childnode refid="2233" relation="include">
        </childnode>
        <childnode refid="2234" relation="include">
        </childnode>
      </node>
      <node id="2228">
        <label>dbus-server-socket.c</label>
        <link refid="dbus-server-socket_8c_source"/>
      </node>
      <node id="2227">
        <label>dbus-server-socket.h</label>
        <link refid="dbus-server-socket_8h_source"/>
        <childnode refid="2228" relation="include">
        </childnode>
        <childnode refid="2229" relation="include">
        </childnode>
        <childnode refid="2230" relation="include">
        </childnode>
        <childnode refid="2231" relation="include">
        </childnode>
      </node>
      <node id="2234">
        <label>dbus-transport-socket.c</label>
        <link refid="dbus-transport-socket_8c_source"/>
      </node>
      <node id="2233">
        <label>dbus-sysdeps-win.c</label>
        <link refid="dbus-sysdeps-win_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structDBusNonceFile" prot="public">DBusNonceFile</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dbus-nonce_8h_1ae2b08b4306bc4403d874e117f4568186" prot="public" static="no">
        <type>struct <ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref></type>
        <definition>typedef struct DBusNonceFile DBusNonceFile</definition>
        <argsstring></argsstring>
        <name>DBusNonceFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="434" column="1" bodyfile="dbus/dbus-nonce.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dbus-nonce_8h_1a1ced483e4fdb80cbcabf70dfcbe821e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_noncefile_create</definition>
        <argsstring>(DBusNonceFile *noncefile, DBusError *error)</argsstring>
        <name>_dbus_noncefile_create</name>
        <param>
          <type><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref> *</type>
          <declname>noncefile</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>creates a nonce file in a user-readable location and writes a generated nonce to it. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the noncefile object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noncefile</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the nonce file location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error details if creating the nonce file fails </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE iff the nonce file was successfully created </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="43" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="383" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="dbus-nonce_8h_1a98919311625a6e820ae8b96846923681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_noncefile_delete</definition>
        <argsstring>(DBusNonceFile *noncefile, DBusError *error)</argsstring>
        <name>_dbus_noncefile_delete</name>
        <param>
          <type><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref> *</type>
          <declname>noncefile</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>deletes the noncefile and frees the <ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noncefile</parametername>
</parameternamelist>
<parameterdescription>
<para>the nonce file to delete. Contents will be freed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error details if the nonce file could not be deleted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="46" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="397" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="dbus-nonce_8h_1a2f2f6ea3d3fd606de277ff7efc22f7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_noncefile_check_nonce</definition>
        <argsstring>(int fd, const DBusNonceFile *noncefile, DBusError *error)</argsstring>
        <name>_dbus_noncefile_check_nonce</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref> *</type>
          <declname>noncefile</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>reads data from a file descriptor and checks if the received data matches the data in the given noncefile. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to read the nonce from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noncefile</parametername>
</parameternamelist>
<parameterdescription>
<para>the nonce file to check the received data against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error details on fail </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE iff a nonce could be successfully read from the file descriptor and matches the nonce from the given nonce file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="49" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="434" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="dbus-nonce_8h_1aeb6ed193dae87a06eb4f6e19cacc1871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
        <definition>const DBusString* _dbus_noncefile_get_path</definition>
        <argsstring>(const DBusNonceFile *noncefile)</argsstring>
        <name>_dbus_noncefile_get_path</name>
        <param>
          <type>const <ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref> *</type>
          <declname>noncefile</declname>
        </param>
        <briefdescription>
<para>returns the absolute file path of the nonce file </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noncefile</parametername>
</parameternamelist>
<parameterdescription>
<para>an initialized noncefile object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the absolute path of the nonce file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="53" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="417" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="dbus-nonce_8h_1ad338781492eab4058c0a5c2bc9b05c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_accept_with_noncefile</definition>
        <argsstring>(int listen_fd, const DBusNonceFile *noncefile)</argsstring>
        <name>_dbus_accept_with_noncefile</name>
        <param>
          <type>int</type>
          <declname>listen_fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref> *</type>
          <declname>noncefile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="55" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="146" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="dbus-nonce_8h_1a8a427edc9107ddcfca37a2f17ad4373a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_read_nonce</definition>
        <argsstring>(const DBusString *fname, DBusString *nonce, DBusError *error)</argsstring>
        <name>_dbus_read_nonce</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>nonce</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>reads the nonce from the nonce file and stores it in a string </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fname</parametername>
</parameternamelist>
<parameterdescription>
<para>the file to read the nonce from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonce</parametername>
</parameternamelist>
<parameterdescription>
<para>returns the nonce. Must be an initialized string, the nonce will be appended. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error object to report possible errors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FALSE iff reading the nonce fails (error is set then) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="60" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="105" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="dbus-nonce_8h_1a683b6fdafdceb09b257d15711b0f0a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_send_nonce</definition>
        <argsstring>(int fd, const DBusString *noncefile, DBusError *error)</argsstring>
        <name>_dbus_send_nonce</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>noncefile</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>sends the nonce over a given socket. </para>        </briefdescription>
        <detaileddescription>
<para>Blocks while doing so.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to write the nonce data to (usually a socket) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noncefile</parametername>
</parameternamelist>
<parameterdescription>
<para>the noncefile location to read the nonce from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>contains error details if FALSE is returned </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE iff the nonce was successfully sent. Note that this does not indicate whether the server accepted the nonce. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-nonce.h" line="66" column="1" bodyfile="dbus/dbus-nonce.c" bodystart="207" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-nonce.h<sp/><sp/>Nonce<sp/>handling<sp/>functions<sp/>used<sp/>by<sp/>nonce-tcp<sp/>(internal<sp/>to<sp/>D-Bus<sp/>implementation)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2009<sp/>Klaralvdalens<sp/>Datakonsult<sp/>AB,<sp/>a<sp/>KDAB<sp/>Group<sp/>company,<sp/>info@kdab.net</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_NONCE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_NONCE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-macros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-errors.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dbus/dbus-string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="group__DBusMacros_1ga875146b01015e9ced22b25d76d549ab2" kindref="member">DBUS_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref><sp/><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structDBusNonceFile" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>path;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>dir;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_noncefile_create<sp/>(<ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref><sp/>*noncefile,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_noncefile_delete<sp/>(<ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref><sp/>*noncefile,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_noncefile_check_nonce<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref><sp/>*noncefile,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref>*<sp/>_dbus_noncefile_get_path<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref><sp/>*noncefile);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_dbus_accept_with_noncefile<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listen_fd,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusNonceFile" kindref="compound">DBusNonceFile</ref><sp/>*noncefile);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_read_nonce<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*fname,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*nonce,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>client</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>_dbus_send_nonce<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*noncefile,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="group__DBusMacros_1gae4a9263a43f8220f6e1c0fd07cf6e59a" kindref="member">DBUS_END_DECLS</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_NONCE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-nonce.h"/>
  </compounddef>
</doxygen>
