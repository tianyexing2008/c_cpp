<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__DBusMarshal" kind="group">
    <compoundname>DBusMarshal</compoundname>
    <title>marshaling and unmarshaling</title>
    <innerclass refid="structHeaderFieldType" prot="public">HeaderFieldType</innerclass>
    <innerclass refid="structDBusTypeReaderClass" prot="public">DBusTypeReaderClass</innerclass>
    <innerclass refid="structReplacementBlock" prot="public">ReplacementBlock</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__DBusMarshal_1ga06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="group__DBusMarshal_1gga06fc87d81c62e9abb8790b6e5713c55ba2a1dff007b3bdb5e96025d3bcd9448a3" prot="public">
          <name>MARSHAL_AS_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga06fc87d81c62e9abb8790b6e5713c55ba5960fb74217a3f4bbc607e66e2c7c4c7" prot="public">
          <name>MARSHAL_AS_SIGNATURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga06fc87d81c62e9abb8790b6e5713c55ba1c905e8d1f1fa5af5b5a852961a691ec" prot="public">
          <name>MARSHAL_AS_BYTE_ARRAY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="676" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="675" bodyend="680"/>
      </memberdef>
      <memberdef kind="enum" id="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" prot="public" static="no">
        <name>DBusValidationMode</name>
        <enumvalue id="group__DBusMarshal_1ggaf9dce059725fa793c44b219460cbbe6da8eaa5a0e49d61589e930b958fd0e6f0e" prot="public">
          <name>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1ggaf9dce059725fa793c44b219460cbbe6dafa3061b6949cb2616b14c59d42a6cb40" prot="public">
          <name>DBUS_VALIDATION_MODE_DATA_IS_UNTRUSTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This is used rather than a bool for high visibility. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="37" column="1" bodyfile="dbus/dbus-marshal-validate.h" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="enum" id="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" prot="public" static="no">
        <name>DBusValidity</name>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" prot="public">
          <name>DBUS_VALIDITY_UNKNOWN_OOM_ERROR</name>
          <initializer>= -4</initializer>
          <briefdescription>
<para>can&apos;t determine validity due to OOM </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca3265191b5cda0570468627b129b6cb04" prot="public">
          <name>DBUS_INVALID_FOR_UNKNOWN_REASON</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae20f309c6a98d1e7dcf41b650e684c9c" prot="public">
          <name>DBUS_VALID_BUT_INCOMPLETE</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cabd81dfbf7f2d5e4412540d118de34087" prot="public">
          <name>DBUS_VALIDITY_UNKNOWN</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" prot="public">
          <name>DBUS_VALID</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>the data is valid </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca33b2968264e0d16b65dc6c9d37b7df61" prot="public">
          <name>DBUS_INVALID_UNKNOWN_TYPECODE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca46e3601a55fc04c378e5e21942a6cd7b" prot="public">
          <name>DBUS_INVALID_MISSING_ARRAY_ELEMENT_TYPE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca72ce51a15524f14f3faa46a2d19dacdc" prot="public">
          <name>DBUS_INVALID_SIGNATURE_TOO_LONG</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cad0efb80ea0731f1183e8bc7ffa3b7631" prot="public">
          <name>DBUS_INVALID_EXCEEDED_MAXIMUM_ARRAY_RECURSION</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae9db107920354fff3290f43f53879635" prot="public">
          <name>DBUS_INVALID_EXCEEDED_MAXIMUM_STRUCT_RECURSION</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca4ba9f8ace4a8dd77731e52c13a3363bb" prot="public">
          <name>DBUS_INVALID_STRUCT_ENDED_BUT_NOT_STARTED</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cabe0be1121b497bac6f9fc34532155f38" prot="public">
          <name>DBUS_INVALID_STRUCT_STARTED_BUT_NOT_ENDED</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca2cec595fd38a8fe853726479b727caa0" prot="public">
          <name>DBUS_INVALID_STRUCT_HAS_NO_FIELDS</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca14ad983d795a42ee899e54a3e1f7298b" prot="public">
          <name>DBUS_INVALID_ALIGNMENT_PADDING_NOT_NUL</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca038639d03cffa2fe1b619ed084d97a3a" prot="public">
          <name>DBUS_INVALID_BOOLEAN_NOT_ZERO_OR_ONE</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca124cca252c2d0d5e5c749c2292bc129e" prot="public">
          <name>DBUS_INVALID_NOT_ENOUGH_DATA</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca10bc3fdc9ca42108aa5a7e091f6aae52" prot="public">
          <name>DBUS_INVALID_TOO_MUCH_DATA</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>trailing junk makes it invalid </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca35c2630ec4ca46917cd26867b99980c6" prot="public">
          <name>DBUS_INVALID_BAD_BYTE_ORDER</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007caa1db95a8173f3a98c92ae0c450ac76bf" prot="public">
          <name>DBUS_INVALID_BAD_PROTOCOL_VERSION</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca11481de7a7ae3ddfa0b8ec3413c730a4" prot="public">
          <name>DBUS_INVALID_BAD_MESSAGE_TYPE</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca3f6763f02f3586ed0191ff660ee8cb01" prot="public">
          <name>DBUS_INVALID_BAD_SERIAL</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca9e643ea4c9ce971512a359ed3e09032c" prot="public">
          <name>DBUS_INVALID_INSANE_FIELDS_ARRAY_LENGTH</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cac6dfa6d5dcd4d7b547267c2002953f22" prot="public">
          <name>DBUS_INVALID_INSANE_BODY_LENGTH</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cac840a2154f0d69ec10947b972a381af2" prot="public">
          <name>DBUS_INVALID_MESSAGE_TOO_LONG</name>
          <initializer>= 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca729679d1c3c23e3504e5012658c59b58" prot="public">
          <name>DBUS_INVALID_HEADER_FIELD_CODE</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca1a5ef47d3b672cd3e5c0465c03e2f8bf" prot="public">
          <name>DBUS_INVALID_HEADER_FIELD_HAS_WRONG_TYPE</name>
          <initializer>= 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca8bbe7bc4baac40e0f89a84d36b3beba4" prot="public">
          <name>DBUS_INVALID_USES_LOCAL_INTERFACE</name>
          <initializer>= 22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007caf8c71a4d34b8387fdc2f66c6b9d1cbb2" prot="public">
          <name>DBUS_INVALID_USES_LOCAL_PATH</name>
          <initializer>= 23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca25993f043ab106583f1d9eb8a3ac6ad4" prot="public">
          <name>DBUS_INVALID_HEADER_FIELD_APPEARS_TWICE</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cad02305c200dc26b31dc7a1b091564f14" prot="public">
          <name>DBUS_INVALID_BAD_DESTINATION</name>
          <initializer>= 25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca1c0de952f3fff7d30287f8b0bafe38f1" prot="public">
          <name>DBUS_INVALID_BAD_INTERFACE</name>
          <initializer>= 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca1378fdb0d607f57c1860aa84a3f0bc45" prot="public">
          <name>DBUS_INVALID_BAD_MEMBER</name>
          <initializer>= 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca1550ab88278deb02262ade933405931d" prot="public">
          <name>DBUS_INVALID_BAD_ERROR_NAME</name>
          <initializer>= 28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cab95e7fddf5bc7f9b2e3a6e02284239a0" prot="public">
          <name>DBUS_INVALID_BAD_SENDER</name>
          <initializer>= 29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca37ea73a19102ba7e9d7a4cfdebb46e70" prot="public">
          <name>DBUS_INVALID_MISSING_PATH</name>
          <initializer>= 30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca508a236adb483443e8c166a5cffcea7e" prot="public">
          <name>DBUS_INVALID_MISSING_INTERFACE</name>
          <initializer>= 31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca3c355308f38734f0f7f2899de24e48af" prot="public">
          <name>DBUS_INVALID_MISSING_MEMBER</name>
          <initializer>= 32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca242b0b803e4d1888379b1e15e50cef59" prot="public">
          <name>DBUS_INVALID_MISSING_ERROR_NAME</name>
          <initializer>= 33</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca67878bfcf65cbec6f893cdb99ebb664d" prot="public">
          <name>DBUS_INVALID_MISSING_REPLY_SERIAL</name>
          <initializer>= 34</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca02c6bcb7b722790abcafc6f5cc6da5c7" prot="public">
          <name>DBUS_INVALID_LENGTH_OUT_OF_BOUNDS</name>
          <initializer>= 35</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca4c59b0f85de7a91a941a6367befc3aa9" prot="public">
          <name>DBUS_INVALID_ARRAY_LENGTH_EXCEEDS_MAXIMUM</name>
          <initializer>= 36</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007caaad0e0332325754b9c18ac06ea786f3b" prot="public">
          <name>DBUS_INVALID_BAD_PATH</name>
          <initializer>= 37</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007caba51b299854d0a2bff05459142e619ed" prot="public">
          <name>DBUS_INVALID_SIGNATURE_LENGTH_OUT_OF_BOUNDS</name>
          <initializer>= 38</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca616f30dea02e494accfb43a7852620ad" prot="public">
          <name>DBUS_INVALID_BAD_UTF8_IN_STRING</name>
          <initializer>= 39</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca83357544a49f145aaf890eea157607f4" prot="public">
          <name>DBUS_INVALID_ARRAY_LENGTH_INCORRECT</name>
          <initializer>= 40</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca5142188d2e6eb04f8cc4f40db8a01ff2" prot="public">
          <name>DBUS_INVALID_VARIANT_SIGNATURE_LENGTH_OUT_OF_BOUNDS</name>
          <initializer>= 41</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca031911766a01bbe19e63d61760556312" prot="public">
          <name>DBUS_INVALID_VARIANT_SIGNATURE_BAD</name>
          <initializer>= 42</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca2b78374da0da258c59627adde720750b" prot="public">
          <name>DBUS_INVALID_VARIANT_SIGNATURE_EMPTY</name>
          <initializer>= 43</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca9bd03296e8bbb7b16301689925c39022" prot="public">
          <name>DBUS_INVALID_VARIANT_SIGNATURE_SPECIFIES_MULTIPLE_VALUES</name>
          <initializer>= 44</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007caa9166e2d14dda17968f9231fe36b8816" prot="public">
          <name>DBUS_INVALID_VARIANT_SIGNATURE_MISSING_NUL</name>
          <initializer>= 45</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca7751d3bdb75b6fdf97c786bfddf2ec1f" prot="public">
          <name>DBUS_INVALID_STRING_MISSING_NUL</name>
          <initializer>= 46</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cabe94e728b0bd1f14cd4b3db14c7946f9" prot="public">
          <name>DBUS_INVALID_SIGNATURE_MISSING_NUL</name>
          <initializer>= 47</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cad4e4ed7e1d07421750bb1803e1735f22" prot="public">
          <name>DBUS_INVALID_EXCEEDED_MAXIMUM_DICT_ENTRY_RECURSION</name>
          <initializer>= 48</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca25747be875cfa65f2308bd3124215e70" prot="public">
          <name>DBUS_INVALID_DICT_ENTRY_ENDED_BUT_NOT_STARTED</name>
          <initializer>= 49</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca32bee4632253b4d1329447b4b151bf06" prot="public">
          <name>DBUS_INVALID_DICT_ENTRY_STARTED_BUT_NOT_ENDED</name>
          <initializer>= 50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca88846b2d46e4bd8fb8b6c884f2950199" prot="public">
          <name>DBUS_INVALID_DICT_ENTRY_HAS_NO_FIELDS</name>
          <initializer>= 51</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca1c05b2fa190a127aa7fb02a259483f0a" prot="public">
          <name>DBUS_INVALID_DICT_ENTRY_HAS_ONLY_ONE_FIELD</name>
          <initializer>= 52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca9251413ad0f69feb8d899bfd318dbcb6" prot="public">
          <name>DBUS_INVALID_DICT_ENTRY_HAS_TOO_MANY_FIELDS</name>
          <initializer>= 53</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca76fe4228a43bfef15fbc204fc9d2c893" prot="public">
          <name>DBUS_INVALID_DICT_ENTRY_NOT_INSIDE_ARRAY</name>
          <initializer>= 54</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cab756f13498ba5b374ff30e91caa8f1c0" prot="public">
          <name>DBUS_INVALID_DICT_KEY_MUST_BE_BASIC_TYPE</name>
          <initializer>= 55</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca60d2a83a4ae72ca0226e602af3f6f248" prot="public">
          <name>DBUS_INVALID_MISSING_UNIX_FDS</name>
          <initializer>= 56</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca7c4f88921d3c364c8cb3a8522dd1fde4" prot="public">
          <name>DBUS_INVALID_NESTED_TOO_DEEPLY</name>
          <initializer>= 57</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca3fd8f7f213a50c0c4da2195dd3608863" prot="public">
          <name>DBUS_VALIDITY_LAST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This is primarily used in unit testing, so we can verify that each invalid message is invalid for the expected reasons. </para>        </briefdescription>
        <detaileddescription>
<para>Thus we really want a distinct enum value for every codepath leaving the validator functions. Enum values are specified manually for ease of debugging (so you can see the enum value given a printf) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="50" column="1" bodyfile="dbus/dbus-marshal-validate.h" bodystart="49" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DBusMarshal_1ga99428767c59132314c86bb096c768ab5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structHeaderFieldType" kindref="compound">HeaderFieldType</ref></type>
        <definition>const HeaderFieldType _dbus_header_field_types[DBUS_HEADER_FIELD_LAST+1]</definition>
        <argsstring>[DBUS_HEADER_FIELD_LAST+1]</argsstring>
        <name>_dbus_header_field_types</name>
        <initializer>= {
  { <ref refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" kindref="member">DBUS_HEADER_FIELD_INVALID</ref>, <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref> },
  { <ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>, <ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref> },
  { <ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" kindref="member">DBUS_HEADER_FIELD_REPLY_SERIAL</ref>, <ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref> },
  { <ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" kindref="member">DBUS_HEADER_FIELD_SENDER</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>, <ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref> },
  { <ref refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" kindref="member">DBUS_HEADER_FIELD_UNIX_FDS</ref>, <ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref> }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="76" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga4e9ff854f7cf79f5523eecd3734020c1" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass body_reader_class</definition>
        <argsstring></argsstring>
        <name>body_reader_class</name>
        <initializer>= {
  &quot;body&quot;, 0,
  FALSE,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, 
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  base_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="634" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga605bd1ee43729d1121fb2efc75fb6d93" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass body_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>body_types_only_reader_class</name>
        <initializer>= {
  &quot;body types&quot;, 1,
  TRUE,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, 
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  base_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="642" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga3423f74e2af6524f4ca68581da374970" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass struct_reader_class</definition>
        <argsstring></argsstring>
        <name>struct_reader_class</name>
        <initializer>= {
  &quot;struct&quot;, 2,
  FALSE,
  struct_or_dict_entry_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  struct_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="650" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1gac191daf0c0844590b96c5f090ef180f0" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass struct_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>struct_types_only_reader_class</name>
        <initializer>= {
  &quot;struct types&quot;, 3,
  TRUE,
  struct_or_dict_entry_types_only_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  struct_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="658" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga364ce4c3498f29c7a192cf4c7375230a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass dict_entry_reader_class</definition>
        <argsstring></argsstring>
        <name>dict_entry_reader_class</name>
        <initializer>= {
  &quot;dict_entry&quot;, 4,
  FALSE,
  struct_or_dict_entry_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  dict_entry_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="666" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga3bf4103e19f4e033fe184e47c4eae653" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass dict_entry_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>dict_entry_types_only_reader_class</name>
        <initializer>= {
  &quot;dict_entry types&quot;, 5,
  TRUE,
  struct_or_dict_entry_types_only_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  dict_entry_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="674" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga02bc906445732ea3c5671d3e3df5c693" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass array_reader_class</definition>
        <argsstring></argsstring>
        <name>array_reader_class</name>
        <initializer>= {
  &quot;array&quot;, 6,
  FALSE,
  array_reader_recurse,
  array_reader_check_finished,
  array_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="682" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga0f5c45d099582cee81f9669f8cc628b0" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass array_types_only_reader_class</definition>
        <argsstring></argsstring>
        <name>array_types_only_reader_class</name>
        <initializer>= {
  &quot;array types&quot;, 7,
  TRUE,
  array_types_only_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  array_types_only_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="690" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga9d8972f667975da47ac1e404dda397b6" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref></type>
        <definition>const DBusTypeReaderClass variant_reader_class</definition>
        <argsstring></argsstring>
        <name>variant_reader_class</name>
        <initializer>= {
  &quot;variant&quot;, 8,
  FALSE,
  variant_reader_recurse,
  <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,
  base_reader_next
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="698" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMarshal_1ga94fb907fb7c28c05d532dd5c3945b1e9" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structDBusTypeReaderClass" kindref="compound">DBusTypeReaderClass</ref> *const</type>
        <definition>const DBusTypeReaderClass* const all_reader_classes[]</definition>
        <argsstring>[]</argsstring>
        <name>all_reader_classes</name>
        <initializer>= {
  &amp;body_reader_class,
  &amp;body_types_only_reader_class,
  &amp;struct_reader_class,
  &amp;struct_types_only_reader_class,
  &amp;dict_entry_reader_class,
  &amp;dict_entry_types_only_reader_class,
  &amp;array_reader_class,
  &amp;array_types_only_reader_class,
  &amp;variant_reader_class
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="708" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="708" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusMarshal_1ga8f2fded6f3e794fc58bc80bceb1d9673" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pack_2_octets</definition>
        <argsstring>(dbus_uint16_t value, int byte_order, unsigned char *data)</argsstring>
        <name>pack_2_octets</name>
        <param>
          <type><ref refid="group__DBusTypes_1ga8132d71032da957f08ce4e0ec87f2063" kindref="member">dbus_uint16_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="89" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="89" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1a33d7c986c08ad8448ed688270e435c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pack_4_octets</definition>
        <argsstring>(dbus_uint32_t value, int byte_order, unsigned char *data)</argsstring>
        <name>pack_4_octets</name>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="102" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4cf27fd85793d93fbb9aab518944e54b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pack_8_octets</definition>
        <argsstring>(DBusBasicValue value, int byte_order, unsigned char *data)</argsstring>
        <name>pack_8_octets</name>
        <param>
          <type><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="115" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="115" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga44e670d715bb678045f3d79b35920b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_pack_uint32</definition>
        <argsstring>(dbus_uint32_t value, int byte_order, unsigned char *data)</argsstring>
        <name>_dbus_pack_uint32</name>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Packs a 32 bit unsigned integer into a data pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="135" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="135" bodyend="140"/>
        <references refid="unionDBusBasicValue_1a675c1684b9f5bedbb5d445eee3594165" compoundref="dbus-types_8h" startline="146">DBusBasicValue::u64</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga03d66698b0e3e1259cbe1a5d7e9af598" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void swap_8_octets</definition>
        <argsstring>(DBusBasicValue *value, int byte_order)</argsstring>
        <name>swap_8_octets</name>
        <param>
          <type><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="143" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga09651b41b9a5aca37b0e2ff269880d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga8132d71032da957f08ce4e0ec87f2063" kindref="member">dbus_uint16_t</ref></type>
        <definition>dbus_uint16_t _dbus_unpack_uint16</definition>
        <argsstring>(int byte_order, const unsigned char *data)</argsstring>
        <name>_dbus_unpack_uint16</name>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Unpacks a 16 bit unsigned integer from a data pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte order to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="161" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="161" bodyend="170"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>dbus_uint32_t _dbus_unpack_uint32</definition>
        <argsstring>(int byte_order, const unsigned char *data)</argsstring>
        <name>_dbus_unpack_uint32</name>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Unpacks a 32 bit unsigned integer from a data pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte order to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="182" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="182" bodyend="191"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
        <referencedby refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</referencedby>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMarshal_1ga7f3320a0b0f7633cdf5c149588ae9bd9" compoundref="dbus-marshal-basic_8c" startline="1280" endline="1350">_dbus_verbose_bytes</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga61480f48d3609121f7cf39d5e4461835" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_2_octets</definition>
        <argsstring>(DBusString *str, int offset, dbus_uint16_t value, int byte_order)</argsstring>
        <name>set_2_octets</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga8132d71032da957f08ce4e0ec87f2063" kindref="member">dbus_uint16_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="195" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="195" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac2c848a88179e1ab80bd7e191b53aa2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_4_octets</definition>
        <argsstring>(DBusString *str, int offset, dbus_uint32_t value, int byte_order)</argsstring>
        <name>set_4_octets</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="211" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="211" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga95acc3cda7cfaabc039302d84b6a60e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_8_octets</definition>
        <argsstring>(DBusString *str, int offset, DBusBasicValue value, int byte_order)</argsstring>
        <name>set_8_octets</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="227" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="227" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_marshal_set_uint32</definition>
        <argsstring>(DBusString *str, int pos, dbus_uint32_t value, int byte_order)</argsstring>
        <name>_dbus_marshal_set_uint32</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <briefdescription>
<para>Sets the 4 bytes at the given offset to a marshaled unsigned integer, replacing anything found there previously. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write the marshalled int to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte offset where int should be written </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="253" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="253" bodyend="259"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusString_1gafe7921a92467cdefaa0a7829d6cf260b" compoundref="dbus-string_8c" startline="1403" endline="1451">_dbus_string_replace_len</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</referencedby>
        <referencedby refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga870a10eee197e0df721e362f3aed061b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t set_string</definition>
        <argsstring>(DBusString *str, int pos, const char *value, int byte_order, int *old_end_pos, int *new_end_pos)</argsstring>
        <name>set_string</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>old_end_pos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>new_end_pos</declname>
        </param>
        <briefdescription>
<para>Sets the existing marshaled string at the given offset with a new marshaled string. </para>        </briefdescription>
        <detaileddescription>
<para>The given offset must point to an existing string or the wrong length will be deleted and replaced with the new string.</para><para>Note: no attempt is made by this function to re-align any data which has been already marshalled after this string. Use with caution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write the marshalled string to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the marshaled string length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store byte after the nul byte of the old value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store byte after the nul byte of the new value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="281" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="281" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga876c2e6acba542ab0ba34b31ddf35115" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t set_signature</definition>
        <argsstring>(DBusString *str, int pos, const char *value, int byte_order, int *old_end_pos, int *new_end_pos)</argsstring>
        <name>set_signature</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>old_end_pos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>new_end_pos</declname>
        </param>
        <briefdescription>
<para>Sets the existing marshaled signature at the given offset to a new marshaled signature. </para>        </briefdescription>
        <detaileddescription>
<para>Same basic ideas as set_string().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write the marshalled signature to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the marshaled signature length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store byte after the nul byte of the old value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store byte after the nul byte of the new value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="327" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="327" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_marshal_set_basic</definition>
        <argsstring>(DBusString *str, int pos, int type, const void *value, int byte_order, int *old_end_pos, int *new_end_pos)</argsstring>
        <name>_dbus_marshal_set_basic</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>old_end_pos</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>new_end_pos</declname>
        </param>
        <briefdescription>
<para>Sets an existing basic type value to a new value. </para>        </briefdescription>
        <detaileddescription>
<para>Arguments work the same way as _dbus_marshal_basic_type().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location of the current value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the current and new values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the new value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order for marshaling </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store end position of the old value, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store end position of the new value, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="370" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="370" bodyend="442"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="unionDBusBasicValue_1aa350d50ad1d1bffa5286f583f4c9d0ba" compoundref="dbus-types_8h" startline="149">DBusBasicValue::byt</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="unionDBusBasicValue_1acbcb55156f8bee7eb0d88bd5ce46b3d5" compoundref="dbus-types_8h" startline="150">DBusBasicValue::str</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="unionDBusBasicValue_1a96bb883967d05d7c0acceb0d95821aa3" compoundref="dbus-types_8h" startline="141">DBusBasicValue::u16</references>
        <references refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" compoundref="dbus-types_8h" startline="143">DBusBasicValue::u32</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>dbus_uint32_t _dbus_marshal_read_uint32</definition>
        <argsstring>(const DBusString *str, int pos, int byte_order, int *new_pos)</argsstring>
        <name>_dbus_marshal_read_uint32</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>new_pos</declname>
        </param>
        <briefdescription>
<para>Convenience function to demarshal a 32 bit unsigned integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position in the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the new position of the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the demarshaled integer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="454" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="454" bodyend="468"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <referencedby refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" compoundref="dbus-marshal-basic_8c" startline="1145" endline="1163">_dbus_marshal_skip_array</referencedby>
        <referencedby refid="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" compoundref="dbus-marshal-basic_8c" startline="1077" endline="1133">_dbus_marshal_skip_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_marshal_read_basic</definition>
        <argsstring>(const DBusString *str, int pos, int type, void *value, int byte_order, int *new_pos)</argsstring>
        <name>_dbus_marshal_read_basic</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>new_pos</declname>
        </param>
        <briefdescription>
<para>Demarshals a basic-typed value. </para>        </briefdescription>
        <detaileddescription>
<para>The &quot;value&quot; pointer is always the address of a variable of the basic type. So e.g. if the basic type is &quot;double&quot; then the pointer is a double*, and if it&apos;s &quot;char*&quot; then the pointer is a &quot;char**&quot;.</para><para>A value of type <ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref> is guaranteed to be large enough to hold any of the types that may be returned, which is handy if you are trying to do things generically. For example you can pass a DBusBasicValue* in to this function, and then pass the same DBusBasicValue* in to _dbus_marshal_basic_type() in order to move a value from one place to another.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position in the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of value to demarshal </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to return value data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to update with new position, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="492" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="492" bodyend="590"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" compoundref="dbus-string_8c" startline="2103" endline="2141">_dbus_string_equal_substring</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusString_1gae7770fdabda32f3e8d9dd50b083dbf1e" compoundref="dbus-string_8c" startline="972" endline="984">_dbus_string_insert_2_aligned</references>
        <references refid="group__DBusString_1gadd296cf1e6af18cb5bec438e9d353b4e" compoundref="dbus-string_8c" startline="996" endline="1008">_dbus_string_insert_4_aligned</references>
        <references refid="group__DBusString_1ga108d7d64fb88fffca31e33181cefa232" compoundref="dbus-string_8c" startline="1020" endline="1034">_dbus_string_insert_8_aligned</references>
        <references refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" compoundref="dbus-string_8c" startline="614" endline="628">_dbus_string_insert_byte</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusProtocol_1ga28f099674760229e6de85a0e3c3e3e46" compoundref="dbus-protocol_8h" startline="181">DBUS_MAXIMUM_SIGNATURE_LENGTH</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" compoundref="dbus-arch-deps_8h" startline="37">dbus_uint64_t</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
        <referencedby refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga18daa1104cb9055088bfeb83c01b7a4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_2_octets</definition>
        <argsstring>(DBusString *str, int insert_at, dbus_uint16_t value, int byte_order, int *pos_after)</argsstring>
        <name>marshal_2_octets</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga8132d71032da957f08ce4e0ec87f2063" kindref="member">dbus_uint16_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="593" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="593" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4076985e819bbe228372fd87fd59a046" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_4_octets</definition>
        <argsstring>(DBusString *str, int insert_at, dbus_uint32_t value, int byte_order, int *pos_after)</argsstring>
        <name>marshal_4_octets</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="622" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="622" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga29f92571c7c79e6a19c343247a70a5b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_8_octets</definition>
        <argsstring>(DBusString *str, int insert_at, DBusBasicValue value, int byte_order, int *pos_after)</argsstring>
        <name>marshal_8_octets</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="651" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="651" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1191c326d7c6beb83c360d45319f85f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_len_followed_by_bytes</definition>
        <argsstring>(int marshal_as, DBusString *str, int insert_at, const unsigned char *value, int data_len, int byte_order, int *pos_after)</argsstring>
        <name>marshal_len_followed_by_bytes</name>
        <param>
          <type>int</type>
          <declname>marshal_as</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="683" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="683" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga15d29bc1d2b771c66b20592404d44597" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_string</definition>
        <argsstring>(DBusString *str, int insert_at, const char *value, int byte_order, int *pos_after)</argsstring>
        <name>marshal_string</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="752" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="752" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa5ad4672e530563e649c56cf6558ee14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_signature</definition>
        <argsstring>(DBusString *str, int insert_at, const char *value, int *pos_after)</argsstring>
        <name>marshal_signature</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="765" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="765" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga54323d48921de8c5bd04ae01548312bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_marshal_write_basic</definition>
        <argsstring>(DBusString *str, int insert_at, int type, const void *value, int byte_order, int *pos_after)</argsstring>
        <name>_dbus_marshal_write_basic</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
<para>Marshals a basic-typed value. </para>        </briefdescription>
        <detaileddescription>
<para>The &quot;value&quot; pointer is always the address of a variable containing the basic type value. So for example for int32 it will be dbus_int32_t*, and for string it will be const char**. This is for symmetry with <ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic()</ref> and to have a simple consistent rule.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to marshal to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insert_at</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a variable containing the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_after</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> or the position after the type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="794" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="794" bodyend="851"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" compoundref="dbus-string_8c" startline="614" endline="628">_dbus_string_insert_byte</references>
        <references refid="unionDBusBasicValue_1aa350d50ad1d1bffa5286f583f4c9d0ba" compoundref="dbus-types_8h" startline="149">DBusBasicValue::byt</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="unionDBusBasicValue_1acbcb55156f8bee7eb0d88bd5ce46b3d5" compoundref="dbus-types_8h" startline="150">DBusBasicValue::str</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="unionDBusBasicValue_1a96bb883967d05d7c0acceb0d95821aa3" compoundref="dbus-types_8h" startline="141">DBusBasicValue::u16</references>
        <references refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" compoundref="dbus-types_8h" startline="143">DBusBasicValue::u32</references>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7ad06db40a48c544ea084bd3100048d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_1_octets_array</definition>
        <argsstring>(DBusString *str, int insert_at, const unsigned char *value, int n_elements, int byte_order, int *pos_after)</argsstring>
        <name>marshal_1_octets_array</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="854" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="854" bodyend="878"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaec86e8e1ae2f25b673ae6d900ab323c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_swap_array</definition>
        <argsstring>(unsigned char *data, int n_elements, int alignment)</argsstring>
        <name>_dbus_swap_array</name>
        <param>
          <type>unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>Swaps the elements of an array to the opposite byte order. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>start of array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>size of each element </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="888" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="888" bodyend="929"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusString_1ga267217e412c74c74dc3a3e412da5c600" compoundref="dbus-string_8c" startline="1048" endline="1060">_dbus_string_insert_alignment</references>
        <references refid="group__DBusMarshal_1gaec86e8e1ae2f25b673ae6d900ab323c7" compoundref="dbus-marshal-basic_8c" startline="888" endline="929">_dbus_swap_array</references>
        <references refid="group__DBusProtocol_1ga5265afa08a4c8d9f31b287a57e8cb217" compoundref="dbus-protocol_8h" startline="203">DBUS_MAXIMUM_ARRAY_LENGTH</references>
        <references refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" compoundref="dbus-arch-deps_8h" startline="37">dbus_uint64_t</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMarshal_1gaec86e8e1ae2f25b673ae6d900ab323c7" compoundref="dbus-marshal-basic_8c" startline="888" endline="929">_dbus_swap_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacd9f5d47f81b728adcd532d2f48d104c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void swap_array</definition>
        <argsstring>(DBusString *str, int array_start, int n_elements, int byte_order, int alignment)</argsstring>
        <name>swap_array</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>array_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="932" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="932" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5b9facf7f0317dc639680713ffe858a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t marshal_fixed_multi</definition>
        <argsstring>(DBusString *str, int insert_at, const DBusBasicValue *value, int n_elements, int byte_order, int alignment, int *pos_after)</argsstring>
        <name>marshal_fixed_multi</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>const <ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>alignment</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="951" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="951" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga990da87b984d8917da26b89a6470fdf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_marshal_write_fixed_multi</definition>
        <argsstring>(DBusString *str, int insert_at, int element_type, const void *value, int n_elements, int byte_order, int *pos_after)</argsstring>
        <name>_dbus_marshal_write_fixed_multi</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>insert_at</declname>
        </param>
        <param>
          <type>int</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos_after</declname>
        </param>
        <briefdescription>
<para>Marshals a block of values of fixed-length type all at once, as an optimization. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed()</ref> returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> for fixed-length types, which are the basic types minus the string-like types.</para><para>The value argument should be the adddress of an array, so e.g. &quot;const dbus_uint32_t**&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string to marshal to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insert_at</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of array elements </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>address of an array to marshal </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos_after</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> or the position after the type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1020" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1020" bodyend="1064"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_marshal_skip_basic</definition>
        <argsstring>(const DBusString *str, int type, int byte_order, int *pos)</argsstring>
        <name>_dbus_marshal_skip_basic</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Skips over a basic-typed value, reporting the following position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of value to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to position in the string, updated on return to new position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1077" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1077" bodyend="1133"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_marshal_skip_array</definition>
        <argsstring>(const DBusString *str, int element_type, int byte_order, int *pos)</argsstring>
        <name>_dbus_marshal_skip_array</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Skips an array, returning the next position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of array elements </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to position in the string, updated on return to new position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1145" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1145" bodyend="1163"/>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_get_alignment</definition>
        <argsstring>(int typecode)</argsstring>
        <name>_dbus_type_get_alignment</name>
        <param>
          <type>int</type>
          <declname>typecode</declname>
        </param>
        <briefdescription>
<para>Gets the alignment requirement for the given type; will be 1, 4, or 8. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typecode</parametername>
</parameternamelist>
<parameterdescription>
<para>the type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>alignment of 1, 4, or 8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1173" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1173" bodyend="1210"/>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
        <referencedby refid="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" compoundref="dbus-marshal-basic_8c" startline="1145" endline="1163">_dbus_marshal_skip_array</referencedby>
        <referencedby refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" compoundref="dbus-marshal-recursive_8c" startline="923" endline="973">_dbus_type_reader_read_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" compoundref="dbus-message_8c" startline="2791" endline="2825">dbus_message_iter_append_fixed_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_type_to_string</definition>
        <argsstring>(int typecode)</argsstring>
        <name>_dbus_type_to_string</name>
        <param>
          <type>int</type>
          <declname>typecode</declname>
        </param>
        <briefdescription>
<para>Returns a string describing the given type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typecode</parametername>
</parameternamelist>
<parameterdescription>
<para>the type to describe </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a constant string describing the type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1219" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1219" bodyend="1270"/>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <referencedby refid="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" compoundref="dbus-marshal-basic_8c" startline="1431" endline="1435">_dbus_first_type_in_signature_c_str</referencedby>
        <referencedby refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" compoundref="dbus-marshal-basic_8c" startline="1077" endline="1133">_dbus_marshal_skip_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1ga990da87b984d8917da26b89a6470fdf5" compoundref="dbus-marshal-basic_8c" startline="1020" endline="1064">_dbus_marshal_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</referencedby>
        <referencedby refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</referencedby>
        <referencedby refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</referencedby>
        <referencedby refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" compoundref="dbus-marshal-recursive_8c" startline="1360" endline="1397">_dbus_type_reader_set_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
        <referencedby refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7f3320a0b0f7633cdf5c149588ae9bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_verbose_bytes</definition>
        <argsstring>(const unsigned char *data, int len, int offset)</argsstring>
        <name>_dbus_verbose_bytes</name>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>If in verbose mode, print a block of binary data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>where to start counting for byte indexes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1280" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1280" bodyend="1350"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" compoundref="dbus-arch-deps_8h" startline="37">dbus_uint64_t</references>
        <referencedby refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_verbose_bytes_of_string</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_verbose_bytes_of_string</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Dump the given part of the string to verbose log. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>the start of range to dump </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1360" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1360" bodyend="1388"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga7f3320a0b0f7633cdf5c149588ae9bd9" compoundref="dbus-marshal-basic_8c" startline="1280" endline="1350">_dbus_verbose_bytes</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <referencedby refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" compoundref="dbus-message_8c" startline="4051" endline="4068">_dbus_message_loader_return_unix_fds</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" compoundref="dbus-sysdeps-unix_8c" startline="628" endline="675">_dbus_read</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" compoundref="dbus-sysdeps-win_8c" startline="379" endline="436">_dbus_read_socket</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga14aa692ac7e9aab777b9f565c4b8933b" compoundref="dbus-sysdeps-unix_8c" startline="276" endline="433">_dbus_read_socket_with_unix_fds</referencedby>
        <referencedby refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" compoundref="dbus-marshal-recursive_8c" startline="1360" endline="1397">_dbus_type_reader_set_basic</referencedby>
        <referencedby refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" compoundref="dbus-sysdeps-unix_8c" startline="688" endline="711">_dbus_write</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" compoundref="dbus-sysdeps-win_8c" startline="449" endline="482">_dbus_write_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadd3740e55894b1e664ee524dbeddf469" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int map_type_char_to_type</definition>
        <argsstring>(int t)</argsstring>
        <name>map_type_char_to_type</name>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1391" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1391" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_first_type_in_signature</definition>
        <argsstring>(const DBusString *str, int pos)</argsstring>
        <name>_dbus_first_type_in_signature</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Get the first type in the signature. </para>        </briefdescription>
        <detaileddescription>
<para>The difference between this and just getting the first byte of the signature is that you won&apos;t get DBUS_STRUCT_BEGIN_CHAR, you&apos;ll get DBUS_TYPE_STRUCT instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>string containing signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the signature starts </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the first type in the signature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1416" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1416" bodyend="1420"/>
        <referencedby refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</referencedby>
        <referencedby refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" compoundref="dbus-marshal-recursive_8c" startline="820" endline="830">_dbus_type_reader_get_element_type</referencedby>
        <referencedby refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" compoundref="dbus-marshal-recursive_8c" startline="923" endline="973">_dbus_type_reader_read_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga61cc8d9c4e4217be654455d8eb45544c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_first_type_in_signature_c_str</definition>
        <argsstring>(const char *str, int pos)</argsstring>
        <name>_dbus_first_type_in_signature_c_str</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Similar to <ref refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" kindref="member">_dbus_first_type_in_signature</ref>, but operates on a C string buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>a C string buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the signature starts </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the first type in the signature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-basic.c" line="1431" column="1" bodyfile="dbus/dbus-marshal-basic.c" bodystart="1431" bodyend="1435"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusSysdeps_1gac8269b795461ee42004b65734ce89e0b" compoundref="dbus-sysdeps_8h" startline="488">_DBUS_DOUBLES_BITWISE_EQUAL</references>
        <references refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</references>
        <references refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" compoundref="dbus-marshal-basic_8c" startline="370" endline="442">_dbus_marshal_set_basic</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="group__DBusMarshal_1ga44e670d715bb678045f3d79b35920b0b" compoundref="dbus-marshal-basic_8c" startline="135" endline="140">_dbus_pack_uint32</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusTypes_1ga8deac39e1bf9fcca44854afeaaaf6199">DBUS_INT64_CONSTANT</references>
        <references refid="group__DBusTypes_1gab650989bbedae260527d7ca663a2ad9f" compoundref="dbus-arch-deps_8h" startline="36">dbus_int64_t</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusTypes_1ga20f58889c3ab16344378449148264f6d">DBUS_UINT64_CONSTANT</references>
        <references refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" compoundref="dbus-arch-deps_8h" startline="37">dbus_uint64_t</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusSignature_1gac4761ce10d60d7581cfe98beb6a9c57c" compoundref="dbus-signature_8c" startline="92" endline="97">dbus_signature_iter_get_current_type</referencedby>
        <referencedby refid="group__DBusSignature_1gaebb26dbc79dae5e11629f38b2c8277fd" compoundref="dbus-signature_8c" startline="146" endline="153">dbus_signature_iter_get_element_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gabe5eb8c85a5b7f95bb6fbcde6ce37b85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void byteswap_body_helper</definition>
        <argsstring>(DBusTypeReader *reader, dbus_bool_t walk_reader_to_end, int old_byte_order, int new_byte_order, unsigned char *p, unsigned char **new_p)</argsstring>
        <name>byteswap_body_helper</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>walk_reader_to_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>old_byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_byte_order</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>unsigned char **</type>
          <declname>new_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-byteswap.c" line="35" column="1" bodyfile="dbus/dbus-marshal-byteswap.c" bodystart="35" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_marshal_byteswap</definition>
        <argsstring>(const DBusString *signature, int signature_start, int old_byte_order, int new_byte_order, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_marshal_byteswap</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>int</type>
          <declname>signature_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>old_byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_byte_order</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Byteswaps the marshaled data in the given value_str. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>the types in the value_str </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature_start</parametername>
</parameternamelist>
<parameterdescription>
<para>where in signature is the signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the old byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the new byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the values start </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-byteswap.c" line="222" column="1" bodyfile="dbus/dbus-marshal-byteswap.c" bodystart="222" bodyend="244"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
        <references refid="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" compoundref="dbus-marshal-recursive_8c" startline="760" endline="774">_dbus_type_reader_init_types_only</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" compoundref="dbus-marshal-header_8c" startline="1496" endline="1512">_dbus_header_byteswap</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab49ca4819ef45b26463427bb09060844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_header_signature_str, DBUS_HEADER_SIGNATURE)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_header_signature_str</type>
        </param>
        <param>
          <type><ref refid="group__DBusProtocol_1ga82e39a6508e551fb14c7bdbb17590cc6" kindref="member">DBUS_HEADER_SIGNATURE</ref></type>
        </param>
        <briefdescription>
<para>Static <ref refid="structDBusString" kindref="compound">DBusString</ref> containing the signature of a message header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4d454446fbca28c07187eb8bb627f70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_local_interface_str, DBUS_INTERFACE_LOCAL)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_local_interface_str</type>
        </param>
        <param>
          <type><ref refid="group__DBusShared_1ga9ef6478aae637449ec0c5de1679f75ce" kindref="member">DBUS_INTERFACE_LOCAL</ref></type>
        </param>
        <briefdescription>
<para>Static <ref refid="structDBusString" kindref="compound">DBusString</ref> containing the local interface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga991dd170f3d84b4bf195caf3a1046d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_local_path_str, DBUS_PATH_LOCAL)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_local_path_str</type>
        </param>
        <param>
          <type><ref refid="group__DBusShared_1ga850990a54a46142ee7c5f8174cc932c1" kindref="member">DBUS_PATH_LOCAL</ref></type>
        </param>
        <briefdescription>
<para>Static <ref refid="structDBusString" kindref="compound">DBusString</ref> containing the local path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga860198eda0de070c6b55caf96fbb8e0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t reserve_header_padding</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>reserve_header_padding</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="95" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="95" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa7cbccae5b5cbf7d23ceb6bc59067dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void correct_header_padding</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>correct_header_padding</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="107" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="107" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaaaed809fda9ceea16eb4f6195370484f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_header_cache_invalidate_all</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_cache_invalidate_all</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Invalidates all fields in the cache. </para>        </briefdescription>
        <detaileddescription>
<para>This may be used when the cache is totally uninitialized (contains junk) so should not look at what&apos;s in there now.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="134" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="134" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga57c710edcec5384706bc0317946a6c39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_header_cache_one</definition>
        <argsstring>(DBusHeader *header, int field_code, DBusTypeReader *variant_reader)</argsstring>
        <name>_dbus_header_cache_one</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field_code</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>variant_reader</declname>
        </param>
        <briefdescription>
<para>Caches one field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_code</parametername>
</parameternamelist>
<parameterdescription>
<para>the field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>variant_reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader for the variant in the field </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="154" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="154" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char _dbus_header_get_byte_order</definition>
        <argsstring>(const DBusHeader *header)</argsstring>
        <name>_dbus_header_get_byte_order</name>
        <param>
          <type>const <ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Returns the header&apos;s byte order. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the byte order </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="174" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="174" bodyend="179"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" compoundref="dbus-marshal-recursive_8c" startline="1360" endline="1397">_dbus_type_reader_set_basic</references>
        <references refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" compoundref="dbus-marshal-recursive_8c" startline="2106" endline="2125">_dbus_type_writer_recurse</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" compoundref="dbus-marshal-header_8c" startline="1496" endline="1512">_dbus_header_byteswap</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</referencedby>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf3fcd0dfa5ae490e1167904841688bdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_header_cache_revalidate</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_cache_revalidate</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Revalidates the fields cache. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="187" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="187" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga76e6bf50b92dfa528582b345afd06412" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_header_cache_check</definition>
        <argsstring>(DBusHeader *header, int field)</argsstring>
        <name>_dbus_header_cache_check</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks for a field, updating the cache if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="244" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="244" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga12bd94c7355f51c1edaa1967138b834b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_header_cache_known_nonexistent</definition>
        <argsstring>(DBusHeader *header, int field)</argsstring>
        <name>_dbus_header_cache_known_nonexistent</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks whether a field is known not to exist. </para>        </briefdescription>
        <detaileddescription>
<para>It may exist even if it&apos;s not known to exist.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field definitely doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="267" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="267" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadd50caee4818c3c7983a343b3c049a38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t write_basic_field</definition>
        <argsstring>(DBusTypeWriter *writer, int field, int type, const void *value)</argsstring>
        <name>write_basic_field</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a struct of { byte, variant } with the given basic type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer (should be ready to write a struct) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the header field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="285" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="285" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab283e01a2feaef729fb6144ee344f98b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t set_basic_field</definition>
        <argsstring>(DBusTypeReader *reader, int field, int type, const void *value, const DBusTypeReader *realign_root)</argsstring>
        <name>set_basic_field</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Sets a struct of { byte, variant } with the given basic type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader (should be iterating over the array pointing at the field to set) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the header field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>where to realign from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="347" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="347" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_header_get_message_type</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_get_message_type</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Gets the type of the message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="386" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="386" bodyend="394"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" compoundref="dbus-marshal-header_8c" startline="55">TYPE_OFFSET</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" compoundref="dbus-message_8c" startline="1722" endline="1727">dbus_message_get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_set_serial</definition>
        <argsstring>(DBusHeader *header, dbus_uint32_t serial)</argsstring>
        <name>_dbus_header_set_serial</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>serial</declname>
        </param>
        <briefdescription>
<para>Sets the serial number of a header. </para>        </briefdescription>
        <detaileddescription>
<para>This can only be done once on a header.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>the serial </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="404" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="404" bodyend="418"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" compoundref="dbus-marshal-header_8c" startline="63">SERIAL_OFFSET</references>
        <referencedby refid="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" compoundref="dbus-marshal-header_8c" startline="490" endline="509">_dbus_header_copy</referencedby>
        <referencedby refid="group__DBusMessage_1gaa35c17742d8fe091aa039cbd29961c52" compoundref="dbus-message_8c" startline="254" endline="261">dbus_message_set_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>dbus_uint32_t _dbus_header_get_serial</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_get_serial</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" kindref="member">dbus_message_get_serial()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the client serial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="427" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="427" bodyend="433"/>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" compoundref="dbus-marshal-header_8c" startline="63">SERIAL_OFFSET</references>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" compoundref="dbus-message_8c" startline="1127" endline="1132">dbus_message_get_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_reinit</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_reinit</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Re-initializes a header that was previously initialized and never freed. </para>        </briefdescription>
        <detaileddescription>
<para>After this, to make the header valid you have to call <ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>header to re-initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="443" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="443" bodyend="450"/>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" compoundref="dbus-marshal-header_8h" startline="58">DBusHeader::padding</references>
        <referencedby refid="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" compoundref="dbus-marshal-header_8c" startline="460" endline="468">_dbus_header_init</referencedby>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_init</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_init</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Initializes a header, but doesn&apos;t prepare it for use; to make the header valid, you have to call <ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>header to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="460" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="460" bodyend="468"/>
        <references refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" compoundref="dbus-marshal-header_8c" startline="443" endline="450">_dbus_header_reinit</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_free</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_free</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Frees a header. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="476" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="476" bodyend="479"/>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <referencedby refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" compoundref="dbus-message_8c" startline="1587" endline="1656">dbus_message_copy</referencedby>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_copy</definition>
        <argsstring>(const DBusHeader *header, DBusHeader *dest)</argsstring>
        <name>_dbus_header_copy</name>
        <param>
          <type>const <ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Initializes dest with a copy of the given header. </para>        </briefdescription>
        <detaileddescription>
<para>Resets the message serial to 0 on the copy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>header to copy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>destination for copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="490" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="490" bodyend="509"/>
        <references refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</references>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" compoundref="dbus-message_8c" startline="1587" endline="1656">dbus_message_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_create</definition>
        <argsstring>(DBusHeader *header, int byte_order, int message_type, const char *destination, const char *path, const char *interface, const char *member, const char *error_name)</argsstring>
        <name>_dbus_header_create</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>message_type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>member</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_name</declname>
        </param>
        <briefdescription>
<para>Fills in the primary fields of the header, so the header is ready for use. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> may be specified for some or all of the fields to avoid adding those fields. Some combinations of fields don&apos;t make sense, and passing them in will trigger an assertion failure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order of the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the message type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>destination field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interface</parametername>
</parameternamelist>
<parameterdescription>
<para>interface field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>member field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_name</parametername>
</parameternamelist>
<parameterdescription>
<para>error name or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="528" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="528" bodyend="653"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</references>
        <references refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" compoundref="dbus-marshal-recursive_8c" startline="2106" endline="2125">_dbus_type_writer_recurse</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" compoundref="dbus-protocol_8h" startline="288">DBUS_HEADER_FIELD_DESTINATION</references>
        <references refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" compoundref="dbus-protocol_8h" startline="280">DBUS_HEADER_FIELD_ERROR_NAME</references>
        <references refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" compoundref="dbus-protocol_8h" startline="274">DBUS_HEADER_FIELD_INTERFACE</references>
        <references refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" compoundref="dbus-protocol_8h" startline="276">DBUS_HEADER_FIELD_MEMBER</references>
        <references refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" compoundref="dbus-protocol_8h" startline="270">DBUS_HEADER_FIELD_PATH</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusProtocol_1gae1ab70067a616d852e5fc264abb66608" compoundref="dbus-protocol_8h" startline="57">DBUS_MAJOR_PROTOCOL_VERSION</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" compoundref="dbus-marshal-header_8c" startline="123">HEADER_END_BEFORE_PADDING</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" compoundref="dbus-marshal-header_8h" startline="58">DBusHeader::padding</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1gab9e5bf8d87a95c5ca7026a791148ebd4" compoundref="dbus-message_8c" startline="1289" endline="1309">dbus_message_new</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" compoundref="dbus-message_8c" startline="1333" endline="1363">dbus_message_new_method_call</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
        <referencedby refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" compoundref="dbus-message_8c" startline="1424" endline="1453">dbus_message_new_signal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_have_message_untrusted</definition>
        <argsstring>(int max_message_length, DBusValidity *validity, int *byte_order, int *fields_array_len, int *header_len, int *body_len, const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_header_have_message_untrusted</name>
        <param>
          <type>int</type>
          <declname>max_message_length</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref> *</type>
          <declname>validity</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fields_array_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>header_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>body_len</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Given data long enough to contain the length of the message body and the fields array, check whether the data is long enough to contain the entire message (assuming the claimed lengths are accurate). </para>        </briefdescription>
        <detaileddescription>
<para>Also checks that the lengths are in sanity parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_message_length</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum length of a valid message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validity</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for why the data is invalid if it is </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields_array_len</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for claimed fields array length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header_len</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for claimed header length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_len</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for claimed body length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>start of data, 8-aligned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the data is long enough for the claimed length, and the lengths were valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="673" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="673" bodyend="750"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" compoundref="dbus-marshal-header_8c" startline="1392" endline="1406">_dbus_header_get_field_raw</references>
        <references refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" compoundref="dbus-marshal-header_8c" startline="386" endline="394">_dbus_header_get_message_type</references>
        <references refid="group__DBusInternalsUtils_1gafe869e3145b7e32c4fb6a6741c9fc78e" compoundref="dbus-internals_8h" startline="227">_DBUS_INT32_MAX</references>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" compoundref="dbus-string_8c" startline="2103" endline="2141">_dbus_string_equal_substring</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" compoundref="dbus-marshal-validate_8c" startline="1187" endline="1192">_dbus_validate_bus_name</references>
        <references refid="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" compoundref="dbus-marshal-validate_8c" startline="1058" endline="1064">_dbus_validate_error_name</references>
        <references refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" compoundref="dbus-marshal-validate_8c" startline="921" endline="981">_dbus_validate_interface</references>
        <references refid="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" compoundref="dbus-marshal-validate_8c" startline="997" endline="1042">_dbus_validate_member</references>
        <references refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" compoundref="dbus-marshal-header_8c" startline="61">BODY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" compoundref="dbus-protocol_8h" startline="288">DBUS_HEADER_FIELD_DESTINATION</references>
        <references refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" compoundref="dbus-protocol_8h" startline="280">DBUS_HEADER_FIELD_ERROR_NAME</references>
        <references refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" compoundref="dbus-protocol_8h" startline="274">DBUS_HEADER_FIELD_INTERFACE</references>
        <references refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" compoundref="dbus-protocol_8h" startline="266">DBUS_HEADER_FIELD_INVALID</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" compoundref="dbus-protocol_8h" startline="276">DBUS_HEADER_FIELD_MEMBER</references>
        <references refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" compoundref="dbus-protocol_8h" startline="270">DBUS_HEADER_FIELD_PATH</references>
        <references refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" compoundref="dbus-protocol_8h" startline="284">DBUS_HEADER_FIELD_REPLY_SERIAL</references>
        <references refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" compoundref="dbus-protocol_8h" startline="293">DBUS_HEADER_FIELD_SENDER</references>
        <references refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" compoundref="dbus-protocol_8h" startline="297">DBUS_HEADER_FIELD_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" compoundref="dbus-protocol_8h" startline="302">DBUS_HEADER_FIELD_UNIX_FDS</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" compoundref="dbus-protocol_8h" startline="234">DBUS_MESSAGE_TYPE_METHOD_CALL</references>
        <references refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" compoundref="dbus-protocol_8h" startline="236">DBUS_MESSAGE_TYPE_METHOD_RETURN</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" compoundref="dbus-marshal-header_8c" startline="90">EXPECTED_TYPE_OF_FIELD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" compoundref="dbus-marshal-header_8c" startline="67">FIRST_FIELD_OFFSET</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <referencedby refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" compoundref="dbus-message_8c" startline="4302" endline="4355">_dbus_message_loader_queue_messages</referencedby>
        <referencedby refid="group__DBusMessage_1ga67b26fd2c8e3305f3a467a5f3e36b24a" compoundref="dbus-message_8c" startline="4841" endline="4877">dbus_message_demarshal_bytes_needed</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga9ed6eea1ad74fd85722035e404598717" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>static DBusValidity check_mandatory_fields</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>check_mandatory_fields</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="753" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="753" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0a608256d717c57d910dd4ed402b957c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>static DBusValidity load_and_validate_field</definition>
        <argsstring>(DBusHeader *header, int field, DBusTypeReader *variant_reader)</argsstring>
        <name>load_and_validate_field</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>variant_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="782" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="782" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_load</definition>
        <argsstring>(DBusHeader *header, DBusValidationMode mode, DBusValidity *validity, int byte_order, int fields_array_len, int header_len, int body_len, const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_header_load</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" kindref="member">DBusValidationMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref> *</type>
          <declname>validity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fields_array_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>header_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>body_len</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Creates a message header from potentially-untrusted data. </para>        </briefdescription>
        <detaileddescription>
<para>The return value is <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there was enough memory and the data was valid. If it returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, the header will be created. If it returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and *validity == <ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" kindref="member">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</ref>, then there wasn&apos;t enough memory. If it returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and *validity != <ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" kindref="member">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</ref> then the data was invalid.</para><para>The byte_order, fields_array_len, and body_len args should be from <ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted()</ref>. Validation performed in <ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted()</ref> is assumed to have been already done.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header (must be initialized) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to do validation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validity</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for invalidity reason </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order from header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields_array_len</parametername>
</parameternamelist>
<parameterdescription>
<para>claimed length of fields array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_len</parametername>
</parameternamelist>
<parameterdescription>
<para>claimed length of body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header_len</parametername>
</parameternamelist>
<parameterdescription>
<para>claimed length of header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>a string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>start of header, 8-aligned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of string to look at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory or data was invalid, <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="970" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="970" bodyend="1187"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusString_1ga199d0fc00ee3cd0300a1b3870d7986a3" compoundref="dbus-string_8c" startline="2652" endline="2676">_dbus_string_validate_nul</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" compoundref="dbus-marshal-recursive_8c" startline="837" endline="840">_dbus_type_reader_get_value_pos</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" compoundref="dbus-marshal-validate_8c" startline="703" endline="747">_dbus_validate_body_with_reason</references>
        <references refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" compoundref="dbus-marshal-header_8c" startline="61">BODY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" compoundref="dbus-protocol_8h" startline="266">DBUS_HEADER_FIELD_INVALID</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusProtocol_1gae1ab70067a616d852e5fc264abb66608" compoundref="dbus-protocol_8h" startline="57">DBUS_MAJOR_PROTOCOL_VERSION</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" compoundref="dbus-marshal-validate_8h" startline="52">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" compoundref="dbus-marshal-header_8c" startline="67">FIRST_FIELD_OFFSET</references>
        <references refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" compoundref="dbus-marshal-header_8c" startline="57">FLAGS_OFFSET</references>
        <references refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" compoundref="dbus-marshal-header_8h" startline="58">DBusHeader::padding</references>
        <references refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" compoundref="dbus-marshal-header_8c" startline="63">SERIAL_OFFSET</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" compoundref="dbus-marshal-header_8c" startline="55">TYPE_OFFSET</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <references refid="group__DBusMarshal_1ga4f04ecce1223b00d263c0accdea144ad" compoundref="dbus-marshal-header_8c" startline="59">VERSION_OFFSET</references>
        <referencedby refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" compoundref="dbus-message_8c" startline="4051" endline="4068">_dbus_message_loader_return_unix_fds</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_update_lengths</definition>
        <argsstring>(DBusHeader *header, int body_len)</argsstring>
        <name>_dbus_header_update_lengths</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>body_len</declname>
        </param>
        <briefdescription>
<para>Fills in the correct body length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the body </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1196" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1196" bodyend="1203"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" compoundref="dbus-marshal-header_8c" startline="61">BODY_LENGTH_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga8d41e8c49e54b93828e6ae432e905cca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t find_field_for_modification</definition>
        <argsstring>(DBusHeader *header, int field, DBusTypeReader *reader, DBusTypeReader *realign_root)</argsstring>
        <name>find_field_for_modification</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Try to find the given field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>a type reader; on success this is left pointing at the struct (uv) for the field, while on failure it is left pointing into empty space at the end of the header fields </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>another type reader; on success or failure it is left pointing to the beginning of the array of fields (i.e. the thing that might need realigning) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1219" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1219" bodyend="1259"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_set_field_basic</definition>
        <argsstring>(DBusHeader *header, int field, int type, const void *value)</argsstring>
        <name>_dbus_header_set_field_basic</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value of a field with basic type. </para>        </briefdescription>
        <detaileddescription>
<para>If the value is a string value, it isn&apos;t allowed to be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>. If the field doesn&apos;t exist, it will be created.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1273" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1273" bodyend="1338"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" compoundref="dbus-marshal-recursive_8c" startline="2140" endline="2158">_dbus_type_writer_append_array</references>
        <references refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMarshal_1gaca36ac2e9b37067279d1bc967793e071" compoundref="dbus-marshal-header_8c" startline="49">FIELDS_ARRAY_ELEMENT_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" compoundref="dbus-marshal-header_8c" startline="67">FIRST_FIELD_OFFSET</references>
        <references refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" compoundref="dbus-marshal-header_8c" startline="123">HEADER_END_BEFORE_PADDING</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <referencedby refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2656" endline="2753">dbus_message_iter_append_basic</referencedby>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
        <referencedby refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" compoundref="dbus-message_8c" startline="1143" endline="1154">dbus_message_set_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_get_field_basic</definition>
        <argsstring>(DBusHeader *header, int field, int type, void *value)</argsstring>
        <name>_dbus_header_get_field_basic</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Gets the value of a field with basic type. </para>        </briefdescription>
        <detaileddescription>
<para>If the field doesn&apos;t exist, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>, otherwise returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1351" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1351" bodyend="1376"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" compoundref="dbus-protocol_8h" startline="266">DBUS_HEADER_FIELD_INVALID</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" compoundref="dbus-marshal-header_8c" startline="90">EXPECTED_TYPE_OF_FIELD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" compoundref="dbus-message_8c" startline="4051" endline="4068">_dbus_message_loader_return_unix_fds</referencedby>
        <referencedby refid="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" compoundref="dbus-message_8c" startline="3450" endline="3462">dbus_message_get_destination</referencedby>
        <referencedby refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" compoundref="dbus-message_8c" startline="3397" endline="3409">dbus_message_get_error_name</referencedby>
        <referencedby refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" compoundref="dbus-message_8c" startline="3227" endline="3239">dbus_message_get_interface</referencedby>
        <referencedby refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" compoundref="dbus-message_8c" startline="3313" endline="3325">dbus_message_get_member</referencedby>
        <referencedby refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" compoundref="dbus-message_8c" startline="3096" endline="3108">dbus_message_get_path</referencedby>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
        <referencedby refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" compoundref="dbus-message_8c" startline="3510" endline="3522">dbus_message_get_sender</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_get_field_raw</definition>
        <argsstring>(DBusHeader *header, int field, const DBusString **str, int *pos)</argsstring>
        <name>_dbus_header_get_field_raw</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Gets the raw marshaled data for a field. </para>        </briefdescription>
        <detaileddescription>
<para>If the field doesn&apos;t exist, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>, otherwise returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>. Returns the start of the marshaled data, i.e. usually the byte where the length starts (for strings and arrays) or for basic types just the value itself.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for the data string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for start of field value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1392" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1392" bodyend="1406"/>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_delete_field</definition>
        <argsstring>(DBusHeader *header, int field)</argsstring>
        <name>_dbus_header_delete_field</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Deletes a field, if it exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1416" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1416" bodyend="1446"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" compoundref="dbus-marshal-recursive_8c" startline="1417" endline="1441">_dbus_type_reader_delete</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_toggle_flag</definition>
        <argsstring>(DBusHeader *header, dbus_uint32_t flag, dbus_bool_t value)</argsstring>
        <name>_dbus_header_toggle_flag</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Toggles a message flag bit, turning on the bit if value = TRUE and flipping it off if value = FALSE. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>the message flag to toggle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>toggle on or off </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1457" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1457" bodyend="1469"/>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" compoundref="dbus-marshal-header_8c" startline="57">FLAGS_OFFSET</references>
        <referencedby refid="group__DBusMessage_1gae734e7f4079375a0256d9e7f855ec4e4" compoundref="dbus-message_8c" startline="4901" endline="4910">dbus_message_set_allow_interactive_authorization</referencedby>
        <referencedby refid="group__DBusMessage_1ga1596d92a8d604f954b48c7410263d2f0" compoundref="dbus-message_8c" startline="3026" endline="3035">dbus_message_set_auto_start</referencedby>
        <referencedby refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" compoundref="dbus-message_8c" startline="2984" endline="2993">dbus_message_set_no_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_get_flag</definition>
        <argsstring>(DBusHeader *header, dbus_uint32_t flag)</argsstring>
        <name>_dbus_header_get_flag</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Gets a message flag bit, returning TRUE if the bit is set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>the message flag to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the flag is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1479" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1479" bodyend="1487"/>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" compoundref="dbus-marshal-header_8c" startline="57">FLAGS_OFFSET</references>
        <referencedby refid="group__DBusMessage_1gae9daa615b732c27d690399cc32e1f5b9" compoundref="dbus-message_8c" startline="4919" endline="4925">dbus_message_get_allow_interactive_authorization</referencedby>
        <referencedby refid="group__DBusMessage_1ga85d396a3a774e15c3dbb7704aa173384" compoundref="dbus-message_8c" startline="3045" endline="3051">dbus_message_get_auto_start</referencedby>
        <referencedby refid="group__DBusMessage_1ga622d051a2e5f578814116a958b240aa4" compoundref="dbus-message_8c" startline="3003" endline="3009">dbus_message_get_no_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_byteswap</definition>
        <argsstring>(DBusHeader *header, int new_order)</argsstring>
        <name>_dbus_header_byteswap</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_order</declname>
        </param>
        <briefdescription>
<para>Swaps the header into the given order if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the new byte order </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1496" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1496" bodyend="1512"/>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" compoundref="dbus-marshal-byteswap_8c" startline="222" endline="244">_dbus_marshal_byteswap</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga73b387e661ca6e9d3299d42883361dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_reader_greater_than</definition>
        <argsstring>(const DBusTypeReader *lhs, const DBusTypeReader *rhs)</argsstring>
        <name>_dbus_type_reader_greater_than</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="35" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1452" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4cbebc086022f332a820b396d446d106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_type_writer_set_enabled</definition>
        <argsstring>(DBusTypeWriter *writer, dbus_bool_t enabled)</argsstring>
        <name>_dbus_type_writer_set_enabled</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="38" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2744" bodyend="2748"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf18c7893f1b11de2e51d9db41ad0c339" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_writer_write_reader_partial</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader, const DBusTypeReader *start_after, int start_after_new_pos, int start_after_new_len, DBusList **fixups)</argsstring>
        <name>_dbus_type_writer_write_reader_partial</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>start_after</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="40" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2674" bodyend="2716"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga06f879bee377de7102fa0cf90a2f979d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_fixups</definition>
        <argsstring>(DBusList **fixups)</argsstring>
        <name>free_fixups</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="54" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="54" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac274fdb6f7a5a1f91ff00041a7598426" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void apply_and_free_fixups</definition>
        <argsstring>(DBusList **fixups, DBusTypeReader *reader)</argsstring>
        <name>apply_and_free_fixups</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="75" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="75" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga09b4a537a8644ef4e67753d2af1cdfd0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int element_type_get_alignment</definition>
        <argsstring>(const DBusString *str, int pos)</argsstring>
        <name>element_type_get_alignment</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="138" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga88a2837e6640e527a93ab63d1e4d8b44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reader_init</definition>
        <argsstring>(DBusTypeReader *reader, int byte_order, const DBusString *type_str, int type_pos, const DBusString *value_str, int value_pos)</argsstring>
        <name>reader_init</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="145" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="145" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae7d2b6d923991a8858b23ea35d757f8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void base_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>base_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="161" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="161" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae83dc4b5e1711493ddd8fe52af2edcaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void struct_or_dict_entry_types_only_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>struct_or_dict_entry_types_only_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="174" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="174" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadbacf5fa11325f5edf639e8dae126d66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void struct_or_dict_entry_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>struct_or_dict_entry_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="188" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="188" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1c2c5d19423cfa1486989cbd645daa62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_types_only_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>array_types_only_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="198" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="198" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga974268d3d22b5bf01ead4d8c3371f055" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int array_reader_get_array_len</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>array_reader_get_array_len</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="217" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="217" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa8ac04df6f47dc554444c6859d09f1eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>array_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="239" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="239" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga018b8333fd3e52614867c25ff6d3d885" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void variant_reader_recurse</definition>
        <argsstring>(DBusTypeReader *sub, DBusTypeReader *parent)</argsstring>
        <name>variant_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="274" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="274" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa8b0a083b90242ef8b9978c114d589d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t array_reader_check_finished</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>array_reader_check_finished</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="307" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="307" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5ba2d6518414894b194fc565fdd6321d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void skip_one_complete_type</definition>
        <argsstring>(const DBusString *type_str, int *type_pos)</argsstring>
        <name>skip_one_complete_type</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="324" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_signature_next</definition>
        <argsstring>(const char *type_str, int *type_pos)</argsstring>
        <name>_dbus_type_signature_next</name>
        <param>
          <type>const char *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
<para>Skips to the next &quot;complete&quot; type inside a type signature. </para>        </briefdescription>
        <detaileddescription>
<para>The signature is read starting at type_pos, and the next type position is stored in the same variable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>a type signature (must be valid) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>an integer position in the type signature (in and out) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="340" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="340" bodyend="421"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga8d9c5bcc039d9099df197a125a7259b8" compoundref="dbus-marshal-basic_8c" startline="1145" endline="1163">_dbus_marshal_skip_array</references>
        <references refid="group__DBusMarshal_1gafd1ab7e9bd8e74cc41f03c76f4dce2dd" compoundref="dbus-marshal-basic_8c" startline="1077" endline="1133">_dbus_marshal_skip_basic</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" compoundref="dbus-marshal-recursive_8h" startline="41">DBusTypeReader::byte_order</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" compoundref="dbus-marshal-recursive_8h" startline="43">DBusTypeReader::finished</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be">DBusTypeReader::u</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusSignature_1ga898bbc14392cbedc087ce0be68d35c98" compoundref="dbus-signature_8c" startline="112" endline="132">dbus_signature_iter_get_signature</referencedby>
        <referencedby refid="group__DBusSignature_1ga90e48ef4b86180ba033727107b03bd29" compoundref="dbus-signature_8c" startline="164" endline="193">dbus_signature_iter_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5b0f0fe7903016a801424f0f7a190d8d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int find_len_of_complete_type</definition>
        <argsstring>(const DBusString *type_str, int type_pos)</argsstring>
        <name>find_len_of_complete_type</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="424" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="424" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab7450a21babcff2f05fb31c5fafeda1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void base_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>base_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="437" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="437" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6a5ea437a0fdd826dbde78a7cb2f246d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void struct_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>struct_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="502" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="502" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga36593ac5bd49b769ab32913c84397477" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dict_entry_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>dict_entry_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="523" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="523" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga138de786fe16384339aa79f794ae1161" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_types_only_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>array_types_only_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="544" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="544" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4dea44a02ddd53da69c4b0240eb37929" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void array_reader_next</definition>
        <argsstring>(DBusTypeReader *reader, int current_type)</argsstring>
        <name>array_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="556" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="556" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_init</definition>
        <argsstring>(DBusTypeReader *reader, int byte_order, const DBusString *type_str, int type_pos, const DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_reader_init</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Initializes a type reader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order of the block to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the signature of the block to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location of signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing values block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>start of values block </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="732" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="732" bodyend="749"/>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_init_types_only</definition>
        <argsstring>(DBusTypeReader *reader, const DBusString *type_str, int type_pos)</argsstring>
        <name>_dbus_type_reader_init_types_only</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init()</ref> but the iteration is over the signature, not over values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the signature string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>location in the signature string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="760" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="760" bodyend="774"/>
        <references refid="group__DBusInternalsUtils_1ga5627db5e165848477e620846f6414db1" compoundref="dbus-internals_8h" startline="231">_DBUS_INT_MAX</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" compoundref="dbus-marshal-byteswap_8c" startline="222" endline="244">_dbus_marshal_byteswap</referencedby>
        <referencedby refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" compoundref="dbus-marshal-validate_8c" startline="703" endline="747">_dbus_validate_body_with_reason</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_current_type</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_current_type</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Gets the type of the value the reader is currently pointing to; or for a types-only reader gets the type it&apos;s currently pointing to. </para>        </briefdescription>
        <detaileddescription>
<para>If the reader is at the end of a block or end of a container such as an array, returns <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="785" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="785" bodyend="809"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="structDBusTypeReaderClass_1aafa6c7a0dac10c17b46deb2b6dbd4665" compoundref="dbus-marshal-recursive_8c" startline="132">DBusTypeReaderClass::check_finished</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="structDBusTypeReader_1a551e64ee83df38ebda8c3677a91afe1b" compoundref="dbus-marshal-recursive_8h" startline="43">DBusTypeReader::finished</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" compoundref="dbus-marshal-recursive_8c" startline="820" endline="830">_dbus_type_reader_get_element_type</referencedby>
        <referencedby refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" compoundref="dbus-marshal-recursive_8c" startline="1360" endline="1397">_dbus_type_reader_set_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" compoundref="dbus-message_8c" startline="2139" endline="2147">dbus_message_iter_get_arg_type</referencedby>
        <referencedby refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" compoundref="dbus-message_8c" startline="2391" endline="2407">dbus_message_iter_get_fixed_array</referencedby>
        <referencedby refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_element_type</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_element_type</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Gets the type of an element of the array the reader is currently pointing to. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s an error to call this if <ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type()</ref> doesn&apos;t return <ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref> for this reader.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="820" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="820" bodyend="830"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga868a7aeddb9b54b2805776b512f68cb4" compoundref="dbus-message_8c" startline="2158" endline="2167">dbus_message_iter_get_element_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_value_pos</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_value_pos</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Gets the current position in the value block. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="837" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="837" bodyend="840"/>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac87315d74386314ec3b148ef737626d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_read_raw</definition>
        <argsstring>(const DBusTypeReader *reader, const unsigned char **value_location)</argsstring>
        <name>_dbus_type_reader_read_raw</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>value_location</declname>
        </param>
        <briefdescription>
<para>Get the address of the marshaled value in the data being read. </para>        </briefdescription>
        <detaileddescription>
<para>The address may not be aligned; you have to align it to the type of the value you want to read. Most of the demarshal routines do this for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_location</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the marshaled value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="852" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="852" bodyend="860"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_read_basic</definition>
        <argsstring>(const DBusTypeReader *reader, void *value)</argsstring>
        <name>_dbus_type_reader_read_basic</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Reads a basic-typed value, as with <ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="869" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="869" bodyend="890"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" compoundref="dbus-marshal-recursive_8h" startline="41">DBusTypeReader::byte_order</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" compoundref="dbus-message_8c" startline="2293" endline="2325">dbus_message_iter_get_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7def93d676d528c261aa274cea41c29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_type_reader_get_array_length</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_get_array_length</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes in the array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader to read from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes in the array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="899" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="899" bodyend="905"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <referencedby refid="group__DBusMessage_1gab8ff47649497b3e0b93a2289f5d3eb23" compoundref="dbus-message_8c" startline="2346" endline="2353">dbus_message_iter_get_array_len</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_read_fixed_multi</definition>
        <argsstring>(const DBusTypeReader *reader, void *value, int *n_elements)</argsstring>
        <name>_dbus_type_reader_read_fixed_multi</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_elements</declname>
        </param>
        <briefdescription>
<para>Reads a block of fixed-length basic values, from the current point in an array to the end of the array. </para>        </briefdescription>
        <detaileddescription>
<para>Does not work for arrays of string or container types.</para><para>This function returns the array in-place; it does not make a copy, and it does not swap the bytes.</para><para>If you ask for <ref refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" kindref="member">DBUS_TYPE_DOUBLE</ref> you will get a &quot;const double*&quot; back and the &quot;value&quot; argument should be a &quot;const double**&quot; and so on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return the array values </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return number of array elements </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="923" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="923" bodyend="973"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be">DBusTypeReader::u</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" compoundref="dbus-message_8c" startline="2391" endline="2407">dbus_message_iter_get_fixed_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_recurse</definition>
        <argsstring>(DBusTypeReader *reader, DBusTypeReader *sub)</argsstring>
        <name>_dbus_type_reader_recurse</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Initialize a new reader pointing to the first type and corresponding value that&apos;s a child of the current container. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s an error to call this if the current type is a non-container.</para><para>Note that <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> traverses values, not types. So if you have an empty array of array of int, you can&apos;t recurse into it. You can only recurse into each element.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>a reader to init pointing to the first child </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="988" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="988" bodyend="1040"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="structDBusTypeReaderClass_1a7cd297c0e03c5204bc41bf305c7688c9" compoundref="dbus-marshal-recursive_8c" startline="128">DBusTypeReaderClass::id</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1ae9a1b13f853dda37eeaf6acb93879317" compoundref="dbus-marshal-recursive_8c" startline="130">DBusTypeReaderClass::recurse</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" compoundref="dbus-message_8c" startline="2195" endline="2206">dbus_message_iter_recurse</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_next</definition>
        <argsstring>(DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_next</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Skip to the next value on this &quot;level&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>e.g. the next field in a struct, the next value in an array. Returns FALSE at the end of the current container.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FALSE if nothing more to read at or below this level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1051" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1051" bodyend="1077"/>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="structDBusTypeReaderClass_1a9ef686a97bbab3dc264628b62a4d5686" compoundref="dbus-marshal-recursive_8c" startline="133">DBusTypeReaderClass::next</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" compoundref="dbus-marshal-recursive_8c" startline="1091" endline="1098">_dbus_type_reader_has_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf2f5b2f027fa7d24f6179c6dbdf71a83" compoundref="dbus-marshal-recursive_8c" startline="340" endline="421">_dbus_type_signature_next</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusMessage_1ga554e9fafd4dcc84cebe9da9344846a82" compoundref="dbus-message_8c" startline="2114" endline="2122">dbus_message_iter_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_has_next</definition>
        <argsstring>(const DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_reader_has_next</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Check whether there&apos;s another value on this &quot;level&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>e.g. the next field in a struct, the next value in an array. Returns FALSE at the end of the current container.</para><para>You probably don&apos;t want to use this; it makes for an awkward for/while loop. A nicer one is &quot;while ((current_type = get_current_type()) != INVALID)&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FALSE if nothing more to read at or below this level </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1091" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1091" bodyend="1098"/>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <referencedby refid="group__DBusMessage_1gaaffc75a699c96ff6197287f166df2149" compoundref="dbus-message_8c" startline="2095" endline="2103">dbus_message_iter_has_next</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_reader_get_signature</definition>
        <argsstring>(const DBusTypeReader *reader, const DBusString **str_p, int *start_p, int *len_p)</argsstring>
        <name>_dbus_type_reader_get_signature</name>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>str_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>start_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_p</declname>
        </param>
        <briefdescription>
<para>Gets the string and range of said string containing the signature of the current value. </para>        </briefdescription>
        <detaileddescription>
<para>Essentially a more complete version of <ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type()</ref> (returns the full type rather than only the outside of the onion).</para><para>Note though that the first byte in a struct signature is <ref refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" kindref="member">DBUS_STRUCT_BEGIN_CHAR</ref> while the current type will be <ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref> so it isn&apos;t true that the first byte of the signature is always the same as the current type. Another difference is that this function will still return a signature when inside an empty array; say you recurse into empty array of int32, the signature is &quot;i&quot; but the current type will always be <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref> since there are no elements to be currently pointing to.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str_p</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return the string with the type in it </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_p</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return start of the type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_p</parametername>
</parameternamelist>
<parameterdescription>
<para>place to return the length of the type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1122" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1122" bodyend="1130"/>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1gab4579a88a1a7eaf648350466f585ef8b" compoundref="dbus-message_8c" startline="2220" endline="2243">dbus_message_iter_get_signature</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac5bc10de155a2d90454e5cbdf9e6a4f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t replacement_block_init</definition>
        <argsstring>(ReplacementBlock *block, DBusTypeReader *reader)</argsstring>
        <name>replacement_block_init</name>
        <param>
          <type><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1139" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1139" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac68ac9b2e5d5c06e77dd1d4b2f9fa29d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t replacement_block_replace</definition>
        <argsstring>(ReplacementBlock *block, DBusTypeReader *reader, const DBusTypeReader *realign_root)</argsstring>
        <name>replacement_block_replace</name>
        <param>
          <type><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1161" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1161" bodyend="1235"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga18d79940249e9558019884666c995275" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void replacement_block_free</definition>
        <argsstring>(ReplacementBlock *block)</argsstring>
        <name>replacement_block_free</name>
        <param>
          <type><ref refid="structReplacementBlock" kindref="compound">ReplacementBlock</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1238" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1238" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gad495a756e91fb5830912352d13673538" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t reader_set_basic_variable_length</definition>
        <argsstring>(DBusTypeReader *reader, int current_type, const void *value, const DBusTypeReader *realign_root)</argsstring>
        <name>reader_set_basic_variable_length</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1267" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1267" bodyend="1310"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaba7d711379a348b9cdc0124f0138499e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reader_set_basic_fixed_length</definition>
        <argsstring>(DBusTypeReader *reader, int current_type, const void *value)</argsstring>
        <name>reader_set_basic_fixed_length</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>current_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1313" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1313" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_set_basic</definition>
        <argsstring>(DBusTypeReader *reader, const void *value, const DBusTypeReader *realign_root)</argsstring>
        <name>_dbus_type_reader_set_basic</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Sets a new value for the basic type value pointed to by the reader, leaving the reader valid to continue reading. </para>        </briefdescription>
        <detaileddescription>
<para>Any other readers will be invalidated if you set a variable-length type such as a string.</para><para>The provided realign_root is the reader to start from when realigning the data that follows the newly-set value. The reader parameter must point to a value below the realign_root parameter. If the type being set is fixed-length, then realign_root may be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>. Only values reachable from realign_root will be realigned, so if your string contains other values you will need to deal with those somehow yourself. It is OK if realign_root is the same reader as the reader parameter, though if you aren&apos;t setting the root it may not be such a good idea.</para><para><xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> currently takes &quot;const&quot; versions of the type and value strings, and this function modifies those strings by casting away the const, which is of course bad if we want to get picky. (To be truly clean you&apos;d have an object which contained the type and value strings and set_basic would be a method on that object... this would also make <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> the same thing as DBusTypeMark. But since <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> is effectively that object for D-Bus it doesn&apos;t seem worth creating some random object.)</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000015"><xreftitle>Todo</xreftitle><xrefdescription><para>optimize this by only rewriting until the old and new values are at the same alignment. Frequently this should result in only replacing the value that&apos;s immediately at hand.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>reader indicating where to set a new value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the value to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>realign from here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1360" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1360" bodyend="1397"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeReaderClass_1ad886037cd736e6f5cdbefb834b0bd5e7" compoundref="dbus-marshal-recursive_8c" startline="129">DBusTypeReaderClass::types_only</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_reader_delete</definition>
        <argsstring>(DBusTypeReader *reader, const DBusTypeReader *realign_root)</argsstring>
        <name>_dbus_type_reader_delete</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Recursively deletes any value pointed to by the reader, leaving the reader valid to continue reading. </para>        </briefdescription>
        <detaileddescription>
<para>Any other readers will be invalidated.</para><para>The provided realign_root is the reader to start from when realigning the data that follows the newly-set value. See <ref refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" kindref="member">_dbus_type_reader_set_basic()</ref> for more details on the realign_root paramter.</para><para><xrefsect id="todo_1_todo000016"><xreftitle>Todo</xreftitle><xrefdescription><para>for now this does not delete the typecodes associated with the value, so this function should only be used for array elements.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>reader indicating where to delete a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>realign from here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1417" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1417" bodyend="1441"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusTypeReader_1a238bd0d5a30d8f59fd9b71c95af25563" compoundref="dbus-marshal-recursive_8h" startline="52">DBusTypeReader::klass</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <referencedby refid="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" compoundref="dbus-marshal-header_8c" startline="1416" endline="1446">_dbus_header_delete_field</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_init</definition>
        <argsstring>(DBusTypeWriter *writer, int byte_order, DBusString *type_str, int type_pos, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_writer_init</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Initialize a write iterator, which is used to write out values in serialized D-Bus format. </para>        </briefdescription>
        <detaileddescription>
<para>The type_pos passed in is expected to be inside an already-valid, though potentially empty, type signature. This means that the byte after type_pos must be either <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref> (aka nul) or some other valid type. <ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> won&apos;t enforce that the signature is already valid (you can append the nul byte at the end if you like), but just be aware that you need the nul byte eventually and <ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> isn&apos;t going to write it for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to marshal into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write typecodes into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert typecodes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write values into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1490" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1490" bodyend="1512"/>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" compoundref="dbus-marshal-recursive_8c" startline="1525" endline="1532">_dbus_type_writer_init_types_delayed</referencedby>
        <referencedby refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_init_types_delayed</definition>
        <argsstring>(DBusTypeWriter *writer, int byte_order, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_writer_init_types_delayed</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Initialize a write iterator, with the signature to be provided later. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to marshal into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write values into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1525" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1525" bodyend="1532"/>
        <references refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" compoundref="dbus-marshal-recursive_8c" startline="1490" endline="1512">_dbus_type_writer_init</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga863b2f232a21582f9e6fe1951b09da91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_add_types</definition>
        <argsstring>(DBusTypeWriter *writer, DBusString *type_str, int type_pos)</argsstring>
        <name>_dbus_type_writer_add_types</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <briefdescription>
<para>Adds type string to the writer, if it had none. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>type string to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>type position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1543" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1543" bodyend="1552"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_remove_types</definition>
        <argsstring>(DBusTypeWriter *writer)</argsstring>
        <name>_dbus_type_writer_remove_types</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
<para>Removes type string from the writer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to remove from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1560" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1560" bodyend="1564"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_type_writer_init_values_only</definition>
        <argsstring>(DBusTypeWriter *writer, int byte_order, const DBusString *type_str, int type_pos, DBusString *value_str, int value_pos)</argsstring>
        <name>_dbus_type_writer_init_values_only</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" kindref="member">_dbus_type_writer_init()</ref>, except the type string passed in should correspond to an existing signature that matches what you&apos;re going to write out. </para>        </briefdescription>
        <detaileddescription>
<para>The writer will check what you write vs. this existing signature.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to init </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order to marshal into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string with signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>start of signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to write values into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where to insert values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1581" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1581" bodyend="1593"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusMarshal_1ga54323d48921de8c5bd04ae01548312bb" compoundref="dbus-marshal-basic_8c" startline="794" endline="851">_dbus_marshal_write_basic</references>
        <references refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" compoundref="dbus-string_8c" startline="899" endline="907">_dbus_string_alloc_space</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" compoundref="dbus-string_8c" startline="2103" endline="2141">_dbus_string_equal_substring</references>
        <references refid="group__DBusString_1gab0770800dce6df97e5d246105a44e7b4" compoundref="dbus-string_8c" startline="614" endline="628">_dbus_string_insert_byte</references>
        <references refid="group__DBusString_1gaa0964d662ad17c58eb044c1b153017a6" compoundref="dbus-string_8c" startline="584" endline="603">_dbus_string_insert_bytes</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1gadeb83962df31e074874e957d17a0d4d1" compoundref="dbus-marshal-recursive_8c" startline="1490" endline="1512">_dbus_type_writer_init</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gafefb8bbb7b678133581abd0bb8f9be0b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_writer_write_basic_no_typecode</definition>
        <argsstring>(DBusTypeWriter *writer, int type, const void *value)</argsstring>
        <name>_dbus_type_writer_write_basic_no_typecode</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1596" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1596" bodyend="1609"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7828e924b66988387fbc7d69f7b209a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void writer_recurse_init_and_check</definition>
        <argsstring>(DBusTypeWriter *writer, int container_type, DBusTypeWriter *sub)</argsstring>
        <name>writer_recurse_init_and_check</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1633" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1633" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae7bddba3e5e8669032bee2666a5c4435" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t write_or_verify_typecode</definition>
        <argsstring>(DBusTypeWriter *writer, int typecode)</argsstring>
        <name>write_or_verify_typecode</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typecode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1699" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1699" bodyend="1768"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gade56bea443e3b35aea39978cb5c8436d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_recurse_struct_or_dict_entry</definition>
        <argsstring>(DBusTypeWriter *writer, int begin_char, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub)</argsstring>
        <name>writer_recurse_struct_or_dict_entry</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>begin_char</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1771" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1771" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga5a0ffa991a8735c36374e33bfaf0bd39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_recurse_array</definition>
        <argsstring>(DBusTypeWriter *writer, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub, dbus_bool_t is_array_append)</argsstring>
        <name>writer_recurse_array</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>is_array_append</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1808" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1808" bodyend="1960"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga265b8a26fcad8dbb2fb3f463d1293e73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_recurse_variant</definition>
        <argsstring>(DBusTypeWriter *writer, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub)</argsstring>
        <name>writer_recurse_variant</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="1981" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="1981" bodyend="2049"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab8afaa514a69cacad4d86c3006cce663" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_type_writer_recurse_contained_len</definition>
        <argsstring>(DBusTypeWriter *writer, int container_type, const DBusString *contained_type, int contained_type_start, int contained_type_len, DBusTypeWriter *sub, dbus_bool_t is_array_append)</argsstring>
        <name>_dbus_type_writer_recurse_contained_len</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>is_array_append</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2052" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2052" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_recurse</definition>
        <argsstring>(DBusTypeWriter *writer, int container_type, const DBusString *contained_type, int contained_type_start, DBusTypeWriter *sub)</argsstring>
        <name>_dbus_type_writer_recurse</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>container_type</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Opens a new container and writes out the initial information for that container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>container_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the container to open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the array element type or variant content type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type_start</parametername>
</parameternamelist>
<parameterdescription>
<para>position to look for the type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the new sub-writer to write container contents </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2106" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2106" bodyend="2125"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" compoundref="dbus-message_8c" startline="2849" endline="2901">dbus_message_iter_open_container</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_append_array</definition>
        <argsstring>(DBusTypeWriter *writer, const DBusString *contained_type, int contained_type_start, DBusTypeWriter *sub)</argsstring>
        <name>_dbus_type_writer_append_array</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>contained_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>contained_type_start</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Append to an existing array. </para>        </briefdescription>
        <detaileddescription>
<para>Essentially, the writer will read an existing length at the write location; jump over that length; and write new fields. On unrecurse(), the existing length will be updated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type</parametername>
</parameternamelist>
<parameterdescription>
<para>element type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_type_start</parametername>
</parameternamelist>
<parameterdescription>
<para>position of element type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the subwriter to init </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2140" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2140" bodyend="2158"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaaa1f89cd948707b896763119300db18d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int writer_get_array_len</definition>
        <argsstring>(DBusTypeWriter *writer)</argsstring>
        <name>writer_get_array_len</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2161" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2161" bodyend="2165"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_unrecurse</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeWriter *sub)</argsstring>
        <name>_dbus_type_writer_unrecurse</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Closes a container created by <ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse()</ref> and writes any additional information to the values block. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the sub-writer created by <ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2176" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2176" bodyend="2297"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" compoundref="dbus-message_8c" startline="2918" endline="2937">dbus_message_iter_close_container</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_write_basic</definition>
        <argsstring>(DBusTypeWriter *writer, int type, const void *value)</argsstring>
        <name>_dbus_type_writer_write_basic</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes out a basic type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the value to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2308" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2308" bodyend="2339"/>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusString_1ga4764e75c464356408fc1a12df93177c1" compoundref="dbus-string_8c" startline="899" endline="907">_dbus_string_alloc_space</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
        <referencedby refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2656" endline="2753">dbus_message_iter_append_basic</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_write_fixed_multi</definition>
        <argsstring>(DBusTypeWriter *writer, int element_type, const void *value, int n_elements)</argsstring>
        <name>_dbus_type_writer_write_fixed_multi</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <briefdescription>
<para>Writes a block of fixed-length basic values, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>those that are both <ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed()</ref> and _dbus_type_is_basic(). The block must be written inside an array.</para><para>The value parameter should be the address of said array of values, so e.g. if it&apos;s an array of double, pass in &quot;const double**&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of stuff in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2356" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2356" bodyend="2392"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusList_1gad99045e79db46159babe69718f343053" compoundref="dbus-list_8c" startline="270" endline="280">_dbus_list_append</references>
        <references refid="group__DBusMarshal_1ga990da87b984d8917da26b89a6470fdf5" compoundref="dbus-marshal-basic_8c" startline="1020" endline="1064">_dbus_marshal_write_fixed_multi</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" compoundref="dbus-marshal-recursive_8c" startline="1122" endline="1130">_dbus_type_reader_get_signature</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" compoundref="dbus-marshal-recursive_8c" startline="213">ARRAY_READER_LEN_POS</references>
        <references refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" compoundref="dbus-marshal-recursive_8h" startline="41">DBusTypeReader::byte_order</references>
        <references refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" compoundref="dbus-marshal-recursive_8h" startline="66">DBusTypeWriter::byte_order</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1gaa0c4c8aa34fa266daa55bd37bdad39b8" compoundref="dbus-signature_8c" startline="294" endline="300">dbus_type_is_container</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusArrayLenFixup_1aad03f6087695c9e9b409817ac34c6e2b" compoundref="dbus-marshal-recursive_8h" startline="95">DBusArrayLenFixup::len_pos_in_reader</references>
        <references refid="structDBusArrayLenFixup_1a97cccea61d89992e6ad3a19bd569dd2f" compoundref="dbus-marshal-recursive_8h" startline="96">DBusArrayLenFixup::new_len</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <references refid="structDBusTypeWriter_1a77c19debc0427372f368cfe7188951f8" compoundref="dbus-marshal-recursive_8h" startline="75">DBusTypeWriter::type_pos</references>
        <references refid="structDBusTypeWriter_1ae6db89e9a3adcd52678dc089810cfb0b" compoundref="dbus-marshal-recursive_8h" startline="70">DBusTypeWriter::type_pos_is_expectation</references>
        <references refid="structDBusTypeReader_1af52e270ededd0aabb642c6130a3e9e40" compoundref="dbus-marshal-recursive_8h" startline="47">DBusTypeReader::type_str</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusTypeReader_1ada12bed6758840dc19b1fcb271fb01be">DBusTypeReader::u</references>
        <references refid="structDBusTypeReader_1ac17280869573f060a945a43e4a5c3ca4" compoundref="dbus-marshal-recursive_8h" startline="50">DBusTypeReader::value_pos</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeReader_1a4065d7775758beb044ee23a71875571f" compoundref="dbus-marshal-recursive_8h" startline="49">DBusTypeReader::value_str</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" compoundref="dbus-message_8c" startline="2791" endline="2825">dbus_message_iter_append_fixed_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae01fd398187c731026927b64b6508644" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_if_after</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader, const DBusTypeReader *start_after)</argsstring>
        <name>enable_if_after</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>start_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2395" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2395" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga70930e215a76bb5cd6c4e40f60e8dd05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t append_fixup</definition>
        <argsstring>(DBusList **fixups, const DBusArrayLenFixup *fixup)</argsstring>
        <name>append_fixup</name>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusArrayLenFixup" kindref="compound">DBusArrayLenFixup</ref> *</type>
          <declname>fixup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2416" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2416" bodyend="2437"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf0ef438dbf930613c9e9cad468442e45" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t writer_write_reader_helper</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader, const DBusTypeReader *start_after, int start_after_new_pos, int start_after_new_len, DBusList **fixups, dbus_bool_t inside_start_after)</argsstring>
        <name>writer_write_reader_helper</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>start_after</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_after_new_len</declname>
        </param>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> **</type>
          <declname>fixups</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>inside_start_after</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2443" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2443" bodyend="2640"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4905750705d220efe9dfc71f49bedc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_type_writer_write_reader</definition>
        <argsstring>(DBusTypeWriter *writer, DBusTypeReader *reader)</argsstring>
        <name>_dbus_type_writer_write_reader</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Iterate through all values in the given reader, writing a copy of each value to the writer. </para>        </briefdescription>
        <detaileddescription>
<para>The reader will be moved forward to its end position.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer to copy to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader to copy from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="2728" column="1" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="2728" bodyend="2732"/>
        <references refid="structDBusTypeWriter_1a52c8617918c108d36b947cbdfc99c6ea" compoundref="dbus-marshal-recursive_8h" startline="72">DBusTypeWriter::enabled</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>DBusValidity _dbus_validate_signature_with_reason</definition>
        <argsstring>(const DBusString *type_str, int type_pos, int len)</argsstring>
        <name>_dbus_validate_signature_with_reason</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>type_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Verifies that the range of type_str from type_pos to type_end is a valid signature. </para>        </briefdescription>
        <detaileddescription>
<para>If this function returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, it will be safe to iterate over the signature with a types-only <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref>. The range passed in should NOT include the terminating nul/DBUS_TYPE_INVALID.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the typecodes start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of typecodes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref> if valid, reason why invalid otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="51" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="51" bodyend="292"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga5866a0fd058aed3396402d0456144fd2" compoundref="dbus-marshal-basic_8c" startline="1416" endline="1420">_dbus_first_type_in_signature</references>
        <references refid="group__DBusInternalsUtils_1gafe869e3145b7e32c4fb6a6741c9fc78e" compoundref="dbus-internals_8h" startline="227">_DBUS_INT32_MAX</references>
        <references refid="group__DBusInternalsUtils_1ga05e902d8504a8a0e0b183fd2e20e329f" compoundref="dbus-internals_8h" startline="177">_DBUS_INT_TO_POINTER</references>
        <references refid="group__DBusList_1gad99045e79db46159babe69718f343053" compoundref="dbus-list_8c" startline="270" endline="280">_dbus_list_append</references>
        <references refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" compoundref="dbus-list_8c" startline="542" endline="557">_dbus_list_clear</references>
        <references refid="group__DBusList_1gaad2ba56c77f2bba8e1e8dcb4b24542a6" compoundref="dbus-list_8c" startline="672" endline="685">_dbus_list_pop_last</references>
        <references refid="group__DBusInternalsUtils_1gabbd3526a2ecd65da80b9f74ac286273d" compoundref="dbus-internals_8h" startline="176">_DBUS_POINTER_TO_INT</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusString_1ga65f0f04b7c9371406fc87343f691e8da" compoundref="dbus-string_8c" startline="2554" endline="2636">_dbus_string_validate_utf8</references>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" compoundref="dbus-marshal-recursive_8c" startline="820" endline="830">_dbus_type_reader_get_element_type</references>
        <references refid="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" compoundref="dbus-marshal-recursive_8c" startline="760" endline="774">_dbus_type_reader_init_types_only</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusMarshal_1ga50a9187b315cfcd6b311ed1b36488c05" compoundref="dbus-marshal-basic_8c" startline="182" endline="191">_dbus_unpack_uint32</references>
        <references refid="group__DBusMarshal_1ga616ba4a0280b10222930aedadb7ea8d9" compoundref="dbus-marshal-validate_8c" startline="785" endline="834">_dbus_validate_path</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga29ad22c7342ead042ae9e55ae20b49f1" compoundref="dbus-protocol_8h" startline="168">DBUS_DICT_ENTRY_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga5265afa08a4c8d9f31b287a57e8cb217" compoundref="dbus-protocol_8h" startline="203">DBUS_MAXIMUM_ARRAY_LENGTH</references>
        <references refid="group__DBusProtocol_1ga28f099674760229e6de85a0e3c3e3e46" compoundref="dbus-protocol_8h" startline="181">DBUS_MAXIMUM_SIGNATURE_LENGTH</references>
        <references refid="group__DBusProtocol_1gaab86b8c110c95911e1c83ae4422b4018" compoundref="dbus-protocol_8h" startline="227">DBUS_MAXIMUM_TYPE_RECURSION_DEPTH</references>
        <references refid="group__DBusProtocol_1ga725657eca93175475e0694b858f51fd6" compoundref="dbus-protocol_8h" startline="156">DBUS_STRUCT_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1gaeab5ea0def3f587a0ed548b77d5c5cea" compoundref="dbus-protocol_8h" startline="160">DBUS_STRUCT_END_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusProtocol_1gac30c00bb6de04d0886cfbace276ec353" compoundref="dbus-protocol_8h" startline="98">DBUS_TYPE_DOUBLE</references>
        <references refid="group__DBusProtocol_1ga49cdd4169af84ed7937f34b31f43e331" compoundref="dbus-protocol_8h" startline="74">DBUS_TYPE_INT16</references>
        <references refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" compoundref="dbus-protocol_8h" startline="82">DBUS_TYPE_INT32</references>
        <references refid="group__DBusProtocol_1gabda4301c14b367f151f86769a1c27c5b" compoundref="dbus-protocol_8h" startline="90">DBUS_TYPE_INT64</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusSignature_1ga7093ae3b35eb073dab939dae69b8c689" compoundref="dbus-signature_8c" startline="383" endline="409">dbus_type_is_valid</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gad74b8d93a1464182ac1af7e0e2435f46" compoundref="dbus-protocol_8h" startline="78">DBUS_TYPE_UINT16</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1gac59cc8f824813444cc9585effd4770d7" compoundref="dbus-protocol_8h" startline="94">DBUS_TYPE_UINT64</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" compoundref="dbus-marshal-validate_8h" startline="52">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeReader_1a160a55f9869e297572c5aa5b6ce7bc71" compoundref="dbus-marshal-recursive_8h" startline="48">DBusTypeReader::type_pos</references>
        <referencedby refid="group__DBusMarshal_1ga8d7aa58f6484d5d24f275dd65f101676" compoundref="dbus-marshal-validate_8c" startline="1228" endline="1240">_dbus_validate_signature</referencedby>
        <referencedby refid="group__DBusSignature_1ga0f4b81be4f6193c7d8da0ee214772e02" compoundref="dbus-signature_8c" startline="233" endline="250">dbus_signature_validate</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6a607c7b5a7fa67d0de9e9b3e058ac80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>static DBusValidity validate_body_helper</definition>
        <argsstring>(DBusTypeReader *reader, int byte_order, dbus_bool_t walk_reader_to_end, int total_depth, const unsigned char *p, const unsigned char *end, const unsigned char **new_p)</argsstring>
        <name>validate_body_helper</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>walk_reader_to_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>total_depth</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const unsigned char **</type>
          <declname>new_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="298" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="298" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>DBusValidity _dbus_validate_body_with_reason</definition>
        <argsstring>(const DBusString *expected_signature, int expected_signature_start, int byte_order, int *bytes_remaining, const DBusString *value_str, int value_pos, int len)</argsstring>
        <name>_dbus_validate_body_with_reason</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>expected_signature</declname>
        </param>
        <param>
          <type>int</type>
          <declname>expected_signature_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>bytes_remaining</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>value_str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Verifies that the range of value_str from value_pos to value_end is a legitimate value of type expected_signature. </para>        </briefdescription>
        <detaileddescription>
<para>If this function returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, it will be safe to iterate over the values with <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref>. The signature is assumed to be already valid.</para><para>If bytes_remaining is not <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, then leftover bytes will be stored there and <ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref> returned. If it is <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, then <ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca10bc3fdc9ca42108aa5a7e091f6aae52" kindref="member">DBUS_INVALID_TOO_MUCH_DATA</ref> will be returned if bytes are left over.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expected_signature</parametername>
</parameternamelist>
<parameterdescription>
<para>the expected types in the value_str </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expected_signature_start</parametername>
</parameternamelist>
<parameterdescription>
<para>where in expected_signature is the signature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes_remaining</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store leftover bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>where the values start </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of values after value_pos </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref> if valid, reason why invalid otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="703" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="703" bodyend="747"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga3a5845f555f11c33ebaa71a75abff661" compoundref="dbus-marshal-recursive_8c" startline="760" endline="774">_dbus_type_reader_init_types_only</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca10bc3fdc9ca42108aa5a7e091f6aae52" compoundref="dbus-marshal-validate_8h" startline="70">DBUS_INVALID_TOO_MUCH_DATA</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" compoundref="dbus-message_8c" startline="4051" endline="4068">_dbus_message_loader_return_unix_fds</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga616ba4a0280b10222930aedadb7ea8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_path</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_path</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid object path name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>Part of the validation ensures that the object path contains only ASCII.</para><para><xrefsect id="todo_1_todo000017"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000018"><xreftitle>Todo</xreftitle><xrefdescription><para>change spec to disallow more things, such as spaces in the path name</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="785" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="785" bodyend="834"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca10bc3fdc9ca42108aa5a7e091f6aae52" compoundref="dbus-marshal-validate_8h" startline="70">DBUS_INVALID_TOO_MUCH_DATA</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" compoundref="dbus-marshal-validate_8h" startline="52">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" compoundref="dbus-marshal-validate_8c" startline="762">VALID_NAME_CHARACTER</references>
        <referencedby refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</referencedby>
        <referencedby refid="group__DBusSyntax_1ga16a33f0ef4a9efd8f5e8f231dcf13d37" compoundref="dbus-syntax_8c" startline="54" endline="84">dbus_validate_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf556cf614f291d931deb07fdeb74369f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * _dbus_validity_to_error_message</definition>
        <argsstring>(DBusValidity validity)</argsstring>
        <name>_dbus_validity_to_error_message</name>
        <param>
          <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
          <declname>validity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="837" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="837" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_interface</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_interface</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid interface name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction and an ASCII subset, see the specification.</para><para><xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="921" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="921" bodyend="981"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusProtocol_1ga80186ac58d031d83127d1ad6644b0011" compoundref="dbus-protocol_8h" startline="178">DBUS_MAXIMUM_NAME_LENGTH</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga8eb3b26eec8ebfeef410caa4acc9570d" compoundref="dbus-marshal-validate_8c" startline="753">VALID_INITIAL_NAME_CHARACTER</references>
        <references refid="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" compoundref="dbus-marshal-validate_8c" startline="762">VALID_NAME_CHARACTER</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" compoundref="dbus-marshal-validate_8c" startline="1058" endline="1064">_dbus_validate_error_name</referencedby>
        <referencedby refid="group__DBusSyntax_1ga1023d9c1a44eb2fe05c2b82e23622f98" compoundref="dbus-syntax_8c" startline="101" endline="131">dbus_validate_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_member</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_member</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid member name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction, etc., see the specification.</para><para><xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="997" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="997" bodyend="1042"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusProtocol_1ga80186ac58d031d83127d1ad6644b0011" compoundref="dbus-protocol_8h" startline="178">DBUS_MAXIMUM_NAME_LENGTH</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1ga8eb3b26eec8ebfeef410caa4acc9570d" compoundref="dbus-marshal-validate_8c" startline="753">VALID_INITIAL_NAME_CHARACTER</references>
        <references refid="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" compoundref="dbus-marshal-validate_8c" startline="762">VALID_NAME_CHARACTER</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusSyntax_1gab8540880d62965990957f07630aba700" compoundref="dbus-syntax_8c" startline="148" endline="178">dbus_validate_member</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_error_name</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_error_name</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid error name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction, etc., see the specification.</para><para><xrefsect id="todo_1_todo000021"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1058" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1058" bodyend="1064"/>
        <references refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" compoundref="dbus-marshal-validate_8c" startline="921" endline="981">_dbus_validate_interface</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusSyntax_1gad1c5b9b2dbdb9f9ade7e497b23cb835f" compoundref="dbus-syntax_8c" startline="195" endline="225">dbus_validate_error_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1441e41ea52cbd46bd2bd3f49a7167fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_validate_bus_name_full</definition>
        <argsstring>(const DBusString *str, int start, int len, dbus_bool_t is_namespace)</argsstring>
        <name>_dbus_validate_bus_name_full</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>is_namespace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1086" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1086" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_bus_name</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_bus_name</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid bus name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>This includes a length restriction, etc., see the specification.</para><para><xrefsect id="todo_1_todo000022"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1187" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1187" bodyend="1192"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusSyntax_1gabedd6f4019fc30bc4bbcd144198f8444" compoundref="dbus-syntax_8c" startline="242" endline="272">dbus_validate_bus_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0d034ebf7eb41cede67c86757ce22261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_bus_namespace</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_bus_namespace</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a prefix of a valid bus name in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" kindref="member">_dbus_validate_bus_name()</ref>, this accepts strings with only one period-separated component.</para><para><xrefsect id="todo_1_todo000023"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1208" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1208" bodyend="1213"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga8d7aa58f6484d5d24f275dd65f101676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_validate_signature</definition>
        <argsstring>(const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_validate_signature</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Checks that the given range of the string is a valid message type signature in the D-Bus protocol. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000024"><xreftitle>Todo</xreftitle><xrefdescription><para>this is inconsistent with most of <ref refid="structDBusString" kindref="compound">DBusString</ref> in that it allows a start,len range that extends past the string end.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte index to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte range exists and is a valid signature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1228" column="1" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1228" bodyend="1240"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga42e50826b5cf62921728432a8e35292c" compoundref="dbus-marshal-validate_8c" startline="51" endline="292">_dbus_validate_signature_with_reason</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1ga2d30023893c9483413f63d2b8d4e1fb9" compoundref="dbus-marshal-validate_8h" startline="174">DEFINE_DBUS_NAME_CHECK</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gafc52be1357121d1ba57d2b381ce3bd33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(path)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>path</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_path() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga540ccb97245861b105db0066245957be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(interface)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>interface</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_interface() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gabc341dacc35d8243ed6350646bf8e685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(member)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>member</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_member() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac396456d8607c59950426c253f7f2b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(error_name)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>error_name</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_error_name() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga1389b299c4eeeb226d819c0c97d51e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(bus_name)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>bus_name</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_bus_name() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0b23332725bff9dfa7cec49603cfb149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(signature)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>signature</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_signature() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaef0b21f97857a0333d84b84f4d98a7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DECLARE_DBUS_NAME_CHECK</definition>
        <argsstring>(utf8)</argsstring>
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param>
          <type>utf8</type>
        </param>
        <briefdescription>
<para>defines _dbus_check_is_valid_utf8() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="202" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" prot="public" static="no">
        <name>FIELDS_ARRAY_SIGNATURE_OFFSET</name>
        <initializer>6</initializer>
        <briefdescription>
<para>Offset from start of _dbus_header_signature_str to the signature of the fields array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="47" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaca36ac2e9b37067279d1bc967793e071" prot="public" static="no">
        <name>FIELDS_ARRAY_ELEMENT_SIGNATURE_OFFSET</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Offset from start of _dbus_header_signature_str to the signature of an element of the fields array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="49" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" prot="public" static="no">
        <name>BYTE_ORDER_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Offset to byte order from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="53" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="53" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" compoundref="dbus-marshal-header_8c" startline="1496" endline="1512">_dbus_header_byteswap</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" prot="public" static="no">
        <name>TYPE_OFFSET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Offset to type from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="55" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="55" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" compoundref="dbus-marshal-header_8c" startline="386" endline="394">_dbus_header_get_message_type</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" prot="public" static="no">
        <name>FLAGS_OFFSET</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Offset to flags from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="57" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="57" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" compoundref="dbus-marshal-header_8c" startline="1457" endline="1469">_dbus_header_toggle_flag</referencedby>
        <referencedby refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" compoundref="dbus-marshal-header_8c" startline="1479" endline="1487">_dbus_header_get_flag</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga4f04ecce1223b00d263c0accdea144ad" prot="public" static="no">
        <name>VERSION_OFFSET</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Offset to version from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="59" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="59" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" prot="public" static="no">
        <name>BODY_LENGTH_OFFSET</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Offset to body length from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="61" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="61" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" prot="public" static="no">
        <name>SERIAL_OFFSET</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Offset to client serial from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="63" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="63" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" prot="public" static="no">
        <name>FIELDS_ARRAY_LENGTH_OFFSET</name>
        <initializer>12</initializer>
        <briefdescription>
<para>Offset to fields array length from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="65" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="65" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" prot="public" static="no">
        <name>FIRST_FIELD_OFFSET</name>
        <initializer>16</initializer>
        <briefdescription>
<para>Offset to first field in header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="67" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="67" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" prot="public" static="no">
        <name>EXPECTED_TYPE_OF_FIELD</name>
        <param><defname>field</defname></param>
        <initializer>(_dbus_header_field_types[field].type)</initializer>
        <briefdescription>
<para>Macro to look up the correct type for a field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="90" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="90" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaa10402f90ea6e004e3b9f04eea34f73c" prot="public" static="no">
        <name>MAX_POSSIBLE_HEADER_PADDING</name>
        <initializer>7</initializer>
        <briefdescription>
<para>The most padding we could ever need for a header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="93" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" prot="public" static="no">
        <name>HEADER_END_BEFORE_PADDING</name>
        <param><defname>header</defname></param>
        <initializer>(_dbus_string_get_length (&amp;(header)-&gt;data) - (header)-&gt;padding)</initializer>
        <briefdescription>
<para>Compute the end of the header, ignoring padding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="123" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="123" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga2055dc20f1e0c13064cebf1fb65b8ce8" prot="public" static="no">
        <name>RECURSIVE_MARSHAL_READ_TRACE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>turn this on to get deluged in TypeReader verbose spam </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="48" column="9" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga428a18f23d9a4c59560f03fd2088fe7f" prot="public" static="no">
        <name>RECURSIVE_MARSHAL_WRITE_TRACE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>turn this on to get deluged in TypeWriter verbose spam </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="51" column="9" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gacca774d24b7d7e790b169f23d3362497" prot="public" static="no">
        <name>ARRAY_READER_LEN_POS</name>
        <param><defname>reader</defname></param>
        <initializer>((reader)-&gt;u.array.start_pos - ((int)(reader)-&gt;array_len_offset) - 4)</initializer>
        <briefdescription>
<para>compute position of array length given array_len_offset, which is the offset back from start_pos to end of the len </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-recursive.c" line="213" column="9" bodyfile="dbus/dbus-marshal-recursive.c" bodystart="213" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga8eb3b26eec8ebfeef410caa4acc9570d" prot="public" static="no">
        <name>VALID_INITIAL_NAME_CHARACTER</name>
        <param><defname>c</defname></param>
        <initializer>( ((c) &gt;= &apos;A&apos; &amp;&amp; (c) &lt;= &apos;Z&apos;) ||               \
    ((c) &gt;= &apos;a&apos; &amp;&amp; (c) &lt;= &apos;z&apos;) ||               \
    ((c) == &apos;_&apos;) )</initializer>
        <briefdescription>
<para>Determine wether the given character is valid as the first character in a name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="753" column="9" bodyfile="dbus/dbus-marshal-validate.c" bodystart="753" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" compoundref="dbus-marshal-validate_8c" startline="921" endline="981">_dbus_validate_interface</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" compoundref="dbus-marshal-validate_8c" startline="997" endline="1042">_dbus_validate_member</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga11d63128bf5c1b7e0164be7072c6c6c7" prot="public" static="no">
        <name>VALID_NAME_CHARACTER</name>
        <param><defname>c</defname></param>
        <initializer>( ((c) &gt;= &apos;0&apos; &amp;&amp; (c) &lt;= &apos;9&apos;) ||               \
    ((c) &gt;= &apos;A&apos; &amp;&amp; (c) &lt;= &apos;Z&apos;) ||               \
    ((c) &gt;= &apos;a&apos; &amp;&amp; (c) &lt;= &apos;z&apos;) ||               \
    ((c) == &apos;_&apos;) )</initializer>
        <briefdescription>
<para>Determine wether the given character is valid as a second or later character in a name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="762" column="9" bodyfile="dbus/dbus-marshal-validate.c" bodystart="762" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" compoundref="dbus-marshal-validate_8c" startline="921" endline="981">_dbus_validate_interface</referencedby>
        <referencedby refid="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" compoundref="dbus-marshal-validate_8c" startline="997" endline="1042">_dbus_validate_member</referencedby>
        <referencedby refid="group__DBusMarshal_1ga616ba4a0280b10222930aedadb7ea8d9" compoundref="dbus-marshal-validate_8c" startline="785" endline="834">_dbus_validate_path</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga1ec58a1d7a35131dd81c6eb99b9a2950" prot="public" static="no">
        <name>VALID_INITIAL_BUS_NAME_CHARACTER</name>
        <param><defname>c</defname></param>
        <initializer>( ((c) &gt;= &apos;A&apos; &amp;&amp; (c) &lt;= &apos;Z&apos;) ||               \
    ((c) &gt;= &apos;a&apos; &amp;&amp; (c) &lt;= &apos;z&apos;) ||               \
    ((c) == &apos;_&apos;) || ((c) == &apos;-&apos;))</initializer>
        <briefdescription>
<para>Determine wether the given character is valid as the first character in a bus name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1070" column="9" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1070" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga225bd010fa638c822271047157a880f2" prot="public" static="no">
        <name>VALID_BUS_NAME_CHARACTER</name>
        <param><defname>c</defname></param>
        <initializer>( ((c) &gt;= &apos;0&apos; &amp;&amp; (c) &lt;= &apos;9&apos;) ||               \
    ((c) &gt;= &apos;A&apos; &amp;&amp; (c) &lt;= &apos;Z&apos;) ||               \
    ((c) &gt;= &apos;a&apos; &amp;&amp; (c) &lt;= &apos;z&apos;) ||               \
    ((c) == &apos;_&apos;) || ((c) == &apos;-&apos;))</initializer>
        <briefdescription>
<para>Determine wether the given character is valid as a second or later character in a bus name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.c" line="1079" column="9" bodyfile="dbus/dbus-marshal-validate.c" bodystart="1079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga6751169d8d53eb2d4b3002ebd9bd021a" prot="public" static="no">
        <name>_dbus_validate_utf8</name>
        <param><defname>s</defname></param>
        <param><defname>b</defname></param>
        <param><defname>e</defname></param>
        <initializer><ref refid="group__DBusString_1ga65f0f04b7c9371406fc87343f691e8da" kindref="member">_dbus_string_validate_utf8</ref> (s, b, e)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="154" column="9" bodyfile="dbus/dbus-marshal-validate.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gab17853bba6b5508dc2d1eddad7e40946" prot="public" static="no">
        <name>DECLARE_DBUS_NAME_CHECK</name>
        <param><defname>what</defname></param>
        <initializer><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref> _dbus_check_is_valid_##what (const char *name)</initializer>
        <briefdescription>
<para>A name check is used in _dbus_return_if_fail(), it&apos;s not suitable for validating untrusted data. </para>        </briefdescription>
        <detaileddescription>
<para>use _dbus_validate_whatever for that. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="169" column="9" bodyfile="dbus/dbus-marshal-validate.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga2d30023893c9483413f63d2b8d4e1fb9" prot="public" static="no">
        <name>DEFINE_DBUS_NAME_CHECK</name>
        <param><defname>what</defname></param>
        <initializer><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref>                                                             \
_dbus_check_is_valid_##what (const char *name)                          \
{                                                                       \
  <ref refid="structDBusString" kindref="compound">DBusString</ref> str;                                                       \
                                                                        \
  if (name == <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)                                                     \
    return <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;                                                       \
                                                                        \
  <ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref> (&amp;str, name);                                 \
  return _dbus_validate_##what (&amp;str, 0,                                \
                                _dbus_string_get_length (&amp;str));        \
}</initializer>
        <briefdescription>
<para>Define a name check to be used in _dbus_return_if_fail() statements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-validate.h" line="174" column="9" bodyfile="dbus/dbus-marshal-validate.h" bodystart="174" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga8d7aa58f6484d5d24f275dd65f101676" compoundref="dbus-marshal-validate_8c" startline="1228" endline="1240">_dbus_validate_signature</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>functions to marshal/unmarshal data from the wire </para>    </briefdescription>
    <detaileddescription>
<para>Types and functions related to converting primitive data types from wire format to native machine format, and vice versa.</para><para>A signature is just a string with multiple types one after the other. for example a type is &quot;i&quot; or &quot;(ii)&quot;, a signature is &quot;i(ii)&quot; where i is int and (ii) is struct { int; int; } </para>    </detaileddescription>
  </compounddef>
</doxygen>
