<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structDBus8ByteStruct" kind="struct" language="C++" prot="public">
    <compoundname>DBus8ByteStruct</compoundname>
    <includes refid="dbus-types_8h" local="no">dbus-types.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structDBus8ByteStruct_1af61431a112f5e81964c0870c5428bb45" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>dbus_uint32_t DBus8ByteStruct::first32</definition>
        <argsstring></argsstring>
        <name>first32</name>
        <briefdescription>
<para>first 32 bits in the 8 bytes (beware endian issues) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-types.h" line="123" column="1" bodyfile="dbus/dbus-types.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBus8ByteStruct_1a9e4350ba5ff3dae28710f2cb0dcc0c06" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>dbus_uint32_t DBus8ByteStruct::second32</definition>
        <argsstring></argsstring>
        <name>second32</name>
        <briefdescription>
<para>second 32 bits in the 8 bytes (beware endian issues) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-types.h" line="124" column="1" bodyfile="dbus/dbus-types.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An 8-byte struct you could use to access int64 without having int64 support. </para>    </briefdescription>
    <detaileddescription>
<para>Use <ref refid="group__DBusTypes_1gab650989bbedae260527d7ca663a2ad9f" kindref="member">dbus_int64_t</ref> or <ref refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" kindref="member">dbus_uint64_t</ref> instead. </para>    </detaileddescription>
    <location file="dbus/dbus-types.h" line="122" column="1" bodyfile="dbus/dbus-types.h" bodystart="121" bodyend="125"/>
    <listofallmembers>
      <member refid="structDBus8ByteStruct_1af61431a112f5e81964c0870c5428bb45" prot="public" virt="non-virtual"><scope>DBus8ByteStruct</scope><name>first32</name></member>
      <member refid="structDBus8ByteStruct_1a9e4350ba5ff3dae28710f2cb0dcc0c06" prot="public" virt="non-virtual"><scope>DBus8ByteStruct</scope><name>second32</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
