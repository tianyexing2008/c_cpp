<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-sha_8c" kind="file" language="C++">
    <compoundname>dbus-sha.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-sha_8h" local="yes">dbus-sha.h</includes>
    <includes refid="dbus-marshal-basic_8h" local="yes">dbus-marshal-basic.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="3126">
        <label>stdarg.h</label>
      </node>
      <node id="3120">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="3115">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="3122">
        <label>stdint.h</label>
      </node>
      <node id="3128">
        <label>sys/poll.h</label>
      </node>
      <node id="3132">
        <label>dbus-marshal-basic.h</label>
        <link refid="dbus-marshal-basic_8h_source"/>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3121">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
      </node>
      <node id="3113">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
      </node>
      <node id="3116">
        <label>stddef.h</label>
      </node>
      <node id="3125">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3127">
        <label>string.h</label>
      </node>
      <node id="3130">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3111">
        <label>dbus-sha.c</label>
        <link refid="dbus-sha.c"/>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3113" relation="include">
        </childnode>
        <childnode refid="3131" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
      </node>
      <node id="3131">
        <label>dbus-sha.h</label>
        <link refid="dbus-sha_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3129">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
      </node>
      <node id="3112">
        <label>config.h</label>
      </node>
      <node id="3124">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
      </node>
      <node id="3119">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
      </node>
      <node id="3117">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3118" relation="include">
        </childnode>
      </node>
      <node id="3123">
        <label>inttypes.h</label>
      </node>
      <node id="3114">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3116" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusSHAInternals_1gacb3a3d07eeea54e39b19523e15ba7266" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SHATransform</definition>
        <argsstring>(dbus_uint32_t *digest, dbus_uint32_t *data)</argsstring>
        <name>SHATransform</name>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref> *</type>
          <declname>digest</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="171" column="1" bodyfile="dbus/dbus-sha.c" bodystart="171" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHAInternals_1ga8fe288fb1beb26a03538964b38742d28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void swap_words</definition>
        <argsstring>(dbus_uint32_t *buffer, int byte_count)</argsstring>
        <name>swap_words</name>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="284" column="1" bodyfile="dbus/dbus-sha.c" bodystart="284" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHAInternals_1ga1c6b49de5f4ffdbd888e434f28574d6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sha_init</definition>
        <argsstring>(DBusSHAContext *context)</argsstring>
        <name>sha_init</name>
        <param>
          <type><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="297" column="1" bodyfile="dbus/dbus-sha.c" bodystart="297" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHAInternals_1ga71cc72ead1294a0f566450f79fcb49c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sha_append</definition>
        <argsstring>(DBusSHAContext *context, const unsigned char *buffer, unsigned int count)</argsstring>
        <name>sha_append</name>
        <param>
          <type><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="311" column="1" bodyfile="dbus/dbus-sha.c" bodystart="311" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHAInternals_1ga733ead33bfe89ca14cc26bb4733685fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void sha_finish</definition>
        <argsstring>(DBusSHAContext *context, unsigned char digest[20])</argsstring>
        <name>sha_finish</name>
        <param>
          <type><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>digest</declname>
          <array>[20]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="364" column="1" bodyfile="dbus/dbus-sha.c" bodystart="364" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHA_1gae7c1a8ad734655b70e67e9a1498465f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_sha_init</definition>
        <argsstring>(DBusSHAContext *context)</argsstring>
        <name>_dbus_sha_init</name>
        <param>
          <type><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Initializes the SHA context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>an uninitialized context, typically on the stack. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="420" column="1" bodyfile="dbus/dbus-sha.c" bodystart="420" bodyend="423"/>
        <referencedby refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" compoundref="dbus-sha_8c" startline="483" endline="510">_dbus_sha_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHA_1gae9c5e5cd39e2dc151ef1c54819aef3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_sha_update</definition>
        <argsstring>(DBusSHAContext *context, const DBusString *data)</argsstring>
        <name>_dbus_sha_update</name>
        <param>
          <type><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Feeds more data into an existing shasum computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the SHA context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the additional data to hash </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="432" column="1" bodyfile="dbus/dbus-sha.c" bodystart="432" bodyend="442"/>
        <referencedby refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" compoundref="dbus-sha_8c" startline="483" endline="510">_dbus_sha_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHA_1gaf685311db11cc2e6b38fc62d171311e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_sha_final</definition>
        <argsstring>(DBusSHAContext *context, DBusString *results)</argsstring>
        <name>_dbus_sha_final</name>
        <param>
          <type><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>results</declname>
        </param>
        <briefdescription>
<para>SHA finalization. </para>        </briefdescription>
        <detaileddescription>
<para>Ends an SHA message-digest operation, writing the the message digest and zeroing the context. The results are returned as a raw 20-byte digest, not as the ascii-hex-digits string form of the digest.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>the SHA context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>results</parametername>
</parameternamelist>
<parameterdescription>
<para>string to append the 20-byte SHA digest to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory to append the digest </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="456" column="1" bodyfile="dbus/dbus-sha.c" bodystart="456" bodyend="472"/>
        <references refid="group__DBusString_1ga724656b7091b910965bd1af42d0b7bab" compoundref="dbus-string_8c" startline="1136" endline="1145">_dbus_string_append_len</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" compoundref="dbus-sha_8c" startline="483" endline="510">_dbus_sha_compute</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_sha_compute</definition>
        <argsstring>(const DBusString *data, DBusString *ascii_output)</argsstring>
        <name>_dbus_sha_compute</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>ascii_output</declname>
        </param>
        <briefdescription>
<para>Computes the ASCII hex-encoded shasum of the given data and appends it to the output string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>input data to be hashed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ascii_output</parametername>
</parameternamelist>
<parameterdescription>
<para>string to append ASCII shasum to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sha.c" line="483" column="1" bodyfile="dbus/dbus-sha.c" bodystart="483" bodyend="510"/>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" compoundref="dbus-sysdeps-unix_8c" startline="2825" endline="2852">_dbus_concat_dir_and_file</references>
        <references refid="group__DBusFile_1gad22d468e789139c87f7f4bb97cadf448" compoundref="dbus-file-unix_8c" startline="55" endline="151">_dbus_file_get_contents</references>
        <references refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" compoundref="dbus-sha_8c" startline="483" endline="510">_dbus_sha_compute</references>
        <references refid="group__DBusSHA_1gaf685311db11cc2e6b38fc62d171311e4" compoundref="dbus-sha_8c" startline="456" endline="472">_dbus_sha_final</references>
        <references refid="group__DBusSHA_1gae7c1a8ad734655b70e67e9a1498465f7" compoundref="dbus-sha_8c" startline="420" endline="423">_dbus_sha_init</references>
        <references refid="group__DBusSHA_1gae9c5e5cd39e2dc151ef1c54819aef3b6" compoundref="dbus-sha_8c" startline="432" endline="442">_dbus_sha_update</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
        <references refid="group__DBusString_1gaa6ecf36e70263659f921a4ef0335db12" compoundref="dbus-string_8c" startline="1156" endline="1167">_dbus_string_append_byte</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusString_1gad79c34af55b58f0e8b81ecf11b8694bb" compoundref="dbus-string_8c" startline="2012" endline="2039">_dbus_string_equal</references>
        <references refid="group__DBusString_1ga5fe47873b2838339107c3e1f03d1a703" compoundref="dbus-string_8c" startline="1603" endline="1611">_dbus_string_find</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1gaabb4873f436e015944a33cd1e3815cc9" compoundref="dbus-string_8c" startline="2258" endline="2295">_dbus_string_hex_encode</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusString_1gad379fce8d4ef4f7e28f81f50b46ee4c9" compoundref="dbus-string_8c" startline="1258" endline="1269">_dbus_string_move</references>
        <references refid="group__DBusString_1ga93e22894a5e2e0d65c179c7d36a8b1c8" compoundref="dbus-sysdeps_8c" startline="435" endline="459">_dbus_string_parse_int</references>
        <references refid="group__DBusString_1ga8b7fc22e6738173e1b2cef4b91b9c3c1" compoundref="dbus-string_8c" startline="1908" endline="1943">_dbus_string_pop_line</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusString_1ga5698b163289be0066cf10c0f1caf877a" compoundref="dbus-string_8c" startline="1802" endline="1824">_dbus_string_skip_blank</references>
        <references refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" compoundref="dbus-string_8c" startline="2187" endline="2213">_dbus_string_starts_with_c_str</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" compoundref="dbus-errors_8c" startline="211" endline="226">dbus_error_free</references>
        <references refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" compoundref="dbus-errors_8h" startline="62">DBUS_ERROR_INIT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusError_1afb559175326de5b6b340e26204e92d72" compoundref="dbus-errors_8h" startline="51">DBusError::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" compoundref="dbus-sysdeps-win_8c" startline="2670" endline="2739">_dbus_read_local_machine_uuid</referencedby>
        <referencedby refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" compoundref="dbus-sha_8c" startline="483" endline="510">_dbus_sha_compute</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-sha.c<sp/>SHA-1<sp/>implementation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/>Red<sp/>Hat<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995<sp/>A.<sp/>M.<sp/>Kuchling</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sha.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-basic.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>byteswap<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>comments<sp/>have<sp/>the<sp/>history<sp/>of<sp/>where<sp/>this<sp/>code</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>comes<sp/>from.<sp/>I<sp/>actually<sp/>copied<sp/>it<sp/>from<sp/>GNet<sp/>in<sp/>GNOME<sp/>CVS.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>-<sp/>hp@redhat.com</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>sha.h<sp/>:<sp/>Implementation<sp/>of<sp/>the<sp/>Secure<sp/>Hash<sp/>Algorithm</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Part<sp/>of<sp/>the<sp/>Python<sp/>Cryptography<sp/>Toolkit,<sp/>version<sp/>1.0.0</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>1995,<sp/>A.M.<sp/>Kuchling</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>Distribute<sp/>and<sp/>use<sp/>freely;<sp/>there<sp/>are<sp/>no<sp/>restrictions<sp/>on<sp/>further</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>dissemination<sp/>and<sp/>usage<sp/>except<sp/>those<sp/>imposed<sp/>by<sp/>the<sp/>laws<sp/>of<sp/>your</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>country<sp/>of<sp/>residence.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SHA:<sp/>NIST&apos;s<sp/>Secure<sp/>Hash<sp/>Algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Based<sp/>on<sp/>SHA<sp/>code<sp/>originally<sp/>posted<sp/>to<sp/>sci.crypt<sp/>by<sp/>Peter<sp/>Gutmann</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>in<sp/>message<sp/>&lt;30ajo5$oe8@ccu2.auckland.ac.nz&gt;.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>Modified<sp/>to<sp/>test<sp/>for<sp/>endianness<sp/>on<sp/>creation<sp/>of<sp/>SHA<sp/>objects<sp/>by<sp/>AMK.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>Also,<sp/>the<sp/>original<sp/>specification<sp/>of<sp/>SHA<sp/>was<sp/>found<sp/>to<sp/>have<sp/>a<sp/>weakness</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>by<sp/>NSA/NIST.<sp/><sp/>This<sp/>code<sp/>implements<sp/>the<sp/>fixed<sp/>version<sp/>of<sp/>SHA.</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Here&apos;s<sp/>the<sp/>first<sp/>paragraph<sp/>of<sp/>Peter<sp/>Gutmann&apos;s<sp/>posting:</highlight></codeline>
<codeline lineno="59"><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">The<sp/>following<sp/>is<sp/>my<sp/>SHA<sp/>(FIPS<sp/>180)<sp/>code<sp/>updated<sp/>to<sp/>allow<sp/>use<sp/>of<sp/>the<sp/>&quot;fixed&quot;</highlight></codeline>
<codeline lineno="61"><highlight class="comment">SHA,<sp/>thanks<sp/>to<sp/>Jim<sp/>Gillogly<sp/>and<sp/>an<sp/>anonymous<sp/>contributor<sp/>for<sp/>the<sp/>information<sp/>on</highlight></codeline>
<codeline lineno="62"><highlight class="comment">what&apos;s<sp/>changed<sp/>in<sp/>the<sp/>new<sp/>version.<sp/><sp/>The<sp/>fix<sp/>is<sp/>a<sp/>simple<sp/>change<sp/>which<sp/>involves</highlight></codeline>
<codeline lineno="63"><highlight class="comment">adding<sp/>a<sp/>single<sp/>rotate<sp/>in<sp/>the<sp/>initial<sp/>expansion<sp/>function.<sp/><sp/>It<sp/>is<sp/>unknown</highlight></codeline>
<codeline lineno="64"><highlight class="comment">whether<sp/>this<sp/>is<sp/>an<sp/>optimal<sp/>solution<sp/>to<sp/>the<sp/>problem<sp/>which<sp/>was<sp/>discovered<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="65"><highlight class="comment">SHA<sp/>or<sp/>whether<sp/>it&apos;s<sp/>simply<sp/>a<sp/>bandaid<sp/>which<sp/>fixes<sp/>the<sp/>problem<sp/>with<sp/>a<sp/>minimum<sp/>of</highlight></codeline>
<codeline lineno="66"><highlight class="comment">effort<sp/>(for<sp/>example<sp/>the<sp/>reengineering<sp/>of<sp/>a<sp/>great<sp/>many<sp/>Capstone<sp/>chips).</highlight></codeline>
<codeline lineno="67"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SHA<sp/>block<sp/>size<sp/>and<sp/>message<sp/>digest<sp/>sizes,<sp/>in<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHA_DATASIZE<sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHA_DIGESTSIZE<sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SHA<sp/>f()-functions.<sp/><sp/>The<sp/>f1<sp/>and<sp/>f3<sp/>functions<sp/>can<sp/>be<sp/>optimized<sp/>to</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/>save<sp/>one<sp/>boolean<sp/>operation<sp/>each<sp/>-<sp/>thanks<sp/>to<sp/>Rich<sp/>Schroeppel,</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/>rcs@cs.arizona.edu<sp/>for<sp/>discovering<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>f1(x,y,z)<sp/>(<sp/>(<sp/>x<sp/>&amp;<sp/>y<sp/>)<sp/>|<sp/>(<sp/>~x<sp/>&amp;<sp/>z<sp/>)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Rounds<sp/><sp/>0-19<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f1(x,y,z)<sp/><sp/>(<sp/>z<sp/>^<sp/>(<sp/>x<sp/>&amp;<sp/>(<sp/>y<sp/>^<sp/>z<sp/>)<sp/>)<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/><sp/>0-19<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f2(x,y,z)<sp/><sp/>(<sp/>x<sp/>^<sp/>y<sp/>^<sp/>z<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>20-39<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>f3(x,y,z)<sp/>(<sp/>(<sp/>x<sp/>&amp;<sp/>y<sp/>)<sp/>|<sp/>(<sp/>x<sp/>&amp;<sp/>z<sp/>)<sp/>|<sp/>(<sp/>y<sp/>&amp;<sp/>z<sp/>)<sp/>)<sp/><sp/><sp/>//<sp/>Rounds<sp/>40-59<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f3(x,y,z)<sp/><sp/>(<sp/>(<sp/>x<sp/>&amp;<sp/>y<sp/>)<sp/>|<sp/>(<sp/>z<sp/>&amp;<sp/>(<sp/>x<sp/>|<sp/>y<sp/>)<sp/>)<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>40-59<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f4(x,y,z)<sp/><sp/>(<sp/>x<sp/>^<sp/>y<sp/>^<sp/>z<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>60-79<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SHA<sp/>Mysterious<sp/>Constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K1<sp/><sp/>0x5A827999L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/><sp/>0-19<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K2<sp/><sp/>0x6ED9EBA1L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>20-39<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K3<sp/><sp/>0x8F1BBCDCL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>40-59<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>K4<sp/><sp/>0xCA62C1D6L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rounds<sp/>60-79<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SHA<sp/>initial<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>h0init<sp/><sp/>0x67452301L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>h1init<sp/><sp/>0xEFCDAB89L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>h2init<sp/><sp/>0x98BADCFEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>h3init<sp/><sp/>0x10325476L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>h4init<sp/><sp/>0xC3D2E1F0L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>it<sp/>may<sp/>be<sp/>necessary<sp/>to<sp/>add<sp/>parentheses<sp/>to<sp/>these<sp/>macros<sp/>if<sp/>they</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>are<sp/>to<sp/>be<sp/>called<sp/>with<sp/>expressions<sp/>as<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>32-bit<sp/>rotate<sp/>left<sp/>-<sp/>kludged<sp/>with<sp/>shifts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROTL(n,X)<sp/>(<sp/>(<sp/>(<sp/>X<sp/>)<sp/>&lt;&lt;<sp/>n<sp/>)<sp/>|<sp/>(<sp/>(<sp/>X<sp/>)<sp/>&gt;&gt;<sp/>(<sp/>32<sp/>-<sp/>n<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>initial<sp/>expanding<sp/>function.<sp/><sp/>The<sp/>hash<sp/>function<sp/>is<sp/>defined<sp/>over<sp/>an</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>80-word<sp/>expanded<sp/>input<sp/>array<sp/>W,<sp/>where<sp/>the<sp/>first<sp/>16<sp/>are<sp/>copies<sp/>of<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>data,<sp/>and<sp/>the<sp/>remaining<sp/>64<sp/>are<sp/>defined<sp/>by</highlight></codeline>
<codeline lineno="130"><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[<sp/>i<sp/>]<sp/>=<sp/>W[<sp/>i<sp/>-<sp/>16<sp/>]<sp/>^<sp/>W[<sp/>i<sp/>-<sp/>14<sp/>]<sp/>^<sp/>W[<sp/>i<sp/>-<sp/>8<sp/>]<sp/>^<sp/>W[<sp/>i<sp/>-<sp/>3<sp/>]</highlight></codeline>
<codeline lineno="132"><highlight class="comment"></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>This<sp/>implementation<sp/>generates<sp/>these<sp/>values<sp/>on<sp/>the<sp/>fly<sp/>in<sp/>a<sp/>circular</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/>buffer<sp/>-<sp/>thanks<sp/>to<sp/>Colin<sp/>Plumb,<sp/>colin@nyx10.cs.du.edu<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>optimization.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/>The<sp/>updated<sp/>SHA<sp/>changes<sp/>the<sp/>expanding<sp/>function<sp/>by<sp/>adding<sp/>a<sp/>rotate<sp/>of<sp/>1</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/>bit.<sp/><sp/>Thanks<sp/>to<sp/>Jim<sp/>Gillogly,<sp/>jim@rand.org,<sp/>and<sp/>an<sp/>anonymous<sp/>contributor</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/>for<sp/>this<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>expand(W,i)<sp/>(<sp/>W[<sp/>i<sp/>&amp;<sp/>15<sp/>]<sp/>=<sp/>ROTL(<sp/>1,<sp/>(<sp/>W[<sp/>i<sp/>&amp;<sp/>15<sp/>]<sp/>^<sp/>W[<sp/>(i<sp/>-<sp/>14)<sp/>&amp;<sp/>15<sp/>]<sp/>^<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W[<sp/>(i<sp/>-<sp/>8)<sp/>&amp;<sp/>15<sp/>]<sp/>^<sp/>W[<sp/>(i<sp/>-<sp/>3)<sp/>&amp;<sp/>15<sp/>]<sp/>)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>prototype<sp/>SHA<sp/>sub-round.<sp/><sp/>The<sp/>fundamental<sp/>sub-round<sp/>is:</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a&apos;<sp/>=<sp/>e<sp/>+<sp/>ROTL(<sp/>5,<sp/>a<sp/>)<sp/>+<sp/>f(<sp/>b,<sp/>c,<sp/>d<sp/>)<sp/>+<sp/>k<sp/>+<sp/>data;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b&apos;<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c&apos;<sp/>=<sp/>ROTL(<sp/>30,<sp/>b<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d&apos;<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e&apos;<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="152"><highlight class="comment"></highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/>but<sp/>this<sp/>is<sp/>implemented<sp/>by<sp/>unrolling<sp/>the<sp/>loop<sp/>5<sp/>times<sp/>and<sp/>renaming<sp/>the</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/>variables<sp/>(<sp/>e,<sp/>a,<sp/>b,<sp/>c,<sp/>d<sp/>)<sp/>=<sp/>(<sp/>a&apos;,<sp/>b&apos;,<sp/>c&apos;,<sp/>d&apos;,<sp/>e&apos;<sp/>)<sp/>each<sp/>iteration.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>This<sp/>code<sp/>is<sp/>then<sp/>replicated<sp/>20<sp/>times<sp/>for<sp/>each<sp/>of<sp/>the<sp/>4<sp/>functions,<sp/>using</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>the<sp/>next<sp/>20<sp/>values<sp/>from<sp/>the<sp/>W[]<sp/>array<sp/>each<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>subRound(a,<sp/>b,<sp/>c,<sp/>d,<sp/>e,<sp/>f,<sp/>k,<sp/>data)<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/>(<sp/>e<sp/>+=<sp/>ROTL(<sp/>5,<sp/>a<sp/>)<sp/>+<sp/>f(<sp/>b,<sp/>c,<sp/>d<sp/>)<sp/>+<sp/>k<sp/>+<sp/>data,<sp/>b<sp/>=<sp/>ROTL(<sp/>30,<sp/>b<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!DOXYGEN_SHOULD_SKIP_THIS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Perform<sp/>the<sp/>SHA<sp/>transformation.<sp/><sp/>Note<sp/>that<sp/>this<sp/>code,<sp/>like<sp/>MD5,<sp/>seems<sp/>to</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>break<sp/>some<sp/>optimizing<sp/>compilers<sp/>due<sp/>to<sp/>the<sp/>complexity<sp/>of<sp/>the<sp/>expressions</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>and<sp/>the<sp/>size<sp/>of<sp/>the<sp/>basic<sp/>block.<sp/><sp/>It<sp/>may<sp/>be<sp/>necessary<sp/>to<sp/>split<sp/>it<sp/>into</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/>sections,<sp/>e.g.<sp/>based<sp/>on<sp/>the<sp/>four<sp/>subrounds</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>this<sp/>corrupts<sp/>the<sp/>context-&gt;data<sp/>area<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">SHATransform(<ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>*digest,<sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>*data)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>E;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Local<sp/>vars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>eData[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Expanded<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>first<sp/>buffer<sp/>and<sp/>local<sp/>data<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>A<sp/>=<sp/>digest[0];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>B<sp/>=<sp/>digest[1];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>C<sp/>=<sp/>digest[2];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>D<sp/>=<sp/>digest[3];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>E<sp/>=<sp/>digest[4];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>memmove<sp/>(eData,<sp/>data,<sp/>SHA_DATASIZE);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Heavy<sp/>mangling,<sp/>in<sp/>4<sp/>sub-rounds<sp/>of<sp/>20<sp/>interations<sp/>each.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f1,<sp/>K1,<sp/>eData[0]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f1,<sp/>K1,<sp/>eData[1]);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f1,<sp/>K1,<sp/>eData[2]);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f1,<sp/>K1,<sp/>eData[3]);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f1,<sp/>K1,<sp/>eData[4]);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f1,<sp/>K1,<sp/>eData[5]);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f1,<sp/>K1,<sp/>eData[6]);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f1,<sp/>K1,<sp/>eData[7]);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f1,<sp/>K1,<sp/>eData[8]);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f1,<sp/>K1,<sp/>eData[9]);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f1,<sp/>K1,<sp/>eData[10]);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f1,<sp/>K1,<sp/>eData[11]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f1,<sp/>K1,<sp/>eData[12]);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f1,<sp/>K1,<sp/>eData[13]);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f1,<sp/>K1,<sp/>eData[14]);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f1,<sp/>K1,<sp/>eData[15]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f1,<sp/>K1,<sp/>expand<sp/>(<sp/>eData,<sp/>16)<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f1,<sp/>K1,<sp/>expand<sp/>(<sp/>eData,<sp/>17)<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f1,<sp/>K1,<sp/>expand<sp/>(<sp/>eData,<sp/>18)<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f1,<sp/>K1,<sp/>expand<sp/>(<sp/>eData,<sp/>19)<sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>20)<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>21)<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>22)<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>23)<sp/>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>24)<sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>25)<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>26)<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>27)<sp/>);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>28)<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>29)<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>30)<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>31)<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>32)<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>33)<sp/>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>34)<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>35)<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>36)<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>37)<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>38)<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f2,<sp/>K2,<sp/>expand<sp/>(<sp/>eData,<sp/>39)<sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>40)<sp/>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>41)<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>42)<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>43)<sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>44)<sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>45)<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>46)<sp/>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>47)<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>48)<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>49)<sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>50)<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>51)<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>52)<sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>53)<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>54)<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>55)<sp/>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>56)<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>57)<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>58)<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f3,<sp/>K3,<sp/>expand<sp/>(<sp/>eData,<sp/>59)<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>60)<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>61)<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>62)<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>63)<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>64)<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>65)<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>66)<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>67)<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>68)<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>69)<sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>70)<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>71)<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>72)<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>73)<sp/>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>74)<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>subRound<sp/>(A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>75)<sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>subRound<sp/>(E,<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>76)<sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>subRound<sp/>(D,<sp/>E,<sp/>A,<sp/>B,<sp/>C,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>77)<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>subRound<sp/>(C,<sp/>D,<sp/>E,<sp/>A,<sp/>B,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>78)<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>subRound<sp/>(B,<sp/>C,<sp/>D,<sp/>E,<sp/>A,<sp/>f4,<sp/>K4,<sp/>expand<sp/>(<sp/>eData,<sp/>79)<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Build<sp/>message<sp/>digest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>digest[0]<sp/>+=<sp/>A;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>digest[1]<sp/>+=<sp/>B;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>digest[2]<sp/>+=<sp/>C;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>digest[3]<sp/>+=<sp/>D;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>digest[4]<sp/>+=<sp/>E;</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>When<sp/>run<sp/>on<sp/>a<sp/>little-endian<sp/>CPU<sp/>we<sp/>need<sp/>to<sp/>perform<sp/>byte<sp/>reversal<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>array<sp/>of<sp/>longwords.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WORDS_BIGENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>swap_words(buffer,<sp/>byte_count)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">swap_words<sp/>(<ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_count)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>byte_count<sp/>/=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(byte_count--)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*buffer<sp/>=<sp/>DBUS_UINT32_SWAP_LE_BE<sp/>(*buffer);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++buffer;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">sha_init<sp/>(<ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/>*context)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>h-vars<sp/>to<sp/>their<sp/>initial<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>[0]<sp/>=<sp/>h0init;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>[1]<sp/>=<sp/>h1init;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>[2]<sp/>=<sp/>h2init;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>[3]<sp/>=<sp/>h3init;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>[4]<sp/>=<sp/>h4init;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>bit<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1ae2b4ae8398c5964afc95ba9917a57d4b" kindref="member">count_lo</ref><sp/>=<sp/>context-&gt;<ref refid="structDBusSHAContext_1aeca9b10f90c5c1e0e52a82b801ac4ab5" kindref="member">count_hi</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">sha_append<sp/>(<ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/><sp/><sp/><sp/><sp/><sp/>*context,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataCount;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Update<sp/>bitcount<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae2b4ae8398c5964afc95ba9917a57d4b" kindref="member">count_lo</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae2b4ae8398c5964afc95ba9917a57d4b" kindref="member">count_lo</ref><sp/>=<sp/>tmp<sp/>+<sp/>(<sp/>(<sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref>)<sp/>count<sp/>&lt;&lt;<sp/>3)<sp/>)<sp/>&lt;<sp/>tmp)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1aeca9b10f90c5c1e0e52a82b801ac4ab5" kindref="member">count_hi</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Carry<sp/>from<sp/>low<sp/>to<sp/>high<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1aeca9b10f90c5c1e0e52a82b801ac4ab5" kindref="member">count_hi</ref><sp/>+=<sp/>count<sp/>&gt;&gt;<sp/>29;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>count<sp/>of<sp/>bytes<sp/>already<sp/>in<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>dataCount<sp/>=<sp/>(int)<sp/>(tmp<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>any<sp/>leading<sp/>odd-sized<sp/>chunks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataCount)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref><sp/>+<sp/>dataCount;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataCount<sp/>=<sp/>SHA_DATASIZE<sp/>-<sp/>dataCount;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(count<sp/>&lt;<sp/>dataCount)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(p,<sp/>buffer,<sp/>count);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(p,<sp/>buffer,<sp/>dataCount);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swap_words<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>SHA_DATASIZE);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SHATransform<sp/>(context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>,<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>dataCount;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>dataCount;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Process<sp/>data<sp/>in<sp/>SHA_DATASIZE<sp/>chunks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(count<sp/>&gt;=<sp/>SHA_DATASIZE)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>buffer,<sp/>SHA_DATASIZE);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swap_words<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>SHA_DATASIZE);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SHATransform<sp/>(context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>,<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>SHA_DATASIZE;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>-=<sp/>SHA_DATASIZE;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>any<sp/>remaining<sp/>bytes<sp/>of<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>memmove<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>buffer,<sp/>count);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Final<sp/>wrapup<sp/>-<sp/>pad<sp/>to<sp/>SHA_DATASIZE-byte<sp/>boundary<sp/>with<sp/>the<sp/>bit<sp/>pattern</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/>1<sp/>0*<sp/>(64-bit<sp/>count<sp/>of<sp/>bits<sp/>processed,<sp/>MSB-first)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">sha_finish<sp/>(<ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/>*context,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digest[20])</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_p;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compute<sp/>number<sp/>of<sp/>bytes<sp/>mod<sp/>64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>count<sp/>=<sp/>(int)<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae2b4ae8398c5964afc95ba9917a57d4b" kindref="member">count_lo</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>count<sp/>=<sp/>(count<sp/>&gt;&gt;<sp/>3)<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>first<sp/>char<sp/>of<sp/>padding<sp/>to<sp/>0x80.<sp/><sp/>This<sp/>is<sp/>safe<sp/>since<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>always<sp/>at<sp/>least<sp/>one<sp/>byte<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>data_p<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref><sp/>+<sp/>count;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>*data_p++<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bytes<sp/>of<sp/>padding<sp/>needed<sp/>to<sp/>make<sp/>64<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>count<sp/>=<sp/>SHA_DATASIZE<sp/>-<sp/>1<sp/>-<sp/>count;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>out<sp/>to<sp/>56<sp/>mod<sp/>64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>if<sp/>(count<sp/>&lt;<sp/>8)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Two<sp/>lots<sp/>of<sp/>padding:<sp/><sp/>Pad<sp/>the<sp/>first<sp/>block<sp/>to<sp/>64<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(data_p,<sp/>0,<sp/>count);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swap_words<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>SHA_DATASIZE);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SHATransform<sp/>(context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>,<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>fill<sp/>the<sp/>next<sp/>block<sp/>with<sp/>56<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>0,<sp/>SHA_DATASIZE<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pad<sp/>block<sp/>to<sp/>56<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(data_p,<sp/>0,<sp/>count<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>length<sp/>in<sp/>bits<sp/>and<sp/>transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>[14]<sp/>=<sp/>context-&gt;<ref refid="structDBusSHAContext_1aeca9b10f90c5c1e0e52a82b801ac4ab5" kindref="member">count_hi</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>[15]<sp/>=<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae2b4ae8398c5964afc95ba9917a57d4b" kindref="member">count_lo</ref>;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>swap_words<sp/>(context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>,<sp/>SHA_DATASIZE<sp/>-<sp/>8);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>SHATransform<sp/>(context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>,<sp/>context-&gt;<ref refid="structDBusSHAContext_1ae1e37d926014364a9e5ca569bf4fe798" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>swap_words<sp/>(context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>,<sp/>SHA_DIGESTSIZE);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>memmove<sp/>(digest,<sp/>context-&gt;<ref refid="structDBusSHAContext_1a4fe941dec79829ea0f0695ede84bcad2" kindref="member">digest</ref>,<sp/>SHA_DIGESTSIZE);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>internals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="group__DBusSHA_1gae7c1a8ad734655b70e67e9a1498465f7" refkind="member"><highlight class="normal"><ref refid="group__DBusSHA_1gae7c1a8ad734655b70e67e9a1498465f7" kindref="member">_dbus_sha_init</ref><sp/>(<ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/>*context)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>sha_init<sp/>(context);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="group__DBusSHA_1gae9c5e5cd39e2dc151ef1c54819aef3b6" refkind="member"><highlight class="normal"><ref refid="group__DBusSHA_1gae9c5e5cd39e2dc151ef1c54819aef3b6" kindref="member">_dbus_sha_update</ref><sp/>(<ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/><sp/><sp/>*context,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*data)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputLen;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>input<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>_dbus_string_get_const_data<sp/>(data);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>inputLen<sp/>=<sp/>_dbus_string_get_length<sp/>(data);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>sha_append<sp/>(context,<sp/>input,<sp/>inputLen);</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="456" refid="group__DBusSHA_1gaf685311db11cc2e6b38fc62d171311e4" refkind="member"><highlight class="normal"><ref refid="group__DBusSHA_1gaf685311db11cc2e6b38fc62d171311e4" kindref="member">_dbus_sha_final</ref><sp/>(<ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/><sp/><sp/>*context,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*results)</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>digest[20];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>sha_finish<sp/>(context,<sp/>digest);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga724656b7091b910965bd1af42d0b7bab" kindref="member">_dbus_string_append_len</ref><sp/>(results,<sp/>digest,<sp/>20))</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>some<sp/>kind<sp/>of<sp/>security<sp/>paranoia,<sp/>though<sp/>it<sp/>seems<sp/>pointless</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>me<sp/>given<sp/>the<sp/>nonzeroed<sp/>stuff<sp/>flying<sp/>around</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" kindref="member">_DBUS_ZERO</ref>(*context);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="483" refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" refkind="member"><highlight class="normal"><ref refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" kindref="member">_dbus_sha_compute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*data,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ascii_output)</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="structDBusSHAContext" kindref="compound">DBusSHAContext</ref><sp/>context;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>digest;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSHA_1gae7c1a8ad734655b70e67e9a1498465f7" kindref="member">_dbus_sha_init</ref><sp/>(&amp;context);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSHA_1gae9c5e5cd39e2dc151ef1c54819aef3b6" kindref="member">_dbus_sha_update</ref><sp/>(&amp;context,<sp/>data);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;digest))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSHA_1gaf685311db11cc2e6b38fc62d171311e4" kindref="member">_dbus_sha_final</ref><sp/>(&amp;context,<sp/>&amp;digest))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaabb4873f436e015944a33cd1e3815cc9" kindref="member">_dbus_string_hex_encode</ref><sp/>(&amp;digest,<sp/>0,<sp/>ascii_output,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(ascii_output)))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;digest);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/>error:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;digest);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>exported<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_EMBEDDED_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="519"><highlight class="normal">check_sha_binary<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_len,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*expected)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>input_str;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>expected_str;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>results;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" kindref="member">_dbus_string_init_const_len</ref><sp/>(&amp;input_str,<sp/>input,<sp/>input_len);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref><sp/>(&amp;expected_str,<sp/>expected);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;results))</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>SHA-1<sp/>results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" kindref="member">_dbus_sha_compute</ref><sp/>(&amp;input_str,<sp/>&amp;results))</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>SHA-1<sp/>results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gad79c34af55b58f0e8b81ecf11b8694bb" kindref="member">_dbus_string_equal</ref><sp/>(&amp;expected_str,<sp/>&amp;results))</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Expected<sp/>hash<sp/>%s<sp/>got<sp/>%s<sp/>for<sp/>SHA-1<sp/>sum\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;results));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;results);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;results);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="550"><highlight class="normal">check_sha_str<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*input,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*expected)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>check_sha_binary<sp/>(input,<sp/>strlen<sp/>(input),<sp/>expected);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="557"><highlight class="normal">decode_compact_string<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*line,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*decoded)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_bits;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>current_b;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_bytes;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga93e22894a5e2e0d65c179c7d36a8b1c8" kindref="member">_dbus_string_parse_int</ref><sp/>(line,<sp/>offset,<sp/>&amp;val,<sp/>&amp;next))</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>parse<sp/>length<sp/>at<sp/>start<sp/>of<sp/>compact<sp/>string:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(line));</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga5698b163289be0066cf10c0f1caf877a" kindref="member">_dbus_string_skip_blank</ref><sp/>(line,<sp/>next,<sp/>&amp;next);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>offset<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga93e22894a5e2e0d65c179c7d36a8b1c8" kindref="member">_dbus_string_parse_int</ref><sp/>(line,<sp/>offset,<sp/>&amp;val,<sp/>&amp;next))</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>parse<sp/>start<sp/>bit<sp/>&apos;b&apos;<sp/>in<sp/>compact<sp/>string:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(line));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(val<sp/>==<sp/>0<sp/>||<sp/>val<sp/>==<sp/>1))</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>value<sp/>&apos;b&apos;<sp/>must<sp/>be<sp/>0<sp/>or<sp/>1,<sp/>see<sp/>sha-1/Readme.txt\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga5698b163289be0066cf10c0f1caf877a" kindref="member">_dbus_string_skip_blank</ref><sp/>(line,<sp/>next,<sp/>&amp;next);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>current_b<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>n_bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next<sp/>&lt;<sp/>_dbus_string_get_length<sp/>(line))</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_bits;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_byte<sp/>(line,<sp/>offset)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga93e22894a5e2e0d65c179c7d36a8b1c8" kindref="member">_dbus_string_parse_int</ref><sp/>(line,<sp/>offset,<sp/>&amp;val,<sp/>&amp;next))</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>parse<sp/>bit<sp/>count<sp/>in<sp/>compact<sp/>string\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>now<sp/>append<sp/>&quot;val&quot;<sp/>copies<sp/>of<sp/>&quot;current_b&quot;<sp/>bits<sp/>to<sp/>the<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_bits<sp/>=<sp/>n_bits<sp/>+<sp/>val;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n_bits<sp/>&lt;<sp/>total_bits)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byte_containing_next_bit<sp/>=<sp/>n_bits<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_containing_next_bit<sp/>=<sp/>7<sp/>-<sp/>(n_bits<sp/>%<sp/>8);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>old_byte;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte_containing_next_bit<sp/>&gt;=<sp/>_dbus_string_get_length<sp/>(decoded))</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(decoded,<sp/>byte_containing_next_bit<sp/>+<sp/>1))</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>to<sp/>extend<sp/>to<sp/>next<sp/>byte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_byte<sp/>=<sp/>_dbus_string_get_byte<sp/>(decoded,<sp/>byte_containing_next_bit);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_byte<sp/>|=<sp/>current_b<sp/>&lt;&lt;<sp/>bit_containing_next_bit;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Appending<sp/>bit<sp/>%d<sp/>to<sp/>byte<sp/>%d<sp/>at<sp/>bit<sp/>%d<sp/>resulting<sp/>in<sp/>byte<sp/>0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_b,<sp/>byte_containing_next_bit,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_containing_next_bit,<sp/>old_byte);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(decoded,<sp/>byte_containing_next_bit,<sp/>old_byte);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_bits;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga5698b163289be0066cf10c0f1caf877a" kindref="member">_dbus_string_skip_blank</ref><sp/>(line,<sp/>next,<sp/>&amp;next);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_b<sp/>=<sp/>!current_b;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>length_bytes<sp/>=<sp/>(n_bits<sp/>/<sp/>8<sp/>+<sp/>((n_bits<sp/>%<sp/>8)<sp/>?<sp/>1<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(decoded)<sp/>!=<sp/>length_bytes)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Expected<sp/>length<sp/>%d<sp/>bytes<sp/>%d<sp/>bits<sp/>for<sp/>compact<sp/>string,<sp/>got<sp/>%d<sp/>bytes\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_bytes,<sp/>n_bits,<sp/>_dbus_string_get_length<sp/>(decoded));</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="659"><highlight class="normal">get_next_expected_result<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*results,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*result)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>line;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;line))</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/>next_iteration:</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga8b7fc22e6738173e1b2cef4b91b9c3c1" kindref="member">_dbus_string_pop_line</ref><sp/>(results,<sp/>&amp;line))</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_delete_leading_blanks<sp/>(&amp;line);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(&amp;line)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_iteration;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_iteration;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;H&gt;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>print<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;D&gt;&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;D&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_iteration;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gad379fce8d4ef4f7e28f81f50b46ee4c9" kindref="member">_dbus_string_move</ref><sp/>(&amp;line,<sp/>0,<sp/>result,<sp/>0))</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>_dbus_string_get_length<sp/>(result))</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_dbus_string_get_byte<sp/>(result,<sp/>i))</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(result,<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(result,<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(result,<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(result,<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(result,<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_set_byte<sp/>(result,<sp/>i,<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" kindref="member">_dbus_string_delete</ref><sp/>(result,<sp/>i,<sp/>1);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;<sp/></highlight><highlight class="comment">/*<sp/>to<sp/>offset<sp/>++i<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>out:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;line);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="738"><highlight class="normal">process_test_data<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_data_dir)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>tests_file;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>results_file;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>tests;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>results;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>line;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_no;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>success_count;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error<sp/>=<sp/><ref refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" kindref="member">DBUS_ERROR_INIT</ref>;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;tests_file))</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;results_file))</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;tests))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;results))</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;line))</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(&amp;tests_file,<sp/>test_data_dir))</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(&amp;results_file,<sp/>test_data_dir))</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref><sp/>(&amp;tmp,<sp/></highlight><highlight class="stringliteral">&quot;sha-1/byte-messages.sha1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member">_dbus_concat_dir_and_file</ref><sp/>(&amp;tests_file,<sp/>&amp;tmp))</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref><sp/>(&amp;tmp,<sp/></highlight><highlight class="stringliteral">&quot;sha-1/byte-hashes.sha1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member">_dbus_concat_dir_and_file</ref><sp/>(&amp;results_file,<sp/>&amp;tmp))</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusFile_1gad22d468e789139c87f7f4bb97cadf448" kindref="member">_dbus_file_get_contents</ref><sp/>(&amp;tests,<sp/>&amp;tests_file,<sp/>&amp;error))</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>load<sp/>test<sp/>data<sp/>file<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;tests_file),</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusFile_1gad22d468e789139c87f7f4bb97cadf448" kindref="member">_dbus_file_get_contents</ref><sp/>(&amp;results,<sp/>&amp;results_file,<sp/>&amp;error))</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>load<sp/>results<sp/>data<sp/>file<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;results_file),<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>success_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>line_no<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/>next_iteration:</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga8b7fc22e6738173e1b2cef4b91b9c3c1" kindref="member">_dbus_string_pop_line</ref><sp/>(&amp;tests,<sp/>&amp;line))</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line_no<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_delete_leading_blanks<sp/>(&amp;line);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(&amp;line)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_iteration;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;#&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_iteration;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;H&gt;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;SHA-1:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_string_get_const_data<sp/>(&amp;line));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga5fe47873b2838339107c3e1f03d1a703" kindref="member">_dbus_string_find</ref><sp/>(&amp;line,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>3&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>See<sp/>sha-1/Readme.txt<sp/>-<sp/>the<sp/>&quot;Type<sp/>3&quot;<sp/>tests<sp/>are</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>random<sp/>seeds,<sp/>rather<sp/>than<sp/>data<sp/>to<sp/>be<sp/>hashed.</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we&apos;d<sp/>have<sp/>to<sp/>do<sp/>a<sp/>little<sp/>bit<sp/>more<sp/>implementation</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>use<sp/>those<sp/>tests.</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/>(ending<sp/>tests<sp/>due<sp/>to<sp/>Type<sp/>3<sp/>tests<sp/>seen<sp/>-<sp/>this<sp/>is<sp/>normal)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;D&gt;&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga4763d06a65cca36986bff030b404c90d" kindref="member">_dbus_string_starts_with_c_str</ref><sp/>(&amp;line,<sp/></highlight><highlight class="stringliteral">&quot;&lt;D&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_iteration;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>test;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>result;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>next_line;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>expected;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>success;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;next_line))</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;expected))</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;test))</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;result))</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>&quot;compact<sp/>strings&quot;<sp/>are<sp/>&quot;^&quot;-terminated<sp/>not</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>newline-terminated<sp/>so<sp/>readahead<sp/>to<sp/>find<sp/>the</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>&quot;^&quot;</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga5fe47873b2838339107c3e1f03d1a703" kindref="member">_dbus_string_find</ref><sp/>(&amp;line,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;^&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga8b7fc22e6738173e1b2cef4b91b9c3c1" kindref="member">_dbus_string_pop_line</ref><sp/>(&amp;tests,<sp/>&amp;next_line))</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaa6ecf36e70263659f921a4ef0335db12" kindref="member">_dbus_string_append_byte</ref><sp/>(&amp;line,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__DBusString_1gad379fce8d4ef4f7e28f81f50b46ee4c9" kindref="member">_dbus_string_move</ref><sp/>(&amp;next_line,<sp/>0,<sp/>&amp;line,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;line)))</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!decode_compact_string<sp/>(&amp;line,<sp/>&amp;test))</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>decode<sp/>line<sp/>%d<sp/>as<sp/>a<sp/>compact<sp/>string\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_no);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failure;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" kindref="member">_dbus_sha_compute</ref><sp/>(&amp;test,<sp/>&amp;result))</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>SHA-1<sp/>result&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!get_next_expected_result<sp/>(&amp;results,<sp/>&amp;expected))</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>an<sp/>expected<sp/>result\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failure;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gad79c34af55b58f0e8b81ecf11b8694bb" kindref="member">_dbus_string_equal</ref><sp/>(&amp;result,<sp/>&amp;expected))</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>line<sp/>%d<sp/>got<sp/>hash<sp/>%s<sp/>expected<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_no,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;result),</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;expected));</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failure;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success_count<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failure:</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;test);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;result);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;next_line);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;expected);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;Passed<sp/>the<sp/>%d<sp/>SHA-1<sp/>tests<sp/>in<sp/>the<sp/>test<sp/>file\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success_count);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;tests_file);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;results_file);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;tests);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;results);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;line);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="930"><highlight class="normal">_dbus_sha_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_data_dir)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>all_bytes[256];</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_data_dir<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!process_test_data<sp/>(test_data_dir))</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;No<sp/>test<sp/>data<sp/>dir\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>256)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>all_bytes[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!check_sha_binary<sp/>(all_bytes,<sp/>256,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4916d6bdb7f78e6803698cab32d1586ea457dfc8&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK(input,expected)<sp/>if<sp/>(!check_sha_str<sp/>(input,<sp/>expected))<sp/>return<sp/>FALSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;da39a3ee5e6b4b0d3255bfef95601890afd80709&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;86f7e437faa5a7fce15d1ddcb9eaeaea377667b8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;a9993e364706816aba3e25717850c26c9cd0d89d&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;message<sp/>digest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;c12252ceda8be8994d5fa0290a47231c1d16aae3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;abcdefghijklmnopqrstuvwxyz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;32d10c7b8cf96570ca04ce37f2a19d84240d3a89&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;761c457bf73b14d27e9e9265c46f4b4dda11f940&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>CHECK<sp/>(</highlight><highlight class="stringliteral">&quot;12345678901234567890123456789012345678901234567890123456789012345678901234567890&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;50abf5706a150990a08b2c5ea40fa0e585554732&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_ENABLE_EMBEDDED_TESTS<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-sha.c"/>
  </compounddef>
</doxygen>
