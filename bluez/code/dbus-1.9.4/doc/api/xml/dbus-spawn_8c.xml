<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-spawn_8c" kind="file" language="C++">
    <compoundname>dbus-spawn.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-spawn_8h" local="yes">dbus-spawn.h</includes>
    <includes refid="dbus-sysdeps-unix_8h" local="yes">dbus-sysdeps-unix.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-test_8h" local="yes">dbus-test.h</includes>
    <includes refid="dbus-protocol_8h" local="yes">dbus-protocol.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">sys/wait.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="3388">
        <label>stdarg.h</label>
      </node>
      <node id="3401">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
        <childnode refid="3403" relation="include">
        </childnode>
      </node>
      <node id="3390">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="3383">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="3394">
        <label>stdint.h</label>
      </node>
      <node id="3403">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="3411">
        <label>stdlib.h</label>
      </node>
      <node id="3398">
        <label>sys/poll.h</label>
      </node>
      <node id="3408">
        <label>fcntl.h</label>
      </node>
      <node id="3393">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="3380" relation="include">
        </childnode>
        <childnode refid="3394" relation="include">
        </childnode>
        <childnode refid="3395" relation="include">
        </childnode>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3396" relation="include">
        </childnode>
        <childnode refid="3382" relation="include">
        </childnode>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3388" relation="include">
        </childnode>
        <childnode refid="3398" relation="include">
        </childnode>
      </node>
      <node id="3392">
        <label>dbus/dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="3387" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3393" relation="include">
        </childnode>
        <childnode refid="3399" relation="include">
        </childnode>
      </node>
      <node id="3385">
        <label>stddef.h</label>
      </node>
      <node id="3382">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
        <childnode refid="3388" relation="include">
        </childnode>
      </node>
      <node id="3404">
        <label>dbus-sysdeps-unix.h</label>
        <link refid="dbus-sysdeps-unix_8h_source"/>
        <childnode refid="3393" relation="include">
        </childnode>
      </node>
      <node id="3386">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
      </node>
      <node id="3405">
        <label>dbus-test.h</label>
        <link refid="dbus-test_8h_source"/>
        <childnode refid="3384" relation="include">
        </childnode>
        <childnode refid="3382" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
      </node>
      <node id="3397">
        <label>string.h</label>
      </node>
      <node id="3400">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
      </node>
      <node id="3407">
        <label>unistd.h</label>
      </node>
      <node id="3406">
        <label>dbus/dbus-marshal-validate.h</label>
        <link refid="dbus-marshal-validate_8h_source"/>
      </node>
      <node id="3409">
        <label>signal.h</label>
      </node>
      <node id="3402">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
        <childnode refid="3386" relation="include">
        </childnode>
        <childnode refid="3387" relation="include">
        </childnode>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3388" relation="include">
        </childnode>
      </node>
      <node id="3379">
        <label>dbus-spawn.c</label>
        <link refid="dbus-spawn.c"/>
        <childnode refid="3380" relation="include">
        </childnode>
        <childnode refid="3381" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3392" relation="include">
        </childnode>
        <childnode refid="3405" relation="include">
        </childnode>
        <childnode refid="3390" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
      </node>
      <node id="3381">
        <label>dbus-spawn.h</label>
        <link refid="dbus-spawn_8h_source"/>
        <childnode refid="3382" relation="include">
        </childnode>
        <childnode refid="3389" relation="include">
        </childnode>
        <childnode refid="3391" relation="include">
        </childnode>
      </node>
      <node id="3410">
        <label>sys/wait.h</label>
      </node>
      <node id="3399">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
        <childnode refid="3400" relation="include">
        </childnode>
      </node>
      <node id="3380">
        <label>config.h</label>
      </node>
      <node id="3391">
        <label>dbus/dbus-watch.h</label>
        <link refid="dbus-watch_8h_source"/>
        <childnode refid="3392" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
      </node>
      <node id="3396">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="3382" relation="include">
        </childnode>
        <childnode refid="3389" relation="include">
        </childnode>
      </node>
      <node id="3389">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3384" relation="include">
        </childnode>
        <childnode refid="3390" relation="include">
        </childnode>
      </node>
      <node id="3384">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="3385" relation="include">
        </childnode>
        <childnode refid="3386" relation="include">
        </childnode>
      </node>
      <node id="3395">
        <label>inttypes.h</label>
      </node>
      <node id="3387">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="3383" relation="include">
        </childnode>
        <childnode refid="3385" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structDBusBabysitter" prot="public">DBusBabysitter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" prot="public" static="no">
        <name>LIVE_CHILDREN</name>
        <param><defname>sitter</defname></param>
        <initializer>((sitter)-&gt;socket_to_babysitter &gt;= 0 || (sitter)-&gt;error_pipe_from_child &gt;= 0)</initializer>
        <briefdescription>
<para>Macro returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the babysitter still has live sockets open to the babysitter child or the grandchild. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="675" column="9" bodyfile="dbus/dbus-spawn.c" bodystart="675" bodyend="-1"/>
        <referencedby refid="group__DBusInternalsUtils_1gacdc9c49735d6ce8364647c1961aa8d2b" compoundref="dbus-spawn_8c" startline="684" endline="698">_dbus_babysitter_kill_child</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" compoundref="dbus-spawn_8c" startline="706" endline="716">_dbus_babysitter_get_child_exited</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" compoundref="dbus-spawn_8c" startline="813" endline="826">_dbus_babysitter_set_watch_functions</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn_8c" startline="1210" endline="1435">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" prot="public" static="no">
        <name>READ_END</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Helps remember which end of the pipe is which. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="873" column="9" bodyfile="dbus/dbus-spawn.c" bodystart="873" bodyend="-1"/>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn_8c" startline="1210" endline="1435">_dbus_spawn_async_with_babysitter</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" compoundref="dbus-sysdeps-unix_8c" startline="3320" endline="3355">_dbus_get_tmpdir</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" prot="public" static="no">
        <name>WRITE_END</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Helps remember which end of the pipe is which. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="875" column="9" bodyfile="dbus/dbus-spawn.c" bodystart="875" bodyend="-1"/>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn_8c" startline="1210" endline="1435">_dbus_spawn_async_with_babysitter</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" compoundref="dbus-sysdeps-unix_8c" startline="3320" endline="3355">_dbus_get_tmpdir</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" prot="public" static="no">
        <name>ReadStatus</name>
        <enumvalue id="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" prot="public">
          <name>READ_STATUS_OK</name>
          <briefdescription>
<para>Read succeeded. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" prot="public">
          <name>READ_STATUS_ERROR</name>
          <briefdescription>
<para>Some kind of error. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" prot="public">
          <name>READ_STATUS_EOF</name>
          <briefdescription>
<para>EOF returned. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration for status of a read() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="64" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="enum" id="group__DBusInternalsUtils_1gabed82baf7f470b522273a3e37c24c600" prot="public" static="no">
        <name>@8</name>
        <enumvalue id="group__DBusInternalsUtils_1ggabed82baf7f470b522273a3e37c24c600a4592907220ace8e0b155d4900e50865e" prot="public">
          <name>CHILD_EXITED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusInternalsUtils_1ggabed82baf7f470b522273a3e37c24c600a77f80e6cb1e96ad1210b606dc18be6e7" prot="public">
          <name>CHILD_FORK_FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusInternalsUtils_1ggabed82baf7f470b522273a3e37c24c600a983bab9e6ef739828b884de9a37fb179" prot="public">
          <name>CHILD_EXEC_FAILED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusInternalsUtils_1ggabed82baf7f470b522273a3e37c24c600afc232c35a4eba288e48e414b7d815aac" prot="public">
          <name>CHILD_PID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="229" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="228" bodyend="234"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dbus-spawn_8c_1aa006daaf11f1e2e45a6ababaf463212b" prot="public" static="no" mutable="no">
        <type>char **</type>
        <definition>char** environ</definition>
        <argsstring></argsstring>
        <name>environ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="48" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusInternalsUtils_1ga0786b5d584ba37c718e5098d2b462164" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int babysit_sigchld_pipe</definition>
        <argsstring></argsstring>
        <name>babysit_sigchld_pipe</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1111" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusInternalsUtils_1gab3b18c14bc340ef12c839c4952b9f12a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref></type>
        <definition>static ReadStatus read_ints</definition>
        <argsstring>(int fd, int *buf, int n_ints_in_buf, int *n_ints_read, DBusError *error)</argsstring>
        <name>read_ints</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_ints_in_buf</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_ints_read</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="71" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="71" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga59363c8aef84c1db0d7c4fb23db72ff5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref></type>
        <definition>static ReadStatus read_pid</definition>
        <argsstring>(int fd, pid_t *buf, DBusError *error)</argsstring>
        <name>read_pid</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>pid_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="128" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="128" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaf713a0e5f72e3eab3a49cf7704e62b77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
        <definition>static DBusBabysitter* _dbus_babysitter_new</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_babysitter_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="268" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="268" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
        <definition>DBusBabysitter* _dbus_babysitter_ref</definition>
        <argsstring>(DBusBabysitter *sitter)</argsstring>
        <name>_dbus_babysitter_ref</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <briefdescription>
<para>Increment the reference count on the babysitter object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the babysitter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="302" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="302" bodyend="310"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" compoundref="dbus-sysdeps-unix_8c" startline="204" endline="208">_dbus_close_socket</references>
        <references refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" compoundref="dbus-watch_8c" startline="169" endline="173">_dbus_watch_invalidate</references>
        <references refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" compoundref="dbus-watch_8c" startline="409" endline="425">_dbus_watch_list_remove_watch</references>
        <references refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" compoundref="dbus-spawn-win_8c" startline="63">DBusBabysitter::refcount</references>
        <references refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" compoundref="dbus-spawn-win_8c" startline="84">DBusBabysitter::sitter_watch</references>
        <references refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" compoundref="dbus-spawn-win_8c" startline="80">DBusBabysitter::socket_to_babysitter</references>
        <references refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" compoundref="dbus-spawn-win_8c" startline="83">DBusBabysitter::watches</references>
        <referencedby refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" compoundref="dbus-spawn-win_8c" startline="361" endline="375">_dbus_babysitter_set_watch_functions</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaa5fe612589f110bef73adcef6a0710fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void close_socket_to_babysitter</definition>
        <argsstring>(DBusBabysitter *sitter)</argsstring>
        <name>close_socket_to_babysitter</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="312" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="528" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaae0dd31da3f59b6479707652328c7895" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void close_error_pipe_from_child</definition>
        <argsstring>(DBusBabysitter *sitter)</argsstring>
        <name>close_error_pipe_from_child</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="313" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="549" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_babysitter_unref</definition>
        <argsstring>(DBusBabysitter *sitter)</argsstring>
        <name>_dbus_babysitter_unref</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <briefdescription>
<para>Decrement the reference count on the babysitter object. </para>        </briefdescription>
        <detaileddescription>
<para>When the reference count of the babysitter object reaches zero, the babysitter is killed and the child that was being babysat gets emancipated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="324" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="324" bodyend="402"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" compoundref="dbus-sysdeps-unix_8c" startline="204" endline="208">_dbus_close_socket</references>
        <references refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" compoundref="dbus-sysdeps-unix_8c" startline="2634" endline="2728">_dbus_poll</references>
        <references refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" compoundref="dbus-sysdeps_8h" startline="300">_DBUS_POLLERR</references>
        <references refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" compoundref="dbus-sysdeps_8h" startline="302">_DBUS_POLLHUP</references>
        <references refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" compoundref="dbus-sysdeps_8h" startline="294">_DBUS_POLLIN</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" compoundref="dbus-watch_8c" startline="169" endline="173">_dbus_watch_invalidate</references>
        <references refid="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" compoundref="dbus-watch_8c" startline="249" endline="260">_dbus_watch_list_free</references>
        <references refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" compoundref="dbus-watch_8c" startline="409" endline="425">_dbus_watch_list_remove_watch</references>
        <references refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</references>
        <references refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" compoundref="dbus-errors_8c" startline="211" endline="226">dbus_error_free</references>
        <references refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" compoundref="dbus-errors_8h" startline="62">DBUS_ERROR_INIT</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" compoundref="dbus-spawn_8c" startline="260">DBusBabysitter::errnum</references>
        <references refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" compoundref="dbus-spawn_8c" startline="247">DBusBabysitter::error_pipe_from_child</references>
        <references refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" compoundref="dbus-spawn_8c" startline="254">DBusBabysitter::error_watch</references>
        <references refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" compoundref="dbus-sysdeps_8h" startline="313">DBusPollFD::events</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" compoundref="dbus-sysdeps_8h" startline="312">DBusPollFD::fd</references>
        <references refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" compoundref="dbus-spawn_8c" startline="250">DBusBabysitter::grandchild_pid</references>
        <references refid="structDBusBabysitter_1a2275e6071accc74280cd354debb5f801" compoundref="dbus-spawn_8c" startline="264">DBusBabysitter::have_exec_errnum</references>
        <references refid="structDBusBabysitter_1afc7d26bf84459ec406ddd615101018f9" compoundref="dbus-spawn_8c" startline="263">DBusBabysitter::have_fork_errnum</references>
        <references refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" compoundref="dbus-spawn-win_8c" startline="71">DBusBabysitter::log_name</references>
        <references refid="structDBusError_1afb559175326de5b6b340e26204e92d72" compoundref="dbus-errors_8h" startline="51">DBusError::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" compoundref="dbus-spawn_8c" startline="67">READ_STATUS_EOF</references>
        <references refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" compoundref="dbus-spawn_8c" startline="66">READ_STATUS_ERROR</references>
        <references refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" compoundref="dbus-spawn_8c" startline="65">READ_STATUS_OK</references>
        <references refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" compoundref="dbus-spawn-win_8c" startline="63">DBusBabysitter::refcount</references>
        <references refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" compoundref="dbus-sysdeps_8h" startline="314">DBusPollFD::revents</references>
        <references refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" compoundref="dbus-spawn_8c" startline="249">DBusBabysitter::sitter_pid</references>
        <references refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" compoundref="dbus-spawn-win_8c" startline="84">DBusBabysitter::sitter_watch</references>
        <references refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" compoundref="dbus-spawn-win_8c" startline="80">DBusBabysitter::socket_to_babysitter</references>
        <references refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" compoundref="dbus-spawn_8c" startline="261">DBusBabysitter::status</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" compoundref="dbus-spawn-win_8c" startline="83">DBusBabysitter::watches</references>
        <referencedby refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" compoundref="dbus-spawn-win_8c" startline="361" endline="375">_dbus_babysitter_set_watch_functions</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga4e2815531dd20d1a20385ad0dd673d8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref></type>
        <definition>static ReadStatus read_data</definition>
        <argsstring>(DBusBabysitter *sitter, int fd)</argsstring>
        <name>read_data</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="405" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="405" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gafb25fcf74b8eb6ce5a7eeaec0f4e3cf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_babysitter_socket</definition>
        <argsstring>(DBusBabysitter *sitter, int revents)</argsstring>
        <name>handle_babysitter_socket</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="570" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="570" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gac797e75808c29274d862f83cb4030e60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void handle_error_pipe</definition>
        <argsstring>(DBusBabysitter *sitter, int revents)</argsstring>
        <name>handle_error_pipe</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="590" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="590" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gad8837c58ed9628ae21c91d49da327482" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t babysitter_iteration</definition>
        <argsstring>(DBusBabysitter *sitter, dbus_bool_t block)</argsstring>
        <name>babysitter_iteration</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="607" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="607" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gacdc9c49735d6ce8364647c1961aa8d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_babysitter_kill_child</definition>
        <argsstring>(DBusBabysitter *sitter)</argsstring>
        <name>_dbus_babysitter_kill_child</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <briefdescription>
<para>Blocks until the babysitter process gives us the PID of the spawned grandchild, then kills the spawned grandchild. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="684" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="684" bodyend="698"/>
        <references refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" compoundref="dbus-spawn_8c" startline="250">DBusBabysitter::grandchild_pid</references>
        <references refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" compoundref="dbus-spawn_8c" startline="675">LIVE_CHILDREN</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_babysitter_get_child_exited</definition>
        <argsstring>(DBusBabysitter *sitter)</argsstring>
        <name>_dbus_babysitter_get_child_exited</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <briefdescription>
<para>Checks whether the child has exited, without blocking. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="706" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="706" bodyend="716"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" compoundref="dbus-spawn_8c" startline="675">LIVE_CHILDREN</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" compoundref="dbus-spawn-win_8c" startline="80">DBusBabysitter::socket_to_babysitter</references>
        <referencedby refid="group__DBusInternalsUtils_1ga1b17eec3f7915c21251685e16123f299" compoundref="dbus-spawn-win_8c" startline="303" endline="315">_dbus_babysitter_get_child_exit_status</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" compoundref="dbus-spawn-win_8c" startline="327" endline="358">_dbus_babysitter_set_child_exit_error</referencedby>
        <referencedby refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" compoundref="dbus-spawn-win_8c" startline="361" endline="375">_dbus_babysitter_set_watch_functions</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga1b17eec3f7915c21251685e16123f299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_babysitter_get_child_exit_status</definition>
        <argsstring>(DBusBabysitter *sitter, int *status)</argsstring>
        <name>_dbus_babysitter_get_child_exit_status</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Gets the exit status of the child. </para>        </briefdescription>
        <detaileddescription>
<para>We do this so implementation specific detail is not cluttering up dbus, for example the system launcher code. This can only be called if the child has exited, i.e. call <ref refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" kindref="member">_dbus_babysitter_get_child_exited()</ref>. It returns FALSE if the child did not return a status code, e.g. because the child was signaled or we failed to ever launch the child in the first place.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned status code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="731" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="731" bodyend="743"/>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" compoundref="dbus-spawn_8c" startline="706" endline="716">_dbus_babysitter_get_child_exited</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" compoundref="dbus-spawn_8c" startline="261">DBusBabysitter::status</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_babysitter_set_child_exit_error</definition>
        <argsstring>(DBusBabysitter *sitter, DBusError *error)</argsstring>
        <name>_dbus_babysitter_set_child_exit_error</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets the <ref refid="structDBusError" kindref="compound">DBusError</ref> with an explanation of why the spawned child process exited (on a signal, or whatever). </para>        </briefdescription>
        <detaileddescription>
<para>If the child process has not exited, does nothing (error will remain unset).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>an error to fill in </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="755" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="755" bodyend="798"/>
        <references refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" compoundref="dbus-spawn_8c" startline="706" endline="716">_dbus_babysitter_get_child_exited</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="357">DBUS_ERROR_NO_MEMORY</references>
        <references refid="group__DBusProtocol_1ga6cd00ac22b189360a7f0ce2f2b97975b" compoundref="dbus-protocol_8h" startline="420">DBUS_ERROR_SPAWN_CHILD_EXITED</references>
        <references refid="group__DBusProtocol_1ga8404cd7fd5f0d62a63e26783bdf572ae" compoundref="dbus-protocol_8h" startline="422">DBUS_ERROR_SPAWN_CHILD_SIGNALED</references>
        <references refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" compoundref="dbus-protocol_8h" startline="416">DBUS_ERROR_SPAWN_EXEC_FAILED</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" compoundref="dbus-spawn_8c" startline="260">DBusBabysitter::errnum</references>
        <references refid="structDBusBabysitter_1a2275e6071accc74280cd354debb5f801" compoundref="dbus-spawn_8c" startline="264">DBusBabysitter::have_exec_errnum</references>
        <references refid="structDBusBabysitter_1afc7d26bf84459ec406ddd615101018f9" compoundref="dbus-spawn_8c" startline="263">DBusBabysitter::have_fork_errnum</references>
        <references refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" compoundref="dbus-spawn-win_8c" startline="71">DBusBabysitter::log_name</references>
        <references refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" compoundref="dbus-spawn_8c" startline="261">DBusBabysitter::status</references>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_babysitter_set_watch_functions</definition>
        <argsstring>(DBusBabysitter *sitter, DBusAddWatchFunction add_function, DBusRemoveWatchFunction remove_function, DBusWatchToggledFunction toggled_function, void *data, DBusFreeFunction free_data_function)</argsstring>
        <name>_dbus_babysitter_set_watch_functions</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga285ce1f8bb94ef2f89f23db3de8cfe4b" kindref="member">DBusAddWatchFunction</ref></type>
          <declname>add_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga487ca73e58570f302ba7159c81719243" kindref="member">DBusRemoveWatchFunction</ref></type>
          <declname>remove_function</declname>
        </param>
        <param>
          <type><ref refid="group__DBusConnection_1ga005459ba2ddd69ba2d89f0e04ef57b10" kindref="member">DBusWatchToggledFunction</ref></type>
          <declname>toggled_function</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_function</declname>
        </param>
        <briefdescription>
<para>Sets watch functions to notify us when the babysitter object needs to read/write file descriptors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter</parametername>
</parameternamelist>
<parameterdescription>
<para>the babysitter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to begin monitoring a new descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remove_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to stop monitoring a descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>toggled_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to notify when the watch is enabled/disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data to pass to add_function and remove_function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_function</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be called to free the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (no memory) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="813" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="813" bodyend="826"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" compoundref="dbus-spawn_8c" startline="706" endline="716">_dbus_babysitter_get_child_exited</references>
        <references refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" compoundref="dbus-spawn_8c" startline="302" endline="310">_dbus_babysitter_ref</references>
        <references refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn_8c" startline="324" endline="402">_dbus_babysitter_unref</references>
        <references refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" compoundref="dbus-sysdeps_8h" startline="300">_DBUS_POLLERR</references>
        <references refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" compoundref="dbus-sysdeps_8h" startline="302">_DBUS_POLLHUP</references>
        <references refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" compoundref="dbus-sysdeps_8h" startline="294">_DBUS_POLLIN</references>
        <references refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" compoundref="dbus-watch_8c" startline="296" endline="365">_dbus_watch_list_set_functions</references>
        <references refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" compoundref="dbus-memory_8c" startline="461" endline="516">dbus_malloc</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98ab1474e26aa5be3d2876dd86bbe452156" compoundref="dbus-connection_8h" startline="62">DBUS_WATCH_ERROR</references>
        <references refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" compoundref="dbus-watch_8c" startline="586" endline="591">dbus_watch_get_socket</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a7a361a1a03f463c3c9e57f7368a0bfe4" compoundref="dbus-connection_8h" startline="67">DBUS_WATCH_HANGUP</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" compoundref="dbus-connection_8h" startline="60">DBUS_WATCH_READABLE</references>
        <references refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" compoundref="dbus-spawn_8c" startline="247">DBusBabysitter::error_pipe_from_child</references>
        <references refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" compoundref="dbus-spawn_8c" startline="254">DBusBabysitter::error_watch</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" compoundref="dbus-spawn_8c" startline="675">LIVE_CHILDREN</references>
        <references refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" compoundref="dbus-spawn-win_8c" startline="71">DBusBabysitter::log_name</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" compoundref="dbus-spawn-win_8c" startline="84">DBusBabysitter::sitter_watch</references>
        <references refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" compoundref="dbus-spawn-win_8c" startline="80">DBusBabysitter::socket_to_babysitter</references>
        <references refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" compoundref="dbus-spawn_8c" startline="261">DBusBabysitter::status</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" compoundref="dbus-spawn-win_8c" startline="83">DBusBabysitter::watches</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga2e6076cef892df86fd2b1e6788525c18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t handle_watch</definition>
        <argsstring>(DBusWatch *watch, unsigned int condition, void *data)</argsstring>
        <name>handle_watch</name>
        <param>
          <type><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref> *</type>
          <declname>watch</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="829" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="829" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gadcff86c8a70890b34ae8e27f994c894b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int close_and_invalidate</definition>
        <argsstring>(int *fd)</argsstring>
        <name>close_and_invalidate</name>
        <param>
          <type>int *</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="888" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="888" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaebf73611ad93c725c9d40d5f00c8a8f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t make_pipe</definition>
        <argsstring>(int p[2], DBusError *error)</argsstring>
        <name>make_pipe</name>
        <param>
          <type>int</type>
          <declname>p</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="904" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="904" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga77bf0d2c31cb88cb33293fc71cad402d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void do_write</definition>
        <argsstring>(int fd, const void *buf, size_t count)</argsstring>
        <name>do_write</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="946" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="946" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaedbfecc1fa57a30e478648ca695ad88a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_err_and_exit</definition>
        <argsstring>(int fd, int msg)</argsstring>
        <name>write_err_and_exit</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="975" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="975" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaa06ecf5635fc9e355bd2f3a22c99024d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_pid</definition>
        <argsstring>(int fd, pid_t pid)</argsstring>
        <name>write_pid</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>pid_t</type>
          <declname>pid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="986" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="986" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gada0b0417c25f198bd358fceacd3be6fd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_status_and_exit</definition>
        <argsstring>(int fd, int status)</argsstring>
        <name>write_status_and_exit</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="995" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="995" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga7d126fcb5c0f048bd1995b7f190d2cdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void do_exec</definition>
        <argsstring>(int child_err_report_fd, char **argv, char **envp, DBusSpawnChildSetupFunc child_setup, void *user_data)</argsstring>
        <name>do_exec</name>
        <param>
          <type>int</type>
          <declname>child_err_report_fd</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>envp</declname>
        </param>
        <param>
          <type>DBusSpawnChildSetupFunc</type>
          <declname>child_setup</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1006" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1006" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga857d0f0636be83f3af5af237f1e7840c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void check_babysit_events</definition>
        <argsstring>(pid_t grandchild_pid, int parent_pipe, int revents)</argsstring>
        <name>check_babysit_events</name>
        <param>
          <type>pid_t</type>
          <declname>grandchild_pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parent_pipe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>revents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1055" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1055" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gacdae1e2c4c3ba6fcc742f773ba352141" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void babysit_signal_handler</definition>
        <argsstring>(int signo)</argsstring>
        <name>babysit_signal_handler</name>
        <param>
          <type>int</type>
          <declname>signo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1114" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1114" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga989838eaf855e6d240ff51640c6d2148" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void babysit</definition>
        <argsstring>(pid_t grandchild_pid, int parent_pipe)</argsstring>
        <name>babysit</name>
        <param>
          <type>pid_t</type>
          <declname>grandchild_pid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>parent_pipe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1124" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1124" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_spawn_async_with_babysitter</definition>
        <argsstring>(DBusBabysitter **sitter_p, const char *log_name, char **argv, char **env, DBusSpawnChildSetupFunc child_setup, void *user_data, DBusError *error)</argsstring>
        <name>_dbus_spawn_async_with_babysitter</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> **</type>
          <declname>sitter_p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>log_name</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>env</declname>
        </param>
        <param>
          <type>DBusSpawnChildSetupFunc</type>
          <declname>child_setup</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Spawns a new process. </para>        </briefdescription>
        <detaileddescription>
<para>The child_setup function is passed the given user_data and is run in the child just before calling exec().</para><para>Also creates a &quot;babysitter&quot; which tracks the status of the child process, advising the parent if the child exits. If the spawn fails, no babysitter is created. If sitter_p is <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, no babysitter is kept.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sitter_p</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for babysitter or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name under which to log messages about this process being spawned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>the executable and arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>env</parametername>
</parameternamelist>
<parameterdescription>
<para>the environment, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to copy the parent&apos;s </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child_setup</parametername>
</parameternamelist>
<parameterdescription>
<para>function to call in child pre-exec() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>user data for setup function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error object to be filled in if function fails </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error is filled in </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1210" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1210" bodyend="1435"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusInternalsUtils_1gacdc9c49735d6ce8364647c1961aa8d2b" compoundref="dbus-spawn_8c" startline="684" endline="698">_dbus_babysitter_kill_child</references>
        <references refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" compoundref="dbus-spawn_8c" startline="755" endline="798">_dbus_babysitter_set_child_exit_error</references>
        <references refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" compoundref="dbus-spawn_8c" startline="324" endline="402">_dbus_babysitter_unref</references>
        <references refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" compoundref="dbus-sysdeps-unix_8c" startline="3175" endline="3239">_dbus_full_duplex_pipe</references>
        <references refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" compoundref="dbus-sysdeps_8c" startline="185" endline="193">_dbus_getenv</references>
        <references refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn_8c" startline="1210" endline="1435">_dbus_spawn_async_with_babysitter</references>
        <references refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" compoundref="dbus-internals_8c" startline="527" endline="544">_dbus_strdup</references>
        <references refid="group__DBusString_1gab0078cf7e0e5bd784ec6d6e0cc3923a2" compoundref="dbus-string_8c" startline="1113" endline="1125">_dbus_string_append_printf</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" compoundref="dbus-watch_8c" startline="169" endline="173">_dbus_watch_invalidate</references>
        <references refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" compoundref="dbus-watch_8c" startline="376" endline="399">_dbus_watch_list_add_watch</references>
        <references refid="group__DBusWatchInternals_1ga1f940e505b20e6429ae858a7b70b0541" compoundref="dbus-watch_8c" startline="88" endline="115">_dbus_watch_new</references>
        <references refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" compoundref="dbus-watch_8c" startline="138" endline="156">_dbus_watch_unref</references>
        <references refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" compoundref="dbus-errors_8c" startline="211" endline="226">dbus_error_free</references>
        <references refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" compoundref="dbus-errors_8c" startline="302" endline="320">dbus_error_has_name</references>
        <references refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" compoundref="dbus-errors_8h" startline="62">DBUS_ERROR_INIT</references>
        <references refid="group__DBusErrors_1ga8937f0b7cdf8554fa6305158ce453fbe" compoundref="dbus-errors_8c" startline="188" endline="202">dbus_error_init</references>
        <references refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" compoundref="dbus-errors_8c" startline="329" endline="335">dbus_error_is_set</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="357">DBUS_ERROR_NO_MEMORY</references>
        <references refid="group__DBusProtocol_1ga6cd00ac22b189360a7f0ce2f2b97975b" compoundref="dbus-protocol_8h" startline="420">DBUS_ERROR_SPAWN_CHILD_EXITED</references>
        <references refid="group__DBusProtocol_1ga8404cd7fd5f0d62a63e26783bdf572ae" compoundref="dbus-protocol_8h" startline="422">DBUS_ERROR_SPAWN_CHILD_SIGNALED</references>
        <references refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" compoundref="dbus-protocol_8h" startline="416">DBUS_ERROR_SPAWN_EXEC_FAILED</references>
        <references refid="group__DBusProtocol_1gafe69e1ac207a66cc86d2880fd3ca62af" compoundref="dbus-protocol_8h" startline="418">DBUS_ERROR_SPAWN_FORK_FAILED</references>
        <references refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" compoundref="dbus-memory_8c" startline="749" endline="764">dbus_free_string_array</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" compoundref="dbus-errors_8c" startline="243" endline="266">dbus_set_error_const</references>
        <references refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" compoundref="dbus-connection_8h" startline="60">DBUS_WATCH_READABLE</references>
        <references refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" compoundref="dbus-spawn_8c" startline="247">DBusBabysitter::error_pipe_from_child</references>
        <references refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" compoundref="dbus-spawn_8c" startline="254">DBusBabysitter::error_watch</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" compoundref="dbus-spawn_8c" startline="250">DBusBabysitter::grandchild_pid</references>
        <references refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" compoundref="dbus-spawn_8c" startline="675">LIVE_CHILDREN</references>
        <references refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" compoundref="dbus-spawn-win_8c" startline="71">DBusBabysitter::log_name</references>
        <references refid="structDBusError_1afb559175326de5b6b340e26204e92d72" compoundref="dbus-errors_8h" startline="51">DBusError::message</references>
        <references refid="structDBusError_1a09a9614ff07fdf3ef163b232ff934581" compoundref="dbus-errors_8h" startline="50">DBusError::name</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" compoundref="dbus-spawn_8c" startline="873">READ_END</references>
        <references refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" compoundref="dbus-spawn_8c" startline="249">DBusBabysitter::sitter_pid</references>
        <references refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" compoundref="dbus-spawn-win_8c" startline="84">DBusBabysitter::sitter_watch</references>
        <references refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" compoundref="dbus-spawn-win_8c" startline="80">DBusBabysitter::socket_to_babysitter</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" compoundref="dbus-spawn-win_8c" startline="83">DBusBabysitter::watches</references>
        <references refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" compoundref="dbus-spawn_8c" startline="875">WRITE_END</references>
        <referencedby refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" compoundref="dbus-spawn-win_8c" startline="644" endline="756">_dbus_spawn_async_with_babysitter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUtils_1ga98cc9642d4e5246804c8611022a68c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_babysitter_set_result_function</definition>
        <argsstring>(DBusBabysitter *sitter, DBusBabysitterFinishedFunc finished, void *user_data)</argsstring>
        <name>_dbus_babysitter_set_result_function</name>
        <param>
          <type><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref> *</type>
          <declname>sitter</declname>
        </param>
        <param>
          <type>DBusBabysitterFinishedFunc</type>
          <declname>finished</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-spawn.c" line="1438" column="1" bodyfile="dbus/dbus-spawn.c" bodystart="1438" bodyend="1444"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-spawn.c<sp/>Wrapper<sp/>around<sp/>fork/exec</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003,<sp/>2004<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/>CodeFactory<sp/>AB</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-spawn.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps-unix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/wait.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_ERRNO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSLOG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;syslog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;systemd/sd-journal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**environ;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>I&apos;m<sp/>pretty<sp/>sure<sp/>this<sp/>whole<sp/>spawn<sp/>file<sp/>could<sp/>be<sp/>made<sp/>simpler,</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>if<sp/>you<sp/>thought<sp/>about<sp/>it<sp/>a<sp/>bit.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65" refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" kindref="member">READ_STATUS_ERROR</ref>,<sp/></highlight></codeline>
<codeline lineno="67" refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" kindref="member">READ_STATUS_EOF</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">read_ints<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_ints_in_buf,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_ints_read,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref><sp/>retval;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssize_t<sp/>chunk;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>to_read;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_read<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(int)<sp/>*<sp/>n_ints_in_buf<sp/>-<sp/>bytes;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_read<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>again:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chunk<sp/>=<sp/>read<sp/>(fd,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buf)<sp/>+<sp/>bytes,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_read);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gac52e7ce94426443ff385994b539c6c38" kindref="member">DBUS_ERROR_SPAWN_FAILED</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>child<sp/>pipe<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" kindref="member">READ_STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" kindref="member">READ_STATUS_EOF</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>EOF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>chunk<sp/>&gt;<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>+=<sp/>chunk;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>*n_ints_read<sp/>=<sp/>(int)(bytes<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal">read_pid<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/><sp/><sp/><sp/><sp/>*buf,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref><sp/>retval;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ssize_t<sp/>chunk;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>to_read;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>to_read<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(pid_t)<sp/>-<sp/>bytes;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_read<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>again:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chunk<sp/>=<sp/>read<sp/>(fd,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buf)<sp/>+<sp/>bytes,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_read);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gac52e7ce94426443ff385994b539c6c38" kindref="member">DBUS_ERROR_SPAWN_FAILED</ref>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>from<sp/>child<sp/>pipe<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" kindref="member">READ_STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunk<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" kindref="member">READ_STATUS_EOF</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>EOF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>chunk<sp/>&gt;<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>+=<sp/>chunk;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>implementation<sp/>uses<sp/>an<sp/>intermediate<sp/>child<sp/>between<sp/>the<sp/>main<sp/>process</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>grandchild.<sp/>The<sp/>grandchild<sp/>is<sp/>our<sp/>spawned<sp/>process.<sp/>The<sp/>intermediate</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>child<sp/>is<sp/>a<sp/>babysitter<sp/>process;<sp/>it<sp/>keeps<sp/>track<sp/>of<sp/>when<sp/>the<sp/>grandchild</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>exits/crashes,<sp/>and<sp/>reaps<sp/>the<sp/>grandchild.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>We<sp/>automatically<sp/>reap<sp/>the<sp/>babysitter<sp/>process,<sp/>killing<sp/>it<sp/>if<sp/>necessary,</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>when<sp/>the<sp/>DBusBabysitter&apos;s<sp/>refcount<sp/>goes<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>Processes:</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>main<sp/>process</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>|<sp/>fork()<sp/>A</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>\-<sp/>babysitter</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>|<sp/>fork<sp/>()<sp/>B</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>\-<sp/>grandchild<sp/><sp/><sp/><sp/><sp/>--&gt;<sp/>exec<sp/>--&gt;<sp/><sp/><sp/><sp/>spawned<sp/>process</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>IPC:</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_err_report_pipe</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/-----------&lt;---------&lt;--------------\</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>main<sp/>process<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>babysitter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grandchild</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\-------&lt;-&gt;-------/</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>babysitter_pipe</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>child_err_report_pipe<sp/>is<sp/>genuinely<sp/>a<sp/>pipe.</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>The<sp/>READ_END<sp/>(also<sp/>called<sp/>error_pipe_from_child)<sp/>is<sp/>used<sp/>in<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>process.<sp/>The<sp/>WRITE_END<sp/>(also<sp/>called<sp/>child_err_report_fd)<sp/>is<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>the<sp/>grandchild<sp/>process.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>On<sp/>failure,<sp/>the<sp/>grandchild<sp/>process<sp/>sends<sp/>CHILD_EXEC_FAILED<sp/>+<sp/>errno.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>On<sp/>success,<sp/>the<sp/>pipe<sp/>just<sp/>closes<sp/>(because<sp/>it&apos;s<sp/>close-on-exec)<sp/>without</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>sending<sp/>any<sp/>bytes.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>babysitter_pipe<sp/>is<sp/>mis-named:<sp/>it&apos;s<sp/>really<sp/>a<sp/>bidirectional<sp/>socketpair.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>The<sp/>[0]<sp/>end<sp/>(also<sp/>called<sp/>socket_to_babysitter)<sp/>is<sp/>used<sp/>in<sp/>the<sp/>main</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>process,<sp/>the<sp/>[1]<sp/>end<sp/>(also<sp/>called<sp/>parent_pipe)<sp/>is<sp/>used<sp/>in<sp/>the<sp/>babysitter.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>If<sp/>the<sp/>fork()<sp/>labelled<sp/>B<sp/>in<sp/>the<sp/>diagram<sp/>above<sp/>fails,<sp/>the<sp/>babysitter<sp/>sends</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>CHILD_FORK_FAILED<sp/>+<sp/>errno.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>On<sp/>success,<sp/>the<sp/>babysitter<sp/>sends<sp/>CHILD_PID<sp/>+<sp/>the<sp/>grandchild&apos;s<sp/>pid.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>On<sp/>SIGCHLD,<sp/>the<sp/>babysitter<sp/>sends<sp/>CHILD_EXITED<sp/>+<sp/>the<sp/>exit<sp/>status.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>The<sp/>main<sp/>process<sp/>doesn&apos;t<sp/>explicitly<sp/>send<sp/>anything,<sp/>but<sp/>when<sp/>it<sp/>exits,</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>the<sp/>babysitter<sp/>gets<sp/>POLLHUP<sp/>or<sp/>POLLERR.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Messages<sp/>from<sp/>children<sp/>to<sp/>parents<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>CHILD_EXITED,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>message<sp/>is<sp/>followed<sp/>by<sp/>the<sp/>exit<sp/>status<sp/>int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>CHILD_FORK_FAILED,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Followed<sp/>by<sp/>errno<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>CHILD_EXEC_FAILED,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Followed<sp/>by<sp/>errno<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>CHILD_PID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Followed<sp/>by<sp/>pid_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref></highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref>;<sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>;<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref>;<sp/></highlight></codeline>
<codeline lineno="247" refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref>;<sp/></highlight></codeline>
<codeline lineno="249" refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" refkind="member"><highlight class="normal"><sp/><sp/>pid_t<sp/><ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" refkind="member"><highlight class="normal"><sp/><sp/>pid_t<sp/><ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>;<sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="structDBusWatchList" kindref="compound">DBusWatchList</ref><sp/>*<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>;<sp/></highlight></codeline>
<codeline lineno="254" refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>;<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/>*<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>;<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>DBusBabysitterFinishedFunc<sp/>finished_cb;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*finished_data;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref>;<sp/></highlight></codeline>
<codeline lineno="261" refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>;<sp/></highlight></codeline>
<codeline lineno="262" refid="structDBusBabysitter_1a8d6c87e5e04e3f6e2e11dc4547e238c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>have_child_status<sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="263" refid="structDBusBabysitter_1afc7d26bf84459ec406ddd615101018f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1afc7d26bf84459ec406ddd615101018f9" kindref="member">have_fork_errnum</ref><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="264" refid="structDBusBabysitter_1a2275e6071accc74280cd354debb5f801" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1a2275e6071accc74280cd354debb5f801" kindref="member">have_exec_errnum</ref><sp/>:<sp/>1;<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal">};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref>*</highlight></codeline>
<codeline lineno="268"><highlight class="normal">_dbus_babysitter_new<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>sitter<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref><sp/>=<sp/><ref refid="group__DBusWatchInternals_1ga5d9db5d0af5916a5ec890eb38d5741eb" kindref="member">_dbus_watch_list_new</ref><sp/>();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sitter;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*</highlight></codeline>
<codeline lineno="302" refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" kindref="member">_dbus_babysitter_ref</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sitter;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close_socket_to_babysitter<sp/><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close_error_pipe_from_child<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abd6c2c867f005bea3932fc9f754dd14e" kindref="member">refcount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>haven&apos;t<sp/>forked<sp/>other<sp/>babysitters</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>since<sp/>this<sp/>babysitter<sp/>and<sp/>socket<sp/>were</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>created<sp/>then<sp/>this<sp/>close<sp/>will<sp/>cause<sp/>the</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>babysitter<sp/>to<sp/>wake<sp/>up<sp/>from<sp/>poll<sp/>with</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>hangup<sp/>and<sp/>then<sp/>the<sp/>babysitter<sp/>will</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>quit<sp/>itself.</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_socket_to_babysitter<sp/>(sitter);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_error_pipe_from_child<sp/>(sitter);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>possible<sp/>the<sp/>babysitter<sp/>died<sp/>on<sp/>its<sp/>own<sp/>above<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>from<sp/>the<sp/>close,<sp/>or<sp/>was<sp/>killed<sp/>randomly</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>some<sp/>other<sp/>process,<sp/>so<sp/>first<sp/>try<sp/>to<sp/>reap<sp/>it</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>waitpid<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref>,<sp/>&amp;status,<sp/>WNOHANG);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>couldn&apos;t<sp/>reap<sp/>the<sp/>child<sp/>then<sp/>kill<sp/>it,<sp/>and</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>try<sp/>again</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kill<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref>,<sp/>SIGKILL);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>waitpid<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref>,<sp/>&amp;status,<sp/>0);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_DBUS_UNLIKELY<sp/>(ret<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>ECHILD)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Babysitter<sp/>process<sp/>not<sp/>available<sp/>to<sp/>be<sp/>reaped;<sp/>should<sp/>not<sp/>happen\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>error<sp/>%d<sp/>in<sp/>waitpid()<sp/>for<sp/>babysitter:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno,<sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Reaped<sp/>%ld,<sp/>waiting<sp/>for<sp/>babysitter<sp/>%ld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>ret,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WIFEXITED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>))</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Babysitter<sp/>exited<sp/>with<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WEXITSTATUS<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>));</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WIFSIGNALED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>))</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Babysitter<sp/>received<sp/>signal<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WTERMSIG<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>));</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Babysitter<sp/>exited<sp/>abnormally\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1gac3f75c0da2c8c51e8708f45dd27f9e2d" kindref="member">_dbus_watch_list_free</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref></highlight></codeline>
<codeline lineno="405"><highlight class="normal">read_data<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>what;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>got;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error<sp/>=<sp/><ref refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" kindref="member">DBUS_ERROR_INIT</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaa1d634db87605c2a83f2750ce6052653" kindref="member">ReadStatus</ref><sp/>r;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>r<sp/>=<sp/>read_ints<sp/>(fd,<sp/>&amp;what,<sp/>1,<sp/>&amp;got,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" kindref="member">READ_STATUS_ERROR</ref>:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>data<sp/>from<sp/>fd<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fd,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" kindref="member">READ_STATUS_EOF</ref>:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(what)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CHILD_EXITED:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CHILD_FORK_FAILED:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CHILD_EXEC_FAILED:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arg;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>read_ints<sp/>(fd,<sp/>&amp;arg,<sp/>1,<sp/>&amp;got,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" kindref="member">READ_STATUS_ERROR</ref>:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>arg<sp/>from<sp/>fd<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fd,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" kindref="member">READ_STATUS_EOF</ref>:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(got<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(what<sp/>==<sp/>CHILD_EXITED)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>not<sp/>reset<sp/>sitter-&gt;errnum<sp/>to<sp/>0<sp/>here.<sp/>We<sp/>get<sp/>here<sp/>if</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>babysitter<sp/>reports<sp/>that<sp/>the<sp/>grandchild<sp/>process<sp/>has</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>exited,<sp/>and<sp/>there<sp/>are<sp/>two<sp/>ways<sp/>that<sp/>can<sp/>happen:</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>1.<sp/>grandchild<sp/>successfully<sp/>exec()s<sp/>the<sp/>desired<sp/>process,</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>then<sp/>the<sp/>desired<sp/>process<sp/>exits<sp/>or<sp/>is<sp/>terminated</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>a<sp/>signal.<sp/>The<sp/>babysitter<sp/>observes<sp/>this<sp/>and<sp/>reports</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>CHILD_EXITED.</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>2.<sp/>grandchild<sp/>fails<sp/>to<sp/>exec()<sp/>the<sp/>desired<sp/>process,</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>attempts<sp/>to<sp/>report<sp/>the<sp/>exec()<sp/>failure<sp/>(which</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>will<sp/>receive<sp/>as<sp/>CHILD_EXEC_FAILED),<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>exits<sp/>itself<sp/>(which<sp/>will<sp/>prompt<sp/>the<sp/>babysitter<sp/>to</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>send<sp/>CHILD_EXITED).<sp/>We<sp/>want<sp/>the<sp/>CHILD_EXEC_FAILED</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>take<sp/>precedence<sp/>(and<sp/>have<sp/>its<sp/>errno<sp/>logged),</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>which<sp/>_dbus_babysitter_set_child_exit_error()<sp/>does.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;have_child_status<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref><sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recorded<sp/>child<sp/>status<sp/>exited<sp/>=<sp/>%d<sp/>signaled<sp/>=<sp/>%d<sp/>exitstatus<sp/>=<sp/>%d<sp/>termsig<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WIFEXITED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>),<sp/>WIFSIGNALED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>),</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WEXITSTATUS<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>),<sp/>WTERMSIG<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(what<sp/>==<sp/>CHILD_FORK_FAILED)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1afc7d26bf84459ec406ddd615101018f9" kindref="member">have_fork_errnum</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref><sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recorded<sp/>fork<sp/>errnum<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(what<sp/>==<sp/>CHILD_EXEC_FAILED)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a2275e6071accc74280cd354debb5f801" kindref="member">have_exec_errnum</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref><sp/>=<sp/>arg;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recorded<sp/>exec<sp/>errnum<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CHILD_PID:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pid_t<sp/>pid<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>read_pid<sp/>(fd,<sp/>&amp;pid,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(r)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653ad13164fb31fb0b5bc1ec802d09d10411" kindref="member">READ_STATUS_ERROR</ref>:</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>PID<sp/>from<sp/>fd<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fd,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a7d65492f3f0d09176ac4504987457d23" kindref="member">READ_STATUS_EOF</ref>:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref><sp/>=<sp/>pid;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recorded<sp/>grandchild<sp/>pid<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>message<sp/>received<sp/>from<sp/>babysitter<sp/>process\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">close_socket_to_babysitter<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Closing<sp/>babysitter\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" kindref="member">_dbus_watch_list_remove_watch</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>,<sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" kindref="member">_dbus_watch_invalidate</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" kindref="member">_dbus_close_socket</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">close_error_pipe_from_child<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Closing<sp/>child<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga76894d297bc7d7d23cbacdc2b1778884" kindref="member">_dbus_watch_list_remove_watch</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>,<sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" kindref="member">_dbus_watch_invalidate</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" kindref="member">_dbus_close_socket</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">handle_babysitter_socket<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revents)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Even<sp/>if<sp/>we<sp/>have<sp/>POLLHUP,<sp/>we<sp/>want<sp/>to<sp/>keep<sp/>reading</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/>*<sp/>data<sp/>until<sp/>POLLIN<sp/>goes<sp/>away;<sp/>so<sp/>this<sp/>function<sp/>only</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/>*<sp/>looks<sp/>at<sp/>HUP/ERR<sp/>if<sp/>no<sp/>IN<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(revents<sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>data<sp/>from<sp/>babysitter\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_data<sp/>(sitter,<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref>)<sp/>!=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_socket_to_babysitter<sp/>(sitter);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(revents<sp/>&amp;<sp/>(<ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member">_DBUS_POLLERR</ref><sp/>|<sp/><ref refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" kindref="member">_DBUS_POLLHUP</ref>))</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_socket_to_babysitter<sp/>(sitter);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">handle_error_pipe<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revents)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(revents<sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>data<sp/>from<sp/>child<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read_data<sp/>(sitter,<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref>)<sp/>!=<sp/><ref refid="group__DBusInternalsUtils_1ggaa1d634db87605c2a83f2750ce6052653a105d3aa9ec19f4c060b39c7fafba39ff" kindref="member">READ_STATUS_OK</ref>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_error_pipe_from_child<sp/>(sitter);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(revents<sp/>&amp;<sp/>(<ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member">_DBUS_POLLERR</ref><sp/>|<sp/><ref refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" kindref="member">_DBUS_POLLHUP</ref>))</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_error_pipe_from_child<sp/>(sitter);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>whether<sp/>there<sp/>were<sp/>any<sp/>poll<sp/>events<sp/>handled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="607"><highlight class="normal">babysitter_iteration<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/>block)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>fds[2];</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>descriptors_ready;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>descriptors_ready<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref><sp/>=<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref><sp/>=<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fds[i].<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" kindref="member">_dbus_poll</ref><sp/>(fds,<sp/>i,<sp/>0);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>block)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" kindref="member">_dbus_poll</ref><sp/>(fds,<sp/>i,<sp/>-1);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors_ready<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].fd<sp/>==<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_error_pipe<sp/>(sitter,<sp/>fds[i].revents);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds[i].fd<sp/>==<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref>)</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_babysitter_socket<sp/>(sitter,<sp/>fds[i].revents);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descriptors_ready;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" refkind="member"><highlight class="preprocessor">#define<sp/>LIVE_CHILDREN(sitter)<sp/>((sitter)-&gt;socket_to_babysitter<sp/>&gt;=<sp/>0<sp/>||<sp/>(sitter)-&gt;error_pipe_from_child<sp/>&gt;=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="group__DBusInternalsUtils_1gacdc9c49735d6ce8364647c1961aa8d2b" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1gacdc9c49735d6ce8364647c1961aa8d2b" kindref="member">_dbus_babysitter_kill_child</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>sure<sp/>we<sp/>have<sp/>the<sp/>PID<sp/>of<sp/>the<sp/>child<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" kindref="member">LIVE_CHILDREN</ref><sp/>(sitter)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>babysitter_iteration<sp/>(sitter,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Got<sp/>child<sp/>PID<sp/>%ld<sp/>for<sp/>killing\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref><sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>child<sp/>is<sp/>already<sp/>dead,<sp/>or<sp/>we&apos;re<sp/>so<sp/>hosed<sp/>we&apos;ll<sp/>never<sp/>recover<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>kill<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,<sp/>SIGKILL);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="706" refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" kindref="member">_dbus_babysitter_get_child_exited</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Be<sp/>sure<sp/>we&apos;re<sp/>up-to-date<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" kindref="member">LIVE_CHILDREN</ref><sp/>(sitter)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>babysitter_iteration<sp/>(sitter,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>))</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>will<sp/>have<sp/>exited<sp/>the<sp/>babysitter<sp/>when<sp/>the<sp/>child<sp/>has<sp/>exited<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="731" refid="group__DBusInternalsUtils_1ga1b17eec3f7915c21251685e16123f299" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1ga1b17eec3f7915c21251685e16123f299" kindref="member">_dbus_babysitter_get_child_exit_status</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" kindref="member">_dbus_babysitter_get_child_exited</ref><sp/>(sitter))</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Child<sp/>has<sp/>not<sp/>exited&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sitter-&gt;have_child_status<sp/>||</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!(WIFEXITED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>)))</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>*status<sp/>=<sp/>WEXITSTATUS<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" kindref="member">_dbus_babysitter_set_child_exit_error</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" kindref="member">_dbus_babysitter_get_child_exited</ref><sp/>(sitter))</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>if<sp/>exec<sp/>fails,<sp/>we<sp/>will<sp/>also<sp/>get<sp/>a<sp/>child<sp/>status</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/><sp/><sp/>*<sp/>from<sp/>the<sp/>babysitter<sp/>saying<sp/>the<sp/>child<sp/>exited,</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/>*<sp/>so<sp/>we<sp/>need<sp/>to<sp/>give<sp/>priority<sp/>to<sp/>the<sp/>exec<sp/>error</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a2275e6071accc74280cd354debb5f801" kindref="member">have_exec_errnum</ref>)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" kindref="member">DBUS_ERROR_SPAWN_EXEC_FAILED</ref>,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>execute<sp/>program<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,<sp/>_dbus_strerror<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref>));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1afc7d26bf84459ec406ddd615101018f9" kindref="member">have_fork_errnum</ref>)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fork<sp/>a<sp/>new<sp/>process<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,<sp/>_dbus_strerror<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aaca14d66f484b0a3b06b395aa8485c70" kindref="member">errnum</ref>));</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;have_child_status)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WIFEXITED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>))</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga6cd00ac22b189360a7f0ce2f2b97975b" kindref="member">DBUS_ERROR_SPAWN_CHILD_EXITED</ref>,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>%s<sp/>exited<sp/>with<sp/>status<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,<sp/>WEXITSTATUS<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WIFSIGNALED<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>))</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga8404cd7fd5f0d62a63e26783bdf572ae" kindref="member">DBUS_ERROR_SPAWN_CHILD_SIGNALED</ref>,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>%s<sp/>received<sp/>signal<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,<sp/>WTERMSIG<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>%s<sp/>exited<sp/>abnormally&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>%s<sp/>exited,<sp/>reason<sp/>unknown&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="813" refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1ga5f467b14f0c2f667e46c4ba786808e5b" kindref="member">_dbus_babysitter_set_watch_functions</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sitter,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga285ce1f8bb94ef2f89f23db3de8cfe4b" kindref="member">DBusAddWatchFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_function,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga487ca73e58570f302ba7159c81719243" kindref="member">DBusRemoveWatchFunction</ref><sp/><sp/><sp/><sp/>remove_function,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1ga005459ba2ddd69ba2d89f0e04ef57b10" kindref="member">DBusWatchToggledFunction</ref><sp/><sp/><sp/>toggled_function,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_data_function)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusWatchInternals_1gae9ab8cf14f4191191e94183be9a031d9" kindref="member">_dbus_watch_list_set_functions</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add_function,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_function,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>toggled_function,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_data_function);</highlight></codeline>
<codeline lineno="826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="829"><highlight class="normal">handle_watch<sp/>(<ref refid="structDBusWatch" kindref="compound">DBusWatch</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*watch,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>condition,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga525b5fdb780ddf6891918466965e6eb6" kindref="member">_dbus_babysitter_ref</ref><sp/>(data);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>revents;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>revents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>revents<sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98ab1474e26aa5be3d2876dd86bbe452156" kindref="member">DBUS_WATCH_ERROR</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>revents<sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member">_DBUS_POLLERR</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition<sp/>&amp;<sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a7a361a1a03f463c3c9e57f7368a0bfe4" kindref="member">DBUS_WATCH_HANGUP</ref>)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>revents<sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" kindref="member">_DBUS_POLLHUP</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>fd<sp/>=<sp/><ref refid="group__DBusWatch_1ga91308f393d41b31babda17c83833517f" kindref="member">dbus_watch_get_socket</ref><sp/>(watch);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref>)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_error_pipe<sp/>(sitter,<sp/>revents);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_babysitter_socket<sp/>(sitter,<sp/>revents);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" kindref="member">LIVE_CHILDREN</ref><sp/>(sitter)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>babysitter_iteration<sp/>(sitter,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>))</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fd.o<sp/>#32992:<sp/>if<sp/>the<sp/>handle_*<sp/>methods<sp/>closed<sp/>their<sp/>sockets,<sp/>they<sp/>previously</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/>*<sp/>didn&apos;t<sp/>always<sp/>remove<sp/>the<sp/>watches.<sp/>Check<sp/>that<sp/>we<sp/>don&apos;t<sp/>regress.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>!=<sp/>-1<sp/>||<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref><sp/>!=<sp/>-1<sp/>||<sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1ga5c463ea356ea62055a35211e8d81f8b9" kindref="member">_dbus_babysitter_get_child_exited</ref><sp/>(sitter)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;finished_cb<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;finished_cb<sp/>(sitter,<sp/>sitter-&gt;finished_data);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;finished_cb<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="873" refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" refkind="member"><highlight class="preprocessor">#define<sp/>READ_END<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" refkind="member"><highlight class="preprocessor">#define<sp/>WRITE_END<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Avoids<sp/>a<sp/>danger<sp/>in<sp/>re-entrant<sp/>situations<sp/>(calling<sp/>close()</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*<sp/>on<sp/>a<sp/>file<sp/>descriptor<sp/>twice,<sp/>and<sp/>another<sp/>module<sp/>has</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/>*<sp/>re-opened<sp/>it<sp/>since<sp/>the<sp/>first<sp/>close).</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/>*<sp/>This<sp/>previously<sp/>claimed<sp/>to<sp/>be<sp/>relevant<sp/>for<sp/>threaded<sp/>situations,<sp/>but<sp/>by</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/>*<sp/>trivial<sp/>inspection,<sp/>it<sp/>is<sp/>not<sp/>thread-safe.<sp/>It<sp/>doesn&apos;t<sp/>actually</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/>matter,<sp/>since<sp/>this<sp/>module<sp/>is<sp/>only<sp/>used<sp/>in<sp/>the<sp/>-util<sp/>variant<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/>library,<sp/>which<sp/>is<sp/>only<sp/>used<sp/>in<sp/>single-threaded<sp/>situations.</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal">close_and_invalidate<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fd)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fd<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" kindref="member">_dbus_close_socket</ref><sp/>(*fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="904"><highlight class="normal">make_pipe<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2],</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PIPE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>cloexec_done;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/>pipe2<sp/>(p,<sp/>O_CLOEXEC);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>cloexec_done<sp/>=<sp/>retval<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>kernel<sp/>seems<sp/>to<sp/>be<sp/>too<sp/>old<sp/>to<sp/>know<sp/>pipe2().<sp/>We<sp/>assume</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>that<sp/>if<sp/>pipe2<sp/>is<sp/>available,<sp/>O_CLOEXEC<sp/>is<sp/>too.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>ENOSYS)</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>pipe(p);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gac52e7ce94426443ff385994b539c6c38" kindref="member">DBUS_ERROR_SPAWN_FAILED</ref>,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>pipe<sp/>for<sp/>communicating<sp/>with<sp/>child<sp/>process<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_PIPE2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cloexec_done)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1ga000b1d83b0188e2db82d766b6665bb83" kindref="member">_dbus_fd_set_close_on_exec</ref><sp/>(p[0]);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1ga000b1d83b0188e2db82d766b6665bb83" kindref="member">_dbus_fd_set_close_on_exec</ref><sp/>(p[1]);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">do_write<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)</highlight></codeline>
<codeline lineno="947"><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/>write<sp/>(fd,<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buf)<sp/>+<sp/>bytes_written,<sp/>count<sp/>-<sp/>bytes_written);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>data<sp/>to<sp/>pipe!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1);<sp/></highlight><highlight class="comment">/*<sp/>give<sp/>up,<sp/>we<sp/>suck<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_written<sp/>+=<sp/>ret;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>count)</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal">write_err_and_exit<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg)</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>en<sp/>=<sp/>errno;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/>do_write<sp/>(fd,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(msg));</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>do_write<sp/>(fd,<sp/>&amp;en,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(en));</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal">write_pid<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/>pid_t<sp/>pid)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/>CHILD_PID;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>do_write<sp/>(fd,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(msg));</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>do_write<sp/>(fd,<sp/>&amp;pid,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(pid));</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal">write_status_and_exit<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg<sp/>=<sp/>CHILD_EXITED;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>do_write<sp/>(fd,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(msg));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>do_write<sp/>(fd,<sp/>&amp;status,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(status));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>exit<sp/>(0);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal">do_exec<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_err_report_fd,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**argv,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**envp,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusSpawnChildSetupFunc<sp/><sp/><sp/>child_setup,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*user_data)</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_EMBEDDED_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>max_open;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>_dbus_verbose_reset<sp/>();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Child<sp/>process<sp/>has<sp/>PID<sp/>&quot;</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1gaf4553a43e3b8c0e43d9148a00dcc3fa4" kindref="member">DBUS_PID_FORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid</ref><sp/>());</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child_setup)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>(*<sp/>child_setup)<sp/>(user_data);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_EMBEDDED_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>max_open<sp/>=<sp/>sysconf<sp/>(_SC_OPEN_MAX);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>max_open;<sp/>i++)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>child_err_report_fd)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>fcntl<sp/>(i,<sp/>F_GETFD);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>!(retval<sp/>&amp;<sp/>FD_CLOEXEC))</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Fd<sp/>%d<sp/>did<sp/>not<sp/>have<sp/>the<sp/>close-on-exec<sp/>flag<sp/>set!\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(envp<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(environ<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>envp<sp/>=<sp/>environ;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>execve<sp/>(argv[0],<sp/>argv,<sp/>envp);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exec<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/>write_err_and_exit<sp/>(child_err_report_fd,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHILD_EXEC_FAILED);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal">check_babysit_events<sp/>(pid_t<sp/><ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>parent_pipe,</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>revents)</highlight></codeline>
<codeline lineno="1058"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>pid_t<sp/>ret;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1a6b3aa53fa01507b290bf575f5cc088e3" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>waitpid<sp/>(<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,<sp/>&amp;status,<sp/>WNOHANG);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>man<sp/>page<sp/>says<sp/>EINTR<sp/>can&apos;t<sp/>happen<sp/>with<sp/>WNOHANG,</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>there<sp/>are<sp/>reports<sp/>of<sp/>it<sp/>(maybe<sp/>only<sp/>with<sp/>valgrind?)</highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>child<sp/>exited\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>child<sp/>exited<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>isn&apos;t<sp/>supposed<sp/>to<sp/>happen.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;unexpected<sp/>waitpid()<sp/>failure<sp/>in<sp/>check_babysit_events():<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/><ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Child<sp/>exited<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;reaped<sp/>child<sp/>pid<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>ret);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>write_status_and_exit<sp/>(parent_pipe,<sp/>status);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;waitpid()<sp/>reaped<sp/>pid<sp/>%d<sp/>that<sp/>we&apos;ve<sp/>never<sp/>heard<sp/>of\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>ret);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(revents<sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;babysitter<sp/>got<sp/>POLLIN<sp/>from<sp/>parent<sp/>pipe\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(revents<sp/>&amp;<sp/>(<ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member">_DBUS_POLLERR</ref><sp/>|<sp/><ref refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" kindref="member">_DBUS_POLLHUP</ref>))</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parent<sp/>is<sp/>gone,<sp/>so<sp/>we<sp/>just<sp/>exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;babysitter<sp/>got<sp/>POLLERR<sp/>or<sp/>POLLHUP<sp/>from<sp/>parent\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(0);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>babysit_sigchld_pipe<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal">babysit_signal_handler<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signo)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write<sp/>(babysit_sigchld_pipe,<sp/>&amp;b,<sp/>1)<sp/>&lt;=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal">babysit<sp/>(pid_t<sp/><ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>parent_pipe)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sigchld_pipe[2];</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>exec,<sp/>so<sp/>we<sp/>keep<sp/>parent<sp/>state,<sp/>such<sp/>as<sp/>the<sp/>pid<sp/>that</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/><sp/><sp/>*<sp/>_dbus_verbose()<sp/>uses.<sp/>Reset<sp/>the<sp/>pid<sp/>here.</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/>_dbus_verbose_reset<sp/>();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>thought<sp/>SIGCHLD<sp/>would<sp/>just<sp/>wake<sp/>up<sp/>the<sp/>poll,<sp/>but</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/><sp/><sp/>*<sp/>that<sp/>didn&apos;t<sp/>seem<sp/>to<sp/>work,<sp/>so<sp/>added<sp/>this<sp/>pipe.</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Probably<sp/>the<sp/>pipe<sp/>is<sp/>more<sp/>likely<sp/>to<sp/>work<sp/>on<sp/>busted</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/><sp/><sp/>*<sp/>operating<sp/>systems<sp/>anyhow.</highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pipe<sp/>(sigchld_pipe)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>file<sp/>descriptors<sp/>to<sp/>create<sp/>pipe<sp/>in<sp/>babysitter<sp/>process\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>babysit_sigchld_pipe<sp/>=<sp/>sigchld_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member">WRITE_END</ref>];</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga4aa7500366dad2dd6d3fa97b3aa7165b" kindref="member">_dbus_set_signal_handler</ref><sp/>(SIGCHLD,<sp/>babysit_signal_handler);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>write_pid<sp/>(parent_pipe,<sp/><ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>check_babysit_events<sp/>(<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,<sp/>parent_pipe,<sp/>0);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>pfds[2];</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfds[0].<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref><sp/>=<sp/>parent_pipe;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfds[0].<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfds[0].<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfds[1].<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref><sp/>=<sp/>sigchld_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member">READ_END</ref>];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfds[1].<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pfds[1].<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" kindref="member">_dbus_poll</ref><sp/>(pfds,<sp/><ref refid="group__DBusInternalsUtils_1gac153abad46f4eb80999a2b340d29d1f0" kindref="member">_DBUS_N_ELEMENTS</ref><sp/>(pfds),<sp/>-1)<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>!=<sp/>EINTR)</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;_dbus_poll()<sp/>error:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfds[0].revents<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_babysit_events<sp/>(<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,<sp/>parent_pipe,<sp/>pfds[0].revents);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pfds[1].revents<sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read<sp/>(sigchld_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member">READ_END</ref>],<sp/>&amp;b,<sp/>1)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>waitpid<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_babysit_events<sp/>(<ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>,<sp/>parent_pipe,<sp/>0);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>exit<sp/>(1);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1210" refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" refkind="member"><highlight class="normal"><ref refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" kindref="member">_dbus_spawn_async_with_babysitter</ref><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**sitter_p,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**argv,</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**env,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusSpawnChildSetupFunc<sp/><sp/><sp/>child_setup,</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*user_data,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child_err_report_pipe[2]<sp/>=<sp/>{<sp/>-1,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>babysitter_pipe[2]<sp/>=<sp/>{<sp/>-1,<sp/>-1<sp/>};</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>pid_t<sp/>pid;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd_out<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd_err<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(argv[0]<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>*sitter_p<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>sitter<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>sitter<sp/>=<sp/>_dbus_babysitter_new<sp/>();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref><sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" kindref="member">_dbus_strdup</ref><sp/>(log_name);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>log_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref><sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" kindref="member">_dbus_strdup</ref><sp/>(argv[0]);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!make_pipe<sp/>(child_err_report_pipe,<sp/>error))</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" kindref="member">_dbus_full_duplex_pipe</ref><sp/>(&amp;babysitter_pipe[0],<sp/>&amp;babysitter_pipe[1],<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<sp/>error))</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setting<sp/>up<sp/>the<sp/>babysitter<sp/>is<sp/>only<sp/>useful<sp/>in<sp/>the<sp/>parent,</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/><sp/><sp/>*<sp/>but<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>run<sp/>out<sp/>of<sp/>memory<sp/>and<sp/>fail</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/><sp/><sp/>*<sp/>after<sp/>we&apos;ve<sp/>already<sp/>forked,<sp/>since<sp/>then<sp/>we&apos;d<sp/>leak</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/><sp/><sp/>*<sp/>child<sp/>processes<sp/>everywhere.</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref><sp/>=<sp/><ref refid="group__DBusWatchInternals_1ga1f940e505b20e6429ae858a7b70b0541" kindref="member">_dbus_watch_new</ref><sp/>(child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member">READ_END</ref>],</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>,</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<sp/>handle_watch,<sp/>sitter,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" kindref="member">_dbus_watch_list_add_watch</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>,<sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>))</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>to<sp/>free<sp/>it<sp/>early<sp/>so<sp/>the<sp/>destructor<sp/>won&apos;t<sp/>try<sp/>to<sp/>remove<sp/>it</highlight></codeline>
<codeline lineno="1281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>without<sp/>it<sp/>having<sp/>been<sp/>added,<sp/>which<sp/>DBusLoop<sp/>doesn&apos;t<sp/>allow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" kindref="member">_dbus_watch_invalidate</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1ae89fdf7339b921a19728a2c8abfad251" kindref="member">error_watch</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref><sp/>=<sp/><ref refid="group__DBusWatchInternals_1ga1f940e505b20e6429ae858a7b70b0541" kindref="member">_dbus_watch_new</ref><sp/>(babysitter_pipe[0],</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusConnection_1gga0556779e61aeb19eb9cf6b6466bd1b98a178bd7a88e9bfbb8505db76eb7e0ccc4" kindref="member">DBUS_WATCH_READABLE</ref>,</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<sp/>handle_watch,<sp/>sitter,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusWatchInternals_1gaec61655a4bd6186a6a1ec104771d8af5" kindref="member">_dbus_watch_list_add_watch</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1ae0219a288aa52775dee075b80ab8c170" kindref="member">watches</ref>,<sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>))</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>need<sp/>to<sp/>free<sp/>it<sp/>early<sp/>so<sp/>the<sp/>destructor<sp/>won&apos;t<sp/>try<sp/>to<sp/>remove<sp/>it</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>without<sp/>it<sp/>having<sp/>been<sp/>added,<sp/>which<sp/>DBusLoop<sp/>doesn&apos;t<sp/>allow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1gad8521d64123c1d1ae9a094bac8addd31" kindref="member">_dbus_watch_invalidate</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusWatchInternals_1ga7d27dfc13a3ccfbaa99ceab331bb46f0" kindref="member">_dbus_watch_unref</ref><sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref>);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a1f01b1d3775f4b3437a01117cf8ddfcb" kindref="member">sitter_watch</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>may<sp/>fail,<sp/>but<sp/>it&apos;s<sp/>not<sp/>critical.</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/>*<sp/>In<sp/>particular,<sp/>if<sp/>we<sp/>were<sp/>compiled<sp/>with<sp/>journald<sp/>support<sp/>but<sp/>are<sp/>now</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/><sp/><sp/>*<sp/>running<sp/>on<sp/>a<sp/>non-systemd<sp/>system,<sp/>this<sp/>is<sp/>going<sp/>to<sp/>fail,<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/>*<sp/>have<sp/>to<sp/>cope<sp/>gracefully.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>fd_out<sp/>=<sp/>sd_journal_stream_fd<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,<sp/>LOG_INFO,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>fd_err<sp/>=<sp/>sd_journal_stream_fd<sp/>(sitter-&gt;<ref refid="structDBusBabysitter_1aa5f57474dbc3603fd888430496769778" kindref="member">log_name</ref>,<sp/>LOG_WARNING,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>pid<sp/>=<sp/>fork<sp/>();</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gafe69e1ac207a66cc86d2880fd3ca62af" kindref="member">DBUS_ERROR_SPAWN_FORK_FAILED</ref>,</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>fork<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_strerror<sp/>(errno));</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>cleanup_and_fail;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Immediate<sp/>child,<sp/>this<sp/>is<sp/>the<sp/>babysitter<sp/>process.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structDBusBabysitter_1af0f5b85d39a7d2957ae83b3c594b88af" kindref="member">grandchild_pid</ref>;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Be<sp/>sure<sp/>we<sp/>crash<sp/>if<sp/>the<sp/>parent<sp/>exits</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>we<sp/>write<sp/>to<sp/>the<sp/>err_report_pipe</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>signal<sp/>(SIGPIPE,<sp/>SIG_DFL);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>parent&apos;s<sp/>end<sp/>of<sp/>the<sp/>pipes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;child_err_report_pipe[READ_END]);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;babysitter_pipe[0]);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>the<sp/>child<sp/>that<sp/>will<sp/>exec<sp/>()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grandchild_pid<sp/>=<sp/>fork<sp/>();</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grandchild_pid<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_err_and_exit<sp/>(babysitter_pipe[1],</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHILD_FORK_FAILED);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Got<sp/>to<sp/>code<sp/>after<sp/>write_err_and_exit()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grandchild_pid<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Go<sp/>back<sp/>to<sp/>ignoring<sp/>SIGPIPE,<sp/>since<sp/>it&apos;s<sp/>evil</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signal<sp/>(SIGPIPE,<sp/>SIG_IGN);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;babysitter_pipe[1]);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>log<sp/>to<sp/>systemd<sp/>journal<sp/>if<sp/>possible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd_out<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2<sp/>(fd_out,<sp/>STDOUT_FILENO);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd_err<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup2<sp/>(fd_err,<sp/>STDERR_FILENO);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_out);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_err);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_exec<sp/>(child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member">WRITE_END</ref>],</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_setup,<sp/>user_data);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Got<sp/>to<sp/>code<sp/>after<sp/>exec()<sp/>-<sp/>should<sp/>have<sp/>exited<sp/>on<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member">WRITE_END</ref>]);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_out);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_err);</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>babysit<sp/>(grandchild_pid,<sp/>babysitter_pipe[1]);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Got<sp/>to<sp/>code<sp/>after<sp/>babysit()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>the<sp/>uncared-about<sp/>ends<sp/>of<sp/>the<sp/>pipes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member">WRITE_END</ref>]);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;babysitter_pipe[1]);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_out);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_err);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1a9b5fa1cf7463e6e88308b85788e232a1" kindref="member">socket_to_babysitter</ref><sp/>=<sp/>babysitter_pipe[0];</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>babysitter_pipe[0]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1abc42ea27fa4ee1e4f04819364e0a9bde" kindref="member">error_pipe_from_child</ref><sp/>=<sp/>child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member">READ_END</ref>];</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" kindref="member">READ_END</ref>]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sitter-&gt;<ref refid="structDBusBabysitter_1aa783f733db30b4587f08ee906612fa6c" kindref="member">sitter_pid</ref><sp/>=<sp/>pid;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sitter_p<sp/>=<sp/>sitter;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" kindref="member">dbus_free_string_array</ref><sp/>(env);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/>cleanup_and_fail:</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>close_and_invalidate<sp/>(&amp;child_err_report_pipe[READ_END]);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/>close_and_invalidate<sp/>(&amp;child_err_report_pipe[<ref refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" kindref="member">WRITE_END</ref>]);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/>close_and_invalidate<sp/>(&amp;babysitter_pipe[0]);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>close_and_invalidate<sp/>(&amp;babysitter_pipe[1]);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_SYSTEMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_out);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>close_and_invalidate<sp/>(&amp;fd_err);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal">_dbus_babysitter_set_result_function<sp/><sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sitter,</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBusBabysitterFinishedFunc<sp/><sp/>finished,</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*user_data)</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>sitter-&gt;finished_cb<sp/>=<sp/>finished;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/>sitter-&gt;finished_data<sp/>=<sp/>user_data;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_EMBEDDED_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">get_test_exec<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*exe,</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*scratch_space)</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dbus_test_exec;</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/>dbus_test_exec<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DBUS_TEST_EXEC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbus_test_exec<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>dbus_test_exec<sp/>=<sp/>DBUS_TEST_EXEC;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(scratch_space))</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gab0078cf7e0e5bd784ec6d6e0cc3923a2" kindref="member">_dbus_string_append_printf</ref><sp/>(scratch_space,<sp/></highlight><highlight class="stringliteral">&quot;%s/%s%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_test_exec,<sp/>exe,<sp/>DBUS_EXEEXT))</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(scratch_space);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_string_get_data<sp/>(scratch_space);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal">_dbus_babysitter_block_for_child_exit<sp/>(<ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaf3ce8172242a1766bdd5cfe4b0a05d1f" kindref="member">LIVE_CHILDREN</ref><sp/>(sitter))</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>babysitter_iteration<sp/>(sitter,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1482"><highlight class="normal">check_spawn_nonexistent<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[4]<sp/>=<sp/>{<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error<sp/>=<sp/><ref refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" kindref="member">DBUS_ERROR_INIT</ref>;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>Test<sp/>launching<sp/>nonexistent<sp/>binary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>argv[0]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/this/does/not/exist/32542sdgafgafdg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" kindref="member">_dbus_spawn_async_with_babysitter</ref><sp/>(&amp;sitter,<sp/></highlight><highlight class="stringliteral">&quot;spawn_nonexistent&quot;</highlight><highlight class="normal">,<sp/>argv,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error))</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_babysitter_block_for_child_exit<sp/>(sitter);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" kindref="member">_dbus_babysitter_set_child_exit_error</ref><sp/>(sitter,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" kindref="member">dbus_error_is_set</ref><sp/>(&amp;error))</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>get<sp/>an<sp/>error<sp/>launching<sp/>nonexistent<sp/>executable\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" kindref="member">DBUS_ERROR_SPAWN_EXEC_FAILED</ref>)))</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>expecting<sp/>error<sp/>when<sp/>launching<sp/>nonexistent<sp/>executable:<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.<ref refid="structDBusError_1a09a9614ff07fdf3ef163b232ff934581" kindref="member">name</ref>,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1523"><highlight class="normal">check_spawn_segfault<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[4]<sp/>=<sp/>{<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error<sp/>=<sp/><ref refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" kindref="member">DBUS_ERROR_INIT</ref>;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>argv0;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>Test<sp/>launching<sp/>segfault<sp/>binary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>argv[0]<sp/>=<sp/>get_test_exec<sp/>(</highlight><highlight class="stringliteral">&quot;test-segfault&quot;</highlight><highlight class="normal">,<sp/>&amp;argv0);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[0]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OOM<sp/>was<sp/>simulated,<sp/>never<sp/>mind<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" kindref="member">_dbus_spawn_async_with_babysitter</ref><sp/>(&amp;sitter,<sp/></highlight><highlight class="stringliteral">&quot;spawn_segfault&quot;</highlight><highlight class="normal">,<sp/>argv,</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error))</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_babysitter_block_for_child_exit<sp/>(sitter);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" kindref="member">_dbus_babysitter_set_child_exit_error</ref><sp/>(sitter,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;argv0);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter)</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" kindref="member">dbus_error_is_set</ref><sp/>(&amp;error))</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>get<sp/>an<sp/>error<sp/>launching<sp/>segfaulting<sp/>binary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1ga8404cd7fd5f0d62a63e26783bdf572ae" kindref="member">DBUS_ERROR_SPAWN_CHILD_SIGNALED</ref>)))</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>expecting<sp/>error<sp/>when<sp/>launching<sp/>segfaulting<sp/>executable:<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.<ref refid="structDBusError_1a09a9614ff07fdf3ef163b232ff934581" kindref="member">name</ref>,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1574"><highlight class="normal">check_spawn_exit<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[4]<sp/>=<sp/>{<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error<sp/>=<sp/><ref refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" kindref="member">DBUS_ERROR_INIT</ref>;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>argv0;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>Test<sp/>launching<sp/>exit<sp/>failure<sp/>binary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>argv[0]<sp/>=<sp/>get_test_exec<sp/>(</highlight><highlight class="stringliteral">&quot;test-exit&quot;</highlight><highlight class="normal">,<sp/>&amp;argv0);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[0]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OOM<sp/>was<sp/>simulated,<sp/>never<sp/>mind<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" kindref="member">_dbus_spawn_async_with_babysitter</ref><sp/>(&amp;sitter,<sp/></highlight><highlight class="stringliteral">&quot;spawn_exit&quot;</highlight><highlight class="normal">,<sp/>argv,</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error))</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_babysitter_block_for_child_exit<sp/>(sitter);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" kindref="member">_dbus_babysitter_set_child_exit_error</ref><sp/>(sitter,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;argv0);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" kindref="member">dbus_error_is_set</ref><sp/>(&amp;error))</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>get<sp/>an<sp/>error<sp/>launching<sp/>binary<sp/>that<sp/>exited<sp/>with<sp/>failure<sp/>code\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1ga6cd00ac22b189360a7f0ce2f2b97975b" kindref="member">DBUS_ERROR_SPAWN_CHILD_EXITED</ref>)))</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>expecting<sp/>error<sp/>when<sp/>launching<sp/>exiting<sp/>executable:<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.<ref refid="structDBusError_1a09a9614ff07fdf3ef163b232ff934581" kindref="member">name</ref>,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1625"><highlight class="normal">check_spawn_and_kill<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[4]<sp/>=<sp/>{<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>NULL<sp/>};</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><ref refid="structDBusBabysitter" kindref="compound">DBusBabysitter</ref><sp/>*sitter<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error<sp/>=<sp/><ref refid="group__DBusErrorInternals_1ga961cc70e3891282a65205c4c8418d88e" kindref="member">DBUS_ERROR_INIT</ref>;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>argv0;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/***<sp/>Test<sp/>launching<sp/>sleeping<sp/>binary<sp/>then<sp/>killing<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/>argv[0]<sp/>=<sp/>get_test_exec<sp/>(</highlight><highlight class="stringliteral">&quot;test-sleep-forever&quot;</highlight><highlight class="normal">,<sp/>&amp;argv0);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[0]<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OOM<sp/>was<sp/>simulated,<sp/>never<sp/>mind<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusInternalsUtils_1gaed0b5af565252185dedf99df5da8efc5" kindref="member">_dbus_spawn_async_with_babysitter</ref><sp/>(&amp;sitter,<sp/></highlight><highlight class="stringliteral">&quot;spawn_and_kill&quot;</highlight><highlight class="normal">,<sp/>argv,</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>NULL,</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error))</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gacdc9c49735d6ce8364647c1961aa8d2b" kindref="member">_dbus_babysitter_kill_child</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_babysitter_block_for_child_exit<sp/>(sitter);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga9c6f92a67e41f08d8eb254e294fd0378" kindref="member">_dbus_babysitter_set_child_exit_error</ref><sp/>(sitter,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;argv0);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sitter)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga3205e9f8672271794aeb9d451e2fcc4a" kindref="member">_dbus_babysitter_unref</ref><sp/>(sitter);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusErrors_1gab0ed62e9fc2685897eb2d41467c89405" kindref="member">dbus_error_is_set</ref><sp/>(&amp;error))</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Did<sp/>not<sp/>get<sp/>an<sp/>error<sp/>after<sp/>killing<sp/>spawned<sp/>binary\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga48515c580199514026542fe053ef1887" kindref="member">dbus_error_has_name</ref><sp/>(&amp;error,<sp/><ref refid="group__DBusProtocol_1ga8404cd7fd5f0d62a63e26783bdf572ae" kindref="member">DBUS_ERROR_SPAWN_CHILD_SIGNALED</ref>)))</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>expecting<sp/>error<sp/>when<sp/>killing<sp/>executable:<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.<ref refid="structDBusError_1a09a9614ff07fdf3ef163b232ff934581" kindref="member">name</ref>,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1679"><highlight class="normal">_dbus_spawn_test<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_data_dir)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_test_oom_handling<sp/>(</highlight><highlight class="stringliteral">&quot;spawn_nonexistent&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_spawn_nonexistent,</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_test_oom_handling<sp/>(</highlight><highlight class="stringliteral">&quot;spawn_segfault&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_spawn_segfault,</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_test_oom_handling<sp/>(</highlight><highlight class="stringliteral">&quot;spawn_exit&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_spawn_exit,</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_test_oom_handling<sp/>(</highlight><highlight class="stringliteral">&quot;spawn_and_kill&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_spawn_and_kill,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-spawn.c"/>
  </compounddef>
</doxygen>
