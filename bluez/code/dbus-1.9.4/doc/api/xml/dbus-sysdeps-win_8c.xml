<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-sysdeps-win_8c" kind="file" language="C++">
    <compoundname>dbus-sysdeps-win.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-sha_8h" local="yes">dbus-sha.h</includes>
    <includes refid="dbus-sysdeps_8h" local="yes">dbus-sysdeps.h</includes>
    <includes refid="dbus-threads_8h" local="yes">dbus-threads.h</includes>
    <includes refid="dbus-protocol_8h" local="yes">dbus-protocol.h</includes>
    <includes refid="dbus-string_8h" local="yes">dbus-string.h</includes>
    <includes refid="dbus-sysdeps-win_8h" local="yes">dbus-sysdeps-win.h</includes>
    <includes refid="dbus-hash_8h" local="yes">dbus-hash.h</includes>
    <includes refid="dbus-sockets-win_8h" local="yes">dbus-sockets-win.h</includes>
    <includes refid="dbus-list_8h" local="yes">dbus-list.h</includes>
    <includes refid="dbus-nonce_8h" local="yes">dbus-nonce.h</includes>
    <includes refid="dbus-credentials_8h" local="yes">dbus-credentials.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">ws2tcpip.h</includes>
    <includes local="no">wincrypt.h</includes>
    <includes local="no">iphlpapi.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">mbstring.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">winver.h</includes>
    <includes local="no">imagehlp.h</includes>
    <incdepgraph>
      <node id="3938">
        <label>sys/stat.h</label>
      </node>
      <node id="3912">
        <label>stdarg.h</label>
      </node>
      <node id="3925">
        <label>sys/un.h</label>
      </node>
      <node id="3926">
        <label>netinet/in.h</label>
      </node>
      <node id="3929">
        <label>dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="3899" relation="include">
        </childnode>
        <childnode refid="3900" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
      </node>
      <node id="3922">
        <label>windows.h</label>
      </node>
      <node id="3906">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="3941">
        <label>imagehlp.h</label>
      </node>
      <node id="3932">
        <label>ws2tcpip.h</label>
      </node>
      <node id="3901">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="3908">
        <label>stdint.h</label>
      </node>
      <node id="3936">
        <label>stdlib.h</label>
      </node>
      <node id="3914">
        <label>sys/poll.h</label>
      </node>
      <node id="3931">
        <label>dbus-credentials.h</label>
        <link refid="dbus-credentials_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3905" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
      </node>
      <node id="3928">
        <label>errno.h</label>
      </node>
      <node id="3921">
        <label>malloc.h</label>
      </node>
      <node id="3907">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="3898" relation="include">
        </childnode>
        <childnode refid="3908" relation="include">
        </childnode>
        <childnode refid="3909" relation="include">
        </childnode>
        <childnode refid="3905" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3913" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
      </node>
      <node id="3899">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="3900" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3905" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
      </node>
      <node id="3902">
        <label>stddef.h</label>
      </node>
      <node id="3927">
        <label>netdb.h</label>
      </node>
      <node id="3934">
        <label>iphlpapi.h</label>
      </node>
      <node id="3911">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3900" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
      </node>
      <node id="3940">
        <label>winver.h</label>
      </node>
      <node id="3904">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
      </node>
      <node id="3937">
        <label>mbstring.h</label>
      </node>
      <node id="3939">
        <label>sys/types.h</label>
      </node>
      <node id="3913">
        <label>string.h</label>
      </node>
      <node id="3916">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
      </node>
      <node id="3919">
        <label>dbus-hash.h</label>
        <link refid="dbus-hash_8h_source"/>
        <childnode refid="3900" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
      </node>
      <node id="3930">
        <label>dbus-nonce.h</label>
        <link refid="dbus-nonce_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3905" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
      </node>
      <node id="3923">
        <label>dbus-sockets-win.h</label>
        <link refid="dbus-sockets-win_8h_source"/>
        <childnode refid="3924" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
      </node>
      <node id="3917">
        <label>dbus-sha.h</label>
        <link refid="dbus-sha_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3905" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
      </node>
      <node id="3920">
        <label>ctype.h</label>
      </node>
      <node id="3915">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
      </node>
      <node id="3924">
        <label>sys/socket.h</label>
      </node>
      <node id="3933">
        <label>wincrypt.h</label>
      </node>
      <node id="3898">
        <label>config.h</label>
      </node>
      <node id="3897">
        <label>dbus-sysdeps-win.c</label>
        <link refid="dbus-sysdeps-win.c"/>
        <childnode refid="3898" relation="include">
        </childnode>
        <childnode refid="3899" relation="include">
        </childnode>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3906" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
        <childnode refid="3929" relation="include">
        </childnode>
        <childnode refid="3930" relation="include">
        </childnode>
        <childnode refid="3931" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
        <childnode refid="3932" relation="include">
        </childnode>
        <childnode refid="3933" relation="include">
        </childnode>
        <childnode refid="3934" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
        <childnode refid="3936" relation="include">
        </childnode>
        <childnode refid="3913" relation="include">
        </childnode>
        <childnode refid="3937" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
        <childnode refid="3939" relation="include">
        </childnode>
        <childnode refid="3940" relation="include">
        </childnode>
        <childnode refid="3941" relation="include">
        </childnode>
      </node>
      <node id="3918">
        <label>dbus-sysdeps-win.h</label>
        <link refid="dbus-sysdeps-win_8h_source"/>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
      </node>
      <node id="3935">
        <label>stdio.h</label>
      </node>
      <node id="3910">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3905" relation="include">
        </childnode>
      </node>
      <node id="3905">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3903" relation="include">
        </childnode>
        <childnode refid="3906" relation="include">
        </childnode>
      </node>
      <node id="3903">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="3902" relation="include">
        </childnode>
        <childnode refid="3904" relation="include">
        </childnode>
      </node>
      <node id="3909">
        <label>inttypes.h</label>
      </node>
      <node id="3900">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="3901" relation="include">
        </childnode>
        <childnode refid="3902" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a5b4be2e11df1cace0bb90eb67a0a57d3" prot="public" static="no">
        <name>STRSAFE_NO_DEPRECATE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="31" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1ac50762666aa00bd3a4308158510f1748" prot="public" static="no">
        <name>_WIN32_WINNT</name>
        <initializer>0x0501</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="35" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a36fa9b2e726512bc17a7a6d3e39002be" prot="public" static="no">
        <name>O_BINARY</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="82" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1acf97307b8ba70524591ae483439f1678" prot="public" static="no">
        <name>PROCESS_QUERY_LIMITED_INFORMATION</name>
        <initializer>(0x1000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="87" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1ab63d74284a73e2b7cd368ef1abde16fe" prot="public" static="no">
        <name>USE_CHRIS_IMPL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1173" column="9"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a137a97b62501889894fbe3ce2edbcf35" prot="public" static="no">
        <name>DBUS_POLL_CHAR_BUFFER_SIZE</name>
        <initializer>2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1317" column="9"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a5df38c677104658963501aa1e2a88e60" prot="public" static="no">
        <name>NANOSECONDS_PER_SECOND</name>
        <initializer>1000000000</initializer>
        <briefdescription>
<para>nanoseconds in a second </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2128" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a8a708413d6171e7d86056793abe2cd1a" prot="public" static="no">
        <name>MICROSECONDS_PER_SECOND</name>
        <initializer>1000000</initializer>
        <briefdescription>
<para>microseconds in a second </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2130" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1afc22ab01ad31ee9dfebcfcb61faaa63a" prot="public" static="no">
        <name>MILLISECONDS_PER_SECOND</name>
        <initializer>1000</initializer>
        <briefdescription>
<para>milliseconds in a second </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2132" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a969e0c6129a50134006fe4b380965cb2" prot="public" static="no">
        <name>NANOSECONDS_PER_MILLISECOND</name>
        <initializer>1000000</initializer>
        <briefdescription>
<para>nanoseconds in a millisecond </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2134" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1accdb221fb01839e3045fa54993ede027" prot="public" static="no">
        <name>MICROSECONDS_PER_MILLISECOND</name>
        <initializer>1000</initializer>
        <briefdescription>
<para>microseconds in a millisecond </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2136" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1ac9263a9b2faaa9f85434f70f9e4b136d" prot="public" static="no">
        <name>BACKTRACES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2354" column="11" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1ab2759269c92e6d05675a698378dac492" prot="public" static="no">
        <name>DPRINTF</name>
        <initializer><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2383" column="9" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1ad60e8ac79b1b33c0d3baac32e8de427d" prot="public" static="no">
        <name>FUNC</name>
        <param><defname>x</defname></param>
        <initializer>#x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2470" column="9"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-win_8c_1a5f4bb236cc673c5d23ebaed8e483c608" prot="public" static="no">
        <name>KEYRING_DIR</name>
        <initializer>&quot;.dbus-keyrings&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3456" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dbus-sysdeps-win_8c_1a6b82106923cc13b3a9734520ecc29514" prot="public" static="no">
        <type>int</type>
        <definition>typedef int socklen_t</definition>
        <argsstring></argsstring>
        <name>socklen_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="90" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbus-sysdeps-win_8c_1a3c2b629ef0d0c15ffdf31236a3c601b5" prot="public" static="no">
        <type>MIB_TCPROW_OWNER_PID</type>
        <definition>typedef MIB_TCPROW_OWNER_PID _MIB_TCPROW_EX</definition>
        <argsstring></argsstring>
        <name>_MIB_TCPROW_EX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="109" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbus-sysdeps-win_8c_1aa0593c57df8a6fb74b8607cd4149169f" prot="public" static="no">
        <type>MIB_TCPTABLE_OWNER_PID</type>
        <definition>typedef MIB_TCPTABLE_OWNER_PID MIB_TCPTABLE_EX</definition>
        <argsstring></argsstring>
        <name>MIB_TCPTABLE_EX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="110" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbus-sysdeps-win_8c_1af1f9c73876c49d2f26cac1119f9af983" prot="public" static="no">
        <type>PMIB_TCPTABLE_OWNER_PID</type>
        <definition>typedef PMIB_TCPTABLE_OWNER_PID PMIB_TCPTABLE_EX</definition>
        <argsstring></argsstring>
        <name>PMIB_TCPTABLE_EX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="111" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbus-sysdeps-win_8c_1af75798fbc7fd3e2f0a2c18f9b7513c9b" prot="public" static="no">
        <type>DWORD(WINAPI *</type>
        <definition>typedef DWORD(WINAPI * ProcAllocateAndGetTcpExtTableFromStack) (PMIB_TCPTABLE_EX *, BOOL, HANDLE, DWORD, DWORD)</definition>
        <argsstring>)(PMIB_TCPTABLE_EX *, BOOL, HANDLE, DWORD, DWORD)</argsstring>
        <name>ProcAllocateAndGetTcpExtTableFromStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="112" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a9f5e985c4ff59617f2e6fce18078717f" prot="public" static="yes" mutable="no">
        <type>ProcAllocateAndGetTcpExtTableFromStack</type>
        <definition>ProcAllocateAndGetTcpExtTableFromStack lpfnAllocateAndGetTcpExTableFromStack</definition>
        <argsstring></argsstring>
        <name>lpfnAllocateAndGetTcpExTableFromStack</name>
        <initializer>= <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="113" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1aa3b10793a01a95be6cc327e4930ca85b" prot="public" static="no" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE hProcess</definition>
        <argsstring></argsstring>
        <name>hProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2401" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1aa224c0abba400fd436b9544af27492e7" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE</type>
        <definition>HANDLE HANDLE hThread</definition>
        <argsstring></argsstring>
        <name>hThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2402" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1abc2fe02a26fba48a5051adde6c9b5f3f" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE LPSTACKFRAME</type>
        <definition>HANDLE HANDLE LPSTACKFRAME StackFrame</definition>
        <argsstring></argsstring>
        <name>StackFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2403" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1af6ed8bc890602080fc87b46f668e7db0" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE LPSTACKFRAME PVOID</type>
        <definition>HANDLE HANDLE LPSTACKFRAME PVOID ContextRecord</definition>
        <argsstring></argsstring>
        <name>ContextRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2404" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1ac172da98840a2e77dbbb496eab2be87a" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE</type>
        <definition>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE ReadMemoryRoutine</definition>
        <argsstring></argsstring>
        <name>ReadMemoryRoutine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2405" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a1a54df26e5e2efcff338a5d693813c46" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE PFUNCTION_TABLE_ACCESS_ROUTINE</type>
        <definition>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE PFUNCTION_TABLE_ACCESS_ROUTINE FunctionTableAccessRoutine</definition>
        <argsstring></argsstring>
        <name>FunctionTableAccessRoutine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2406" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1af400109eab5e455cf750a213303d482d" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE PFUNCTION_TABLE_ACCESS_ROUTINE PGET_MODULE_BASE_ROUTINE</type>
        <definition>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE PFUNCTION_TABLE_ACCESS_ROUTINE PGET_MODULE_BASE_ROUTINE GetModuleBaseRoutine</definition>
        <argsstring></argsstring>
        <name>GetModuleBaseRoutine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2407" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1ae91959499ea5db0fafbad3f6740217dd" prot="public" static="no" mutable="no">
        <type>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE PFUNCTION_TABLE_ACCESS_ROUTINE PGET_MODULE_BASE_ROUTINE PTRANSLATE_ADDRESS_ROUTINE</type>
        <definition>HANDLE HANDLE LPSTACKFRAME PVOID PREAD_PROCESS_MEMORY_ROUTINE PFUNCTION_TABLE_ACCESS_ROUTINE PGET_MODULE_BASE_ROUTINE PTRANSLATE_ADDRESS_ROUTINE TranslateAddress</definition>
        <argsstring></argsstring>
        <name>TranslateAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2408" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1ae27a33437e53da1305a3d9c1c0694a55" prot="public" static="no" mutable="no">
        <type>DWORD</type>
        <definition>static DWORD dwAddr</definition>
        <argsstring></argsstring>
        <name>dwAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2422" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1aad35c4acecf18aa130423b1de62755df" prot="public" static="no" mutable="no">
        <type>DWORD</type>
        <definition>DWORD AddrBase</definition>
        <argsstring></argsstring>
        <name>AddrBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2426" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a8761cb21f1ef2f0ce92c6f919e2c5404" prot="public" static="no" mutable="no">
        <type>PSTR</type>
        <definition>PSTR UserSearchPath</definition>
        <argsstring></argsstring>
        <name>UserSearchPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2431" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a7e7b74d25c0163eb97ebe2e23b9996b1" prot="public" static="no" mutable="no">
        <type>PSTR BOOL</type>
        <definition>PSTR BOOL fInvadeProcess</definition>
        <argsstring></argsstring>
        <name>fInvadeProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2432" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a788e79ef337fb430ac6cdaec78e059da" prot="public" static="no" mutable="no">
        <type>DWORD</type>
        <definition>DWORD Address</definition>
        <argsstring></argsstring>
        <name>Address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2436" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a90a4b4277be25f3f4d93761e0870d25b" prot="public" static="no" mutable="no">
        <type>DWORD PDWORD</type>
        <definition>DWORD PDWORD Displacement</definition>
        <argsstring></argsstring>
        <name>Displacement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2437" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1aaa6b6b24c164adc49cd342f59f0e53d0" prot="public" static="no" mutable="no">
        <type>DWORD PDWORD PIMAGEHLP_SYMBOL</type>
        <definition>DWORD PDWORD PIMAGEHLP_SYMBOL Symbol</definition>
        <argsstring></argsstring>
        <name>Symbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2438" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1afca8efe70a396976d53958815cb037c8" prot="public" static="no" mutable="no">
        <type>DWORD PIMAGEHLP_MODULE</type>
        <definition>DWORD PIMAGEHLP_MODULE ModuleInfo</definition>
        <argsstring></argsstring>
        <name>ModuleInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2443" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a33a5a467bf2930fc65dfb16aa1ef2d5b" prot="public" static="yes" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE hDBusDaemonMutex</definition>
        <argsstring></argsstring>
        <name>hDBusDaemonMutex</name>
        <initializer>= <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2776" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a8e8847d58b8af6dd0d1350b5e14b2b1c" prot="public" static="yes" mutable="no">
        <type>HANDLE</type>
        <definition>HANDLE hDBusSharedMem</definition>
        <argsstring></argsstring>
        <name>hDBusSharedMem</name>
        <initializer>= <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2777" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a2a8e3e51f5ebb16d4b5a31914a76b0ab" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* cUniqueDBusInitMutex</definition>
        <argsstring></argsstring>
        <name>cUniqueDBusInitMutex</name>
        <initializer>= &quot;UniqueDBusInitMutex&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2779" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a48318a1acc43db553084c97cca82726c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* cDBusAutolaunchMutex</definition>
        <argsstring></argsstring>
        <name>cDBusAutolaunchMutex</name>
        <initializer>= &quot;DBusAutolaunchMutex&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2781" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a8c89015e13279c5e40fef624c47d41c1" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* cDBusDaemonMutex</definition>
        <argsstring></argsstring>
        <name>cDBusDaemonMutex</name>
        <initializer>= &quot;DBusDaemonMutex&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2783" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dbus-sysdeps-win_8c_1a12d9bfc5d3b6a1471f936bde02915801" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* cDBusDaemonAddressInfo</definition>
        <argsstring></argsstring>
        <name>cDBusDaemonAddressInfo</name>
        <initializer>= &quot;DBusDaemonAddressInfo&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2785" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2785" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a3e5a82278e652685dcd1f9fa1fd59f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL WINAPI</type>
        <definition>BOOL WINAPI ConvertStringSidToSidA</definition>
        <argsstring>(LPCSTR StringSid, PSID *Sid)</argsstring>
        <name>ConvertStringSidToSidA</name>
        <param>
          <type>LPCSTR</type>
          <declname>StringSid</declname>
        </param>
        <param>
          <type>PSID *</type>
          <declname>Sid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1aae957d5876f6cead6de5f8e325090398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL WINAPI</type>
        <definition>BOOL WINAPI ConvertSidToStringSidA</definition>
        <argsstring>(PSID Sid, LPSTR *StringSid)</argsstring>
        <name>ConvertSidToStringSidA</name>
        <param>
          <type>PSID</type>
          <declname>Sid</declname>
        </param>
        <param>
          <type>LPSTR *</type>
          <declname>StringSid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a8ef1fd384c98a6efe79d16517654c8e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_win_set_errno</definition>
        <argsstring>(int err)</argsstring>
        <name>_dbus_win_set_errno</name>
        <param>
          <type>int</type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="94" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a67f3441941f2d8813a1a9fd2ff639a4f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>static BOOL is_winxp_sp3_or_lower</definition>
        <argsstring>()</argsstring>
        <name>is_winxp_sp3_or_lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="103" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="951" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a1e70cf16495b8d0985d020cc1a176409" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>static BOOL load_ex_ip_helper_procedures</definition>
        <argsstring>(void)</argsstring>
        <name>load_ex_ip_helper_procedures</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>AllocateAndGetTcpExTableFromStack() is undocumented and not exported, but is the only way to do this in older XP versions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the procedures could be loaded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="121" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="121" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a75790f0a5ba300a539e1db97344f1b98" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></type>
        <definition>static dbus_pid_t get_pid_from_extended_tcp_table</definition>
        <argsstring>(int peer_port)</argsstring>
        <name>get_pid_from_extended_tcp_table</name>
        <param>
          <type>int</type>
          <declname>peer_port</declname>
        </param>
        <briefdescription>
<para>get pid from localhost tcp connection using peer_port This function is available on WinXP &gt;= SP3 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>peer_port</parametername>
</parameternamelist>
<parameterdescription>
<para>peers tcp port </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>process id or 0 if connection has not been found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="146" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="146" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1acde228a9292bbc5f6a6ccfba3fb041dc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></type>
        <definition>static dbus_pid_t get_pid_from_tcp_ex_table</definition>
        <argsstring>(int peer_port)</argsstring>
        <name>get_pid_from_tcp_ex_table</name>
        <param>
          <type>int</type>
          <declname>peer_port</declname>
        </param>
        <briefdescription>
<para>get pid from localhost tcp connection using peer_port This function is available on all WinXP versions, but not in wine (at least version &lt;= 1.6.0) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>peer_port</parametername>
</parameternamelist>
<parameterdescription>
<para>peers tcp port </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>process id or 0 if connection has not been found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="199" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="199" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a752037fe9c6792d30e81ab0828d1fbc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></type>
        <definition>static dbus_pid_t _dbus_get_peer_pid_from_tcp_handle</definition>
        <argsstring>(int handle)</argsstring>
        <name>_dbus_get_peer_pid_from_tcp_handle</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>return peer process id from tcp handle for localhost connections </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>tcp socket descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>process id or 0 in case the process id could not be fetched </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="245" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="245" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a892c4e4b8d22ff6889ae8110b0c5c599" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_win_error_from_last_error</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_win_error_from_last_error</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="303" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="303" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a9d9742ac5c1dcc30544b8d079c75d00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* _dbus_win_error_string</definition>
        <argsstring>(int error_number)</argsstring>
        <name>_dbus_win_error_string</name>
        <param>
          <type>int</type>
          <declname>error_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="334" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="334" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a11f94a2ee9846b087b51ce3d7d4c6d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_win_free_error_string</definition>
        <argsstring>(char *string)</argsstring>
        <name>_dbus_win_free_error_string</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="353" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_read_socket</definition>
        <argsstring>(int fd, DBusString *buffer, int count)</argsstring>
        <name>_dbus_read_socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Socket interface. </para>        </briefdescription>
        <detaileddescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" kindref="member">_dbus_read()</ref>, but only works on sockets so is available on Windows.</para><para>Thin wrapper around the read() system call that appends the data it reads to the <ref refid="structDBusString" kindref="compound">DBusString</ref> buffer. It appends up to the given count, and returns the same value and same errno as read(). The only exception is that <ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member">_dbus_read_socket()</ref> handles EINTR for you. <ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member">_dbus_read_socket()</ref> can return ENOMEM, even though regular UNIX read doesn&apos;t.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to append data to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of data to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes read or -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="379" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="379" bodyend="436"/>
        <references refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" compoundref="dbus-sysdeps-unix_8c" startline="628" endline="675">_dbus_read</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" compoundref="dbus-string_8c" startline="760" endline="771">_dbus_string_lengthen</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</references>
        <referencedby refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" compoundref="dbus-sysdeps-win_8c" startline="1936" endline="1977">_dbus_read_credentials_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_socket</definition>
        <argsstring>(int fd, const DBusString *buffer, int start, int len)</argsstring>
        <name>_dbus_write_socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Thin wrapper around the write() system call that writes a part of a <ref refid="structDBusString" kindref="compound">DBusString</ref> and handles EINTR for you. </para>        </briefdescription>
        <detaileddescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member">_dbus_write()</ref>, but only supports sockets and is thus available on Windows.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer to write data from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>the first byte in the buffer to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bytes to try to write </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="449" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="449" bodyend="482"/>
        <references refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" compoundref="dbus-sysdeps-unix_8c" startline="688" endline="711">_dbus_write</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</references>
        <referencedby refid="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" compoundref="dbus-sysdeps-win_8c" startline="1859" endline="1915">_dbus_send_credentials_socket</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_close_socket</definition>
        <argsstring>(int fd, DBusError *error)</argsstring>
        <name>_dbus_close_socket</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Closes a file descriptor. </para>        </briefdescription>
        <detaileddescription>
<para>Socket interface.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="493" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="493" bodyend="514"/>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a0f02a393892d0c91a40bffb00b61513f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_win_handle_set_close_on_exec</definition>
        <argsstring>(HANDLE handle)</argsstring>
        <name>_dbus_win_handle_set_close_on_exec</name>
        <param>
          <type>HANDLE</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Sets the file descriptor to be close on exec. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called for all file descriptors in D-Bus code.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the Windows HANDLE (a SOCKET is also OK) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="524" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="524" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1ae1f7daefc246bbe9b088107d5dd1bfb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_set_fd_nonblocking</definition>
        <argsstring>(int handle, DBusError *error)</argsstring>
        <name>_dbus_set_fd_nonblocking</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sets a file descriptor to be nonblocking. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>address of error location. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="542" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="542" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_write_socket_two</definition>
        <argsstring>(int fd, const DBusString *buffer1, int start1, int len1, const DBusString *buffer2, int start2, int len2)</argsstring>
        <name>_dbus_write_socket_two</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len1</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len2</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1ga3a789bcdfd3d468c2bf917fa5081b27f" kindref="member">_dbus_write()</ref> but will use writev() if possible to write both buffers in sequence. </para>        </briefdescription>
        <detaileddescription>
<para>Like <ref refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" kindref="member">_dbus_write_two()</ref> but only works on sockets and is thus available on Windows.</para><para>The return value is the number of bytes written in the first buffer, plus the number written in the second. If the first buffer is written successfully and an error occurs writing the second, the number of bytes in the first is returned (i.e. the error is ignored), on systems that don&apos;t have writev. Handles EINTR for you. The second buffer may be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer1</parametername>
</parameternamelist>
<parameterdescription>
<para>first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start1</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte to write in first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len1</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write from first buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer2</parametername>
</parameternamelist>
<parameterdescription>
<para>second buffer, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start2</parametername>
</parameternamelist>
<parameterdescription>
<para>first byte to write in second buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len2</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write in second buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>total bytes written from both buffers, or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="583" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="583" bodyend="644"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
        <references refid="group__DBusSysdepsUnix_1ga506a183b1f6970d1bfca165ab3de4736" compoundref="dbus-sysdeps-unix_8c" startline="734" endline="799">_dbus_write_two</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" compoundref="dbus-internals_8h" startline="329">_DBUS_LOCK</references>
        <references refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" compoundref="dbus-sysdeps_8c" startline="77" endline="93">_dbus_abort</references>
        <references refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" compoundref="dbus-internals_8h" startline="330">_DBUS_UNLOCK</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gabc28993ee2ec72dc86f3656a26f18430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_socket_is_invalid</definition>
        <argsstring>(int fd)</argsstring>
        <name>_dbus_socket_is_invalid</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="647" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="647" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a8299e08b9df7d6175a2162078f561d86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_win_startup_winsock</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_win_startup_winsock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="675" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="675" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaffaf8b5bb832c20a8ccb10f012920776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_printf_string_upper_bound</definition>
        <argsstring>(const char *format, va_list args)</argsstring>
        <name>_dbus_printf_string_upper_bound</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Measure the message length without terminating nul. </para>        </briefdescription>
        <detaileddescription>
<para>Measure the length of the given format string and arguments, not including the terminating nul. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="737" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="737" bodyend="769"/>
        <references refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" compoundref="dbus-memory_8c" startline="461" endline="516">dbus_malloc</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusString_1ga65f0f04b7c9371406fc87343f691e8da" compoundref="dbus-string_8c" startline="2554" endline="2636">_dbus_string_validate_utf8</references>
        <references refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" compoundref="dbus-errors_8c" startline="243" endline="266">dbus_set_error_const</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a5ec4ebbea2c86b946519c70e7887e99f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wchar_t *</type>
        <definition>wchar_t* _dbus_win_utf8_to_utf16</definition>
        <argsstring>(const char *str, DBusError *error)</argsstring>
        <name>_dbus_win_utf8_to_utf16</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Returns the UTF-16 form of a UTF-8 string. </para>        </briefdescription>
        <detaileddescription>
<para>The result should be freed with <ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free()</ref> when no longer needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the UTF-8 string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="780" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="780" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a5b7e1f187c9758bbe98cf88355037c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* _dbus_win_utf16_to_utf8</definition>
        <argsstring>(const wchar_t *str, DBusError *error)</argsstring>
        <name>_dbus_win_utf16_to_utf8</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Returns the UTF-8 form of a UTF-16 string. </para>        </briefdescription>
        <detaileddescription>
<para>The result should be freed with <ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free()</ref> when no longer needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the UTF-16 string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="829" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="829" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a7e2ca5971bf81fa859bc3e9b558cc904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_win_account_to_sid</definition>
        <argsstring>(const wchar_t *waccount, void **ppsid, DBusError *error)</argsstring>
        <name>_dbus_win_account_to_sid</name>
        <param>
          <type>const wchar_t *</type>
          <declname>waccount</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>ppsid</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="872" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="872" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long _dbus_pid_for_log</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_pid_for_log</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The only reason this is separate from <ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid()</ref> is to allow it on Windows for logging but not for other purposes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>process ID to put in log messages </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="944" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="944" bodyend="947"/>
        <references refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" compoundref="dbus-sysdeps-win_8c" startline="2122" endline="2125">_dbus_getpid</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1afc5a8ed0b1615b3b40b6b8b7cf3d6480" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_getsid</definition>
        <argsstring>(char **sid, dbus_pid_t process_id)</argsstring>
        <name>_dbus_getsid</name>
        <param>
          <type>char **</type>
          <declname>sid</declname>
        </param>
        <param>
          <type><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></type>
          <declname>process_id</declname>
        </param>
        <briefdescription>
<para>Gets our SID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sid</parametername>
</parameternamelist>
<parameterdescription>
<para>points to sid buffer, need to be freed with LocalFree() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>process_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the process id for which the sid should be returned </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>process sid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="988" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="988" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_full_duplex_pipe</definition>
        <argsstring>(int *fd1, int *fd2, dbus_bool_t blocking, DBusError *error)</argsstring>
        <name>_dbus_full_duplex_pipe</name>
        <param>
          <type>int *</type>
          <declname>fd1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fd2</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>blocking</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a full-duplex pipe (as in socketpair()). </para>        </briefdescription>
        <detaileddescription>
<para>Sets both ends of the pipe nonblocking.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fd1</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for one end </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd2</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for the other end </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blocking</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if pipe should be blocking </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (if error is set) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1052" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1052" bodyend="1158"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusSysdepsUnix_1ga000b1d83b0188e2db82d766b6665bb83" compoundref="dbus-sysdeps-unix_8c" startline="3003" endline="3015">_dbus_fd_set_close_on_exec</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_poll</definition>
        <argsstring>(DBusPollFD *fds, int n_fds, int timeout_milliseconds)</argsstring>
        <name>_dbus_poll</name>
        <param>
          <type><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref> *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_fds</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_milliseconds</declname>
        </param>
        <briefdescription>
<para>Wrapper for poll(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fds</parametername>
</parameternamelist>
<parameterdescription>
<para>the file descriptors to poll </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_fds</parametername>
</parameternamelist>
<parameterdescription>
<para>number of descriptors in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_milliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout or -1 for infinite </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>numbers of fds with revents, or &lt;0 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1169" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1169" bodyend="1430"/>
        <references refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" compoundref="dbus-sysdeps_8h" startline="294">_DBUS_POLLIN</references>
        <references refid="group__DBusSysdeps_1ga1db7d09a41912c10978c6a4955d9a9d2" compoundref="dbus-sysdeps_8h" startline="296">_DBUS_POLLPRI</references>
        <references refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" compoundref="dbus-sysdeps_8h" startline="298">_DBUS_POLLOUT</references>
        <references refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" compoundref="dbus-sysdeps_8h" startline="300">_DBUS_POLLERR</references>
        <references refid="group__DBusSysdeps_1ga6f08232c1f943313e3eefd7de8f3592f" compoundref="dbus-sysdeps_8h" startline="302">_DBUS_POLLHUP</references>
        <references refid="group__DBusSysdeps_1ga83bf3d24f3a1a853dda794835c39fc6f" compoundref="dbus-sysdeps_8h" startline="304">_DBUS_POLLNVAL</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" compoundref="dbus-sysdeps_8h" startline="313">DBusPollFD::events</references>
        <references refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" compoundref="dbus-sysdeps_8h" startline="312">DBusPollFD::fd</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" compoundref="dbus-sysdeps_8h" startline="314">DBusPollFD::revents</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga203e3257b50597a8fe7757c920474a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_exit</definition>
        <argsstring>(int code)</argsstring>
        <name>_dbus_exit</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Exit the process, returning the given value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>the exit code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1472" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1472" bodyend="1475"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaa3adf90f6e47d30eeacf0a27d1a09ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_connect_tcp_socket</definition>
        <argsstring>(const char *host, const char *port, const char *family, DBusError *error)</argsstring>
        <name>_dbus_connect_tcp_socket</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>family</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a socket and connects to a socket at the given host and port. </para>        </briefdescription>
        <detaileddescription>
<para>The connection fd is returned, and is set up as nonblocking.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>the host name to connect to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>the port to connect to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>the address family to listen on, NULL for all </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>connection file descriptor or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1489" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1489" bodyend="1495"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" compoundref="dbus-protocol_8h" startline="367">DBUS_ERROR_BAD_ADDRESS</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" compoundref="dbus-protocol_8h" startline="391">DBUS_ERROR_INVALID_ARGS</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="357">DBUS_ERROR_NO_MEMORY</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga8eaa78f8111092e35aa482d908f5e4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_connect_tcp_socket_with_nonce</definition>
        <argsstring>(const char *host, const char *port, const char *family, const char *noncefile, DBusError *error)</argsstring>
        <name>_dbus_connect_tcp_socket_with_nonce</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>family</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>noncefile</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1498" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1498" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_listen_tcp_socket</definition>
        <argsstring>(const char *host, const char *port, const char *family, DBusString *retport, int **fds_p, DBusError *error)</argsstring>
        <name>_dbus_listen_tcp_socket</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>family</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>retport</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fds_p</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a socket and binds it to the given path, then listens on the socket. </para>        </briefdescription>
        <detaileddescription>
<para>The socket is set to be nonblocking. In case of port=0 a random free port is used and returned in the port parameter. If inaddr_any is specified, the hostname is ignored.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>the host name to listen on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>the port to listen on, if zero a free port will be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>family</parametername>
</parameternamelist>
<parameterdescription>
<para>the address family to listen on, NULL for all </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retport</parametername>
</parameternamelist>
<parameterdescription>
<para>string to return the actual port listened on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fds_p</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store returned file descriptors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for errors </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of listening file descriptors or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1636" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1636" bodyend="1825"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1ga3fa04eb600edda4afc2dd9fe2e0f8b02" compoundref="dbus-protocol_8h" startline="367">DBUS_ERROR_BAD_ADDRESS</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" compoundref="dbus-memory_8c" startline="601" endline="692">dbus_realloc</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="357">DBUS_ERROR_NO_MEMORY</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusProtocol_1ga445d7ad73da94c796ef441df2dcc3cc8" compoundref="dbus-protocol_8h" startline="365">DBUS_ERROR_IO_ERROR</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" compoundref="dbus-protocol_8h" startline="391">DBUS_ERROR_INVALID_ARGS</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_accept</definition>
        <argsstring>(int listen_fd)</argsstring>
        <name>_dbus_accept</name>
        <param>
          <type>int</type>
          <declname>listen_fd</declname>
        </param>
        <briefdescription>
<para>Accepts a connection on a listening socket. </para>        </briefdescription>
        <detaileddescription>
<para>Handles EINTR for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listen_fd</parametername>
</parameternamelist>
<parameterdescription>
<para>the listen file descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the connection fd of the client, or -1 on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1836" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1836" bodyend="1853"/>
        <references refid="group__DBusSysdepsUnix_1ga000b1d83b0188e2db82d766b6665bb83" compoundref="dbus-sysdeps-unix_8c" startline="3003" endline="3015">_dbus_fd_set_close_on_exec</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_send_credentials_socket</definition>
        <argsstring>(int handle, DBusError *error)</argsstring>
        <name>_dbus_send_credentials_socket</name>
        <param>
          <type>int</type>
          <declname>server_fd</declname>
          <defname>handle</defname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Sends a single nul byte with our UNIX credentials as ancillary data. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the data was successfully written. On systems that don&apos;t support sending credentials, just writes a byte, doesn&apos;t send any credentials. On some systems, such as Linux, reading/writing the byte isn&apos;t actually required, but we do it anyway just to avoid multiple codepaths.</para><para>Fails if no byte can be written, so you must select() first.</para><para>The point of the byte is that on some systems we have to use sendmsg()/recvmsg() to transmit credentials.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server_fd</parametername>
</parameternamelist>
<parameterdescription>
<para>file descriptor for connection to server </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the byte was sent </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1859" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1859" bodyend="1915"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" compoundref="dbus-sysdeps-win_8c" startline="449" endline="482">_dbus_write_socket</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
        <references refid="group__DBusProtocol_1ga445d7ad73da94c796ef441df2dcc3cc8" compoundref="dbus-protocol_8h" startline="365">DBUS_ERROR_IO_ERROR</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_read_credentials_socket</definition>
        <argsstring>(int handle, DBusCredentials *credentials, DBusError *error)</argsstring>
        <name>_dbus_read_credentials_socket</name>
        <param>
          <type>int</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Reads a single byte which must be nul (an error occurs otherwise), and reads unix credentials if available. </para>        </briefdescription>
        <detaileddescription>
<para>Fills in pid/uid/gid with -1 if no credentials are available. Return value indicates whether a byte was read, not whether we got valid credentials. On some systems, such as Linux, reading/writing the byte isn&apos;t actually required, but we do it anyway just to avoid multiple codepaths.</para><para>Fails if no byte is available, so you must select() first.</para><para>The point of the byte is that on some systems we have to use sendmsg()/recvmsg() to transmit credentials.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the client file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>struct to fill with credentials of client </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store error code </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1936" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1936" bodyend="1977"/>
        <references refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" compoundref="dbus-sysdeps_8h" startline="105">DBUS_UID_UNSET</references>
        <references refid="group__DBusSysdeps_1ga4eb5f05dd6ad89caa4b0340e1cf0b8d9" compoundref="dbus-sysdeps_8h" startline="103">DBUS_PID_UNSET</references>
        <references refid="group__DBusCredentials_1ga40a5c7e37b10419e233a473dc7173f3c" compoundref="dbus-credentials_8c" startline="446" endline="455">_dbus_credentials_clear</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusCredentials_1gab26eb5cb8d05139806cf06e99c4ec5b0" compoundref="dbus-credentials_8c" startline="204" endline="218">_dbus_credentials_add_adt_audit_data</references>
        <references refid="group__DBusSysdeps_1gaf4553a43e3b8c0e43d9148a00dcc3fa4" compoundref="dbus-sysdeps_8h" startline="110">DBUS_PID_FORMAT</references>
        <references refid="group__DBusSysdeps_1gab657f0434f01b463891942f373f7b4a1" compoundref="dbus-sysdeps_8h" startline="112">DBUS_UID_FORMAT</references>
        <references refid="group__DBusCredentials_1gaad133a8d06af2a447307266a8425a9f8" compoundref="dbus-credentials_8c" startline="149" endline="154">_dbus_credentials_add_pid</references>
        <references refid="group__DBusCredentials_1ga9cec6da43e4be233d44f5bd60b071624" compoundref="dbus-credentials_8c" startline="164" endline="170">_dbus_credentials_add_unix_uid</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" compoundref="dbus-sysdeps-win_8c" startline="379" endline="436">_dbus_read_socket</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusCredentials_1ga9d2186a4cfa8a421c552ae4592b400f5" compoundref="dbus-credentials_8c" startline="180" endline="193">_dbus_credentials_add_windows_sid</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga8e16f75e361d9fed43223f69baf0e2a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_check_dir_is_private_to_user</definition>
        <argsstring>(DBusString *dir, DBusError *error)</argsstring>
        <name>_dbus_check_dir_is_private_to_user</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Checks to make sure the given directory is private to the user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the directory </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="1988" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="1988" bodyend="1993"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusUserInfo_1a2d9c74d29f371e391a79b81162050b2e" compoundref="dbus-sysdeps-unix_8h" startline="100">DBusUserInfo::uid</references>
        <references refid="structDBusUserInfo_1ac970de2fac9ea4ba91485e6c37c3bf93" compoundref="dbus-sysdeps-unix_8h" startline="101">DBusUserInfo::primary_gid</references>
        <references refid="structDBusUserInfo_1ac6b57db1dc8315eee3f532f4e77912d1" compoundref="dbus-sysdeps-unix_8h" startline="104">DBusUserInfo::username</references>
        <references refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" compoundref="dbus-internals_8c" startline="527" endline="544">_dbus_strdup</references>
        <references refid="structDBusUserInfo_1a5235d4d021cd134e1130e1e8e912bc0c" compoundref="dbus-sysdeps-unix_8h" startline="105">DBusUserInfo::homedir</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="357">DBUS_ERROR_NO_MEMORY</references>
        <references refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" compoundref="dbus-sysdeps_8h" startline="105">DBUS_UID_UNSET</references>
        <references refid="group__DBusSysdeps_1ga768a080926a119a6131083facc0bd42b" compoundref="dbus-sysdeps_8h" startline="107">DBUS_GID_UNSET</references>
        <references refid="structDBusUserInfo_1a902af9e0fb7d37c14eefb7d2b016ab11" compoundref="dbus-sysdeps-unix_8h" startline="102">DBusUserInfo::group_ids</references>
        <references refid="structDBusUserInfo_1a21c07867fbffb1854a97aed265d87c89" compoundref="dbus-sysdeps-unix_8h" startline="103">DBusUserInfo::n_group_ids</references>
        <references refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" compoundref="dbus-memory_8c" startline="461" endline="516">dbus_malloc</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" compoundref="dbus-memory_8c" startline="601" endline="692">dbus_realloc</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusSysdeps_1gaaab5918b2ae57886d9783df09bd61c7e" compoundref="dbus-sysdeps_8h" startline="114">DBUS_GID_FORMAT</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_concat_dir_and_file</definition>
        <argsstring>(DBusString *dir, const DBusString *next_component)</argsstring>
        <name>_dbus_concat_dir_and_file</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>next_component</declname>
        </param>
        <briefdescription>
<para>Appends the given filename to the given directory. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000059"><xreftitle>Todo</xreftitle><xrefdescription><para>it might be cute to collapse multiple &apos;/&apos; such as &quot;foo//&quot; concat &quot;//bar&quot;</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>next_component</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2007" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2007" bodyend="2037"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusString_1ga7af1cbfa905f26d972ab644d890548b8" compoundref="dbus-string_8c" startline="780" endline="789">_dbus_string_shorten</references>
        <references refid="group__DBusString_1gaa6ecf36e70263659f921a4ef0335db12" compoundref="dbus-string_8c" startline="1156" endline="1167">_dbus_string_append_byte</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <referencedby refid="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" compoundref="dbus-sysdeps-win_8c" startline="3397" endline="3475">_dbus_append_keyring_directory_for_credentials</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gacecdbb00a3c8b63e821edae537ae3c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_credentials_add_from_user</definition>
        <argsstring>(DBusCredentials *credentials, const DBusString *username)</argsstring>
        <name>_dbus_credentials_add_from_user</name>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>username</declname>
        </param>
        <briefdescription>
<para>Adds the credentials corresponding to the given username. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials to fill in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>the username </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the username existed and we got some credentials </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2049" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2049" bodyend="2054"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_credentials_add_from_current_process</definition>
        <argsstring>(DBusCredentials *credentials)</argsstring>
        <name>_dbus_credentials_add_from_current_process</name>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <briefdescription>
<para>Adds the credentials of the current process to the passed-in credentials object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials to add to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory; does not properly roll back on failure, so only some credentials may have been added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2065" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2065" bodyend="2088"/>
        <references refid="group__DBusCredentials_1gaad133a8d06af2a447307266a8425a9f8" compoundref="dbus-credentials_8c" startline="149" endline="154">_dbus_credentials_add_pid</references>
        <references refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" compoundref="dbus-sysdeps-unix_8c" startline="2471" endline="2474">_dbus_getpid</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusCredentials_1ga9cec6da43e4be233d44f5bd60b071624" compoundref="dbus-credentials_8c" startline="164" endline="170">_dbus_credentials_add_unix_uid</references>
        <references refid="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" compoundref="dbus-sysdeps-unix_8c" startline="2489" endline="2492">_dbus_geteuid</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusCredentials_1ga9d2186a4cfa8a421c552ae4592b400f5" compoundref="dbus-credentials_8c" startline="180" endline="193">_dbus_credentials_add_windows_sid</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_append_user_from_current_process</definition>
        <argsstring>(DBusString *str)</argsstring>
        <name>_dbus_append_user_from_current_process</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Append to the string the identity we would like to have when we authenticate, on UNIX this is the current process UID and on Windows something else, probably a Windows SID string. </para>        </briefdescription>
        <detaileddescription>
<para>No escaping is required, that is done in <ref refid="dbus-auth_8c_source" kindref="compound">dbus-auth.c</ref>. The username here need not be anything human-readable, it can be the machine-readable form i.e. a user id.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to append to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on no memory </para></simplesect>
<xrefsect id="todo_1_todo000060"><xreftitle>Todo</xreftitle><xrefdescription><para>to which class belongs this </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2103" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2103" bodyend="2115"/>
        <references refid="group__DBusString_1gaa63064881001085159c78204f70acde8" compoundref="dbus-sysdeps_8c" startline="392" endline="420">_dbus_string_append_uint</references>
        <references refid="group__DBusSysdepsUnix_1ga50438942c6e9f4027ea555a09d758ca3" compoundref="dbus-sysdeps-unix_8c" startline="2489" endline="2492">_dbus_geteuid</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" compoundref="dbus-sysdeps-win_8c" startline="2122" endline="2125">_dbus_getpid</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
        <referencedby refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" compoundref="dbus-sysdeps-win_8c" startline="2670" endline="2739">_dbus_read_local_machine_uuid</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></type>
        <definition>dbus_pid_t _dbus_getpid</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_getpid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets our process ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>process ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2122" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2122" bodyend="2125"/>
        <referencedby refid="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" compoundref="dbus-sysdeps-win_8c" startline="944" endline="947">_dbus_pid_for_log</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" compoundref="dbus-sysdeps-win_8c" startline="2065" endline="2088">_dbus_credentials_add_from_current_process</referencedby>
        <referencedby refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" compoundref="dbus-sysdeps-win_8c" startline="2103" endline="2115">_dbus_append_user_from_current_process</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga1153b4669819148af6b3f6f2b7c9183a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_sleep_milliseconds</definition>
        <argsstring>(int milliseconds)</argsstring>
        <name>_dbus_sleep_milliseconds</name>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
        </param>
        <briefdescription>
<para>Sleeps the given number of milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>milliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>number of milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2143" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2143" bodyend="2146"/>
        <references refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" compoundref="dbus-string_8c" startline="760" endline="771">_dbus_string_lengthen</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
        <references refid="group__DBusInternalsUtils_1gafb4454c18ee8e5bcc20dbccd93e1d9ba" compoundref="dbus-sysdeps_8c" startline="508" endline="534">_dbus_generate_pseudorandom_bytes_buffer</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae10ee21ab353beadbe2493728065f600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_get_real_time</definition>
        <argsstring>(long *tv_sec, long *tv_usec)</argsstring>
        <name>_dbus_get_real_time</name>
        <param>
          <type>long *</type>
          <declname>tv_sec</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>tv_usec</declname>
        </param>
        <briefdescription>
<para>Get current time, as in gettimeofday(). </para>        </briefdescription>
        <detaileddescription>
<para>Never uses the monotonic clock.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv_sec</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for number of seconds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv_usec</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for number of microseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2157" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2157" bodyend="2178"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" compoundref="dbus-arch-deps_8h" startline="37">dbus_uint64_t</references>
        <references refid="group__DBusTypes_1ga8deac39e1bf9fcca44854afeaaaf6199">DBUS_INT64_CONSTANT</references>
        <referencedby refid="group__DBusSysdeps_1gab9951a7fd8c33188bf86314e7fd56300" compoundref="dbus-sysdeps-win_8c" startline="2188" endline="2193">_dbus_get_monotonic_time</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gab9951a7fd8c33188bf86314e7fd56300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_get_monotonic_time</definition>
        <argsstring>(long *tv_sec, long *tv_usec)</argsstring>
        <name>_dbus_get_monotonic_time</name>
        <param>
          <type>long *</type>
          <declname>tv_sec</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>tv_usec</declname>
        </param>
        <briefdescription>
<para>Get current time, as in gettimeofday(). </para>        </briefdescription>
        <detaileddescription>
<para>Use the monotonic clock if available, to avoid problems when the system time changes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv_sec</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for number of seconds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tv_usec</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for number of microseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2188" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2188" bodyend="2193"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusSysdeps_1gae10ee21ab353beadbe2493728065f600" compoundref="dbus-sysdeps-win_8c" startline="2157" endline="2178">_dbus_get_real_time</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6890d4cde3afec0bf274ca2af8c9e204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_disable_sigpipe</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_disable_sigpipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>signal (SIGPIPE, SIG_IGN); </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2199" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2199" bodyend="2201"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaa47156dedbe573ee9b213d1fd3f7bb79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_create_directory</definition>
        <argsstring>(const DBusString *filename, DBusError *error)</argsstring>
        <name>_dbus_create_directory</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Creates a directory; succeeds if the directory is created or already existed. </para>        </briefdescription>
        <detaileddescription>
<para>directory interface</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>directory filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>initialized error object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2212" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2212" bodyend="2233"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_generate_random_bytes</definition>
        <argsstring>(DBusString *str, int n_bytes)</argsstring>
        <name>_dbus_generate_random_bytes</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
<para>Generates the given number of random bytes, using the best mechanism we can come up with. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of random bytes to append to string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2245" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2245" bodyend="2271"/>
        <references refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" compoundref="dbus-sysdeps-unix_8c" startline="628" endline="675">_dbus_read</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" compoundref="dbus-string_8c" startline="760" endline="771">_dbus_string_lengthen</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_get_tmpdir</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_get_tmpdir</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the temporary files directory by inspecting the environment variables TMPDIR, TMP, and TEMP in that order. </para>        </briefdescription>
        <detaileddescription>
<para>If none of those are set &quot;/tmp&quot; is returned</para><para><simplesect kind="return"><para>location of temp directory, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory for locking </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2280" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2280" bodyend="2315"/>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" compoundref="dbus-internals_8h" startline="329">_DBUS_LOCK</references>
        <references refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" compoundref="dbus-internals_8h" startline="330">_DBUS_UNLOCK</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" compoundref="dbus-sysdeps_8c" startline="614" endline="698">_dbus_error_from_errno</references>
        <references refid="group__DBusInternalsUtils_1ga2469c53816dc077f9deefb187ffcabf3" compoundref="dbus-spawn_8c" startline="873">READ_END</references>
        <references refid="group__DBusInternalsUtils_1ga2efd706d915e621e5e18b3f0803c4ed2" compoundref="dbus-spawn_8c" startline="875">WRITE_END</references>
        <references refid="group__DBusSysdepsUnix_1gae63f6bdc70a1dd5c9ba0a6a1be57e320" compoundref="dbus-sysdeps-unix_8c" startline="4057" endline="4115">_dbus_close_all</references>
        <references refid="group__DBusSysdepsUnix_1gaf52cb1d5b9fc5611808ce32eff898c28" compoundref="dbus-sysdeps-unix_8c" startline="628" endline="675">_dbus_read</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusProtocol_1gac04bc3bebee1674e93ef96aaa2b34b40" compoundref="dbus-protocol_8h" startline="416">DBUS_ERROR_SPAWN_EXEC_FAILED</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" compoundref="dbus-sysdeps_8c" startline="77" endline="93">_dbus_abort</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusFile_1ga4d4936493cddac47b6e7e4ab3f390627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_delete_file</definition>
        <argsstring>(const DBusString *filename, DBusError *error)</argsstring>
        <name>_dbus_delete_file</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Deletes the given file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error location</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if unlink() succeeded </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2327" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2327" bodyend="2345"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" compoundref="dbus-sysdeps_8c" startline="773" endline="776">_dbus_strerror_from_errno</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" compoundref="dbus-internals_8h" startline="179">_DBUS_ZERO</references>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1ae6d549c9e34a0da239bfb00e01eef5cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static BOOL</definition>
        <argsstring>(WINAPI *pStackWalk)(DWORD MachineType</argsstring>
        <name>BOOL</name>
        <param>
          <type>WINAPI *</type>
          <declname>pStackWalk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1acd31d2c36a30be34b4466aef8fd586a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static DWORD</definition>
        <argsstring>(WINAPI *pSymGetModuleBase)(HANDLE hProcess</argsstring>
        <name>DWORD</name>
        <param>
          <type>WINAPI *</type>
          <declname>pSymGetModuleBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a0cb16e2d9965e6c6ab65aed74d6047b9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static PVOID</definition>
        <argsstring>(WINAPI *pSymFunctionTableAccess)(HANDLE hProcess</argsstring>
        <name>PVOID</name>
        <param>
          <type>WINAPI *</type>
          <declname>pSymFunctionTableAccess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1adf987a660efb0da1bda7b68b12d62c2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>static BOOL init_backtrace</definition>
        <argsstring>()</argsstring>
        <name>init_backtrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2450" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2450" bodyend="2528"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a601053d210f79ed940ae7657f2f4129a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dump_backtrace_for_thread</definition>
        <argsstring>(HANDLE hThread)</argsstring>
        <name>dump_backtrace_for_thread</name>
        <param>
          <type>HANDLE</type>
          <declname>hThread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2530" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2530" bodyend="2620"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1ae43b542756d77b941a7f33937e4294b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD WINAPI</type>
        <definition>static DWORD WINAPI dump_thread_proc</definition>
        <argsstring>(LPVOID lpParameter)</argsstring>
        <name>dump_thread_proc</name>
        <param>
          <type>LPVOID</type>
          <declname>lpParameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2622" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2622" bodyend="2626"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a8ee2a03d246078371632e4f7ab1118b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dump_backtrace</definition>
        <argsstring>()</argsstring>
        <name>dump_backtrace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2630" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2630" bodyend="2642"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_print_backtrace</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_print_backtrace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>On GNU libc systems, print a crude backtrace to stderr. </para>        </briefdescription>
        <detaileddescription>
<para>On other systems, print &quot;no backtrace support&quot; and block for possible gdb attachment if an appropriate environment variable is set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2647" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2647" bodyend="2651"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a4326cc155c847e9cc7326a0c795d7108" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>static dbus_uint32_t fromAscii</definition>
        <argsstring>(char ascii)</argsstring>
        <name>fromAscii</name>
        <param>
          <type>char</type>
          <declname>ascii</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2659" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2659" bodyend="2668"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_read_local_machine_uuid</definition>
        <argsstring>(DBusGUID *machine_id, dbus_bool_t create_if_not_found, DBusError *error)</argsstring>
        <name>_dbus_read_local_machine_uuid</name>
        <param>
          <type><ref refid="unionDBusGUID" kindref="compound">DBusGUID</ref> *</type>
          <declname>machine_id</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>create_if_not_found</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Reads the uuid of the machine we&apos;re running on from the dbus configuration. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally try to create it (only root can do this usually).</para><para>On UNIX, reads a file that gets created by dbus-uuidgen in a post-install script. On Windows, if there&apos;s a standard machine uuid we could just use that, but I can&apos;t find one with the right properties (the hardware profile guid can change without rebooting I believe). If there&apos;s no standard one we might want to use the registry instead of a file for this, and I&apos;m not sure how we&apos;d ensure the uuid gets created.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>machine_id</parametername>
</parameternamelist>
<parameterdescription>
<para>guid to init with the machine&apos;s uuid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>create_if_not_found</parametername>
</parameternamelist>
<parameterdescription>
<para>try to create the uuid if it doesn&apos;t exist </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the error is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2670" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2670" bodyend="2739"/>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusInternalsUtils_1ga709fd30e6b940a5952af38efaf24ad51" compoundref="dbus-internals_8c" startline="806" endline="837">_dbus_read_uuid_file</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" compoundref="dbus-errors_8c" startline="211" endline="226">dbus_error_free</references>
        <references refid="group__DBusInternalsUtils_1gaa16de06b33c56323fa33dd96eaab3829" compoundref="dbus-internals_8c" startline="757" endline="793">_dbus_write_uuid_file</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusInternalsUtils_1ga08c2922335845e5c857e88399436b9ba" compoundref="dbus-internals_8c" startline="641" endline="653">_dbus_generate_uuid</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" compoundref="dbus-protocol_8h" startline="357">DBUS_ERROR_NO_MEMORY</references>
        <references refid="unionDBusGUID_1a3db114d87644fab561564504a8653e72" compoundref="dbus-internals_8h" startline="352">DBusGUID::as_uint32s</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
        <references refid="group__DBusString_1ga698f4b0299e6c6a707fd7e9c14915f00" compoundref="dbus-string_8c" startline="2484" endline="2505">_dbus_string_tolower_ascii</references>
        <references refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" compoundref="dbus-sha_8c" startline="483" endline="510">_dbus_sha_compute</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" compoundref="dbus-sysdeps-win_8c" startline="2103" endline="2115">_dbus_append_user_from_current_process</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a284cec1a9110b85671901afdeb7c4340" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>static HANDLE _dbus_global_lock</definition>
        <argsstring>(const char *mutexname)</argsstring>
        <name>_dbus_global_lock</name>
        <param>
          <type>const char *</type>
          <declname>mutexname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2742" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2742" bodyend="2766"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a5cc6235c16a03111fed14c6f3ef310c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_global_unlock</definition>
        <argsstring>(HANDLE mutex)</argsstring>
        <name>_dbus_global_unlock</name>
        <param>
          <type>HANDLE</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2769" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2769" bodyend="2773"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a5f7b6cc3393316cdce0888a33042a767" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_get_install_root_as_hash</definition>
        <argsstring>(DBusString *out)</argsstring>
        <name>_dbus_get_install_root_as_hash</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2788" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2788" bodyend="2808"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a5b02a7df1924b98ce5d524897a3441cf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_get_address_string</definition>
        <argsstring>(DBusString *out, const char *basestring, const char *scope)</argsstring>
        <name>_dbus_get_address_string</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>basestring</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2811" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2811" bodyend="2850"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a89266e3179b5ebed91a4adcad79a7e3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_get_shm_name</definition>
        <argsstring>(DBusString *out, const char *scope)</argsstring>
        <name>_dbus_get_shm_name</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2853" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2853" bodyend="2856"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a431f9ca79f71f585bcc7a7b6f4e5375b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_get_mutex_name</definition>
        <argsstring>(DBusString *out, const char *scope)</argsstring>
        <name>_dbus_get_mutex_name</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2859" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2859" bodyend="2862"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaa9d1f52c60fdbbfade50fe0136400890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_daemon_is_session_bus_address_published</definition>
        <argsstring>(const char *scope)</argsstring>
        <name>_dbus_daemon_is_session_bus_address_published</name>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2865" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2865" bodyend="2906"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gafa00b8cf76d8ede8ed0bd56440ca7285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_daemon_publish_session_bus_address</definition>
        <argsstring>(const char *address, const char *scope)</argsstring>
        <name>_dbus_daemon_publish_session_bus_address</name>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2909" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2909" bodyend="2967"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga7e2e5b6f5c628c850bc566a4345ebd15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_daemon_unpublish_session_bus_address</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_daemon_unpublish_session_bus_address</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2970" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2970" bodyend="2988"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a4285df4e1e613a908b3c6a94eaf81c18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_get_autolaunch_shm</definition>
        <argsstring>(DBusString *address, DBusString *shm_name)</argsstring>
        <name>_dbus_get_autolaunch_shm</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>shm_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="2991" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="2991" bodyend="3025"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1adcc2e24850c29dd9d557364ac5e944cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_daemon_already_runs</definition>
        <argsstring>(DBusString *address, DBusString *shm_name, const char *scope)</argsstring>
        <name>_dbus_daemon_already_runs</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>shm_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3028" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3028" bodyend="3066"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_autolaunch_address</definition>
        <argsstring>(const char *scope, DBusString *address, DBusError *error)</argsstring>
        <name>_dbus_get_autolaunch_address</name>
        <param>
          <type>const char *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Returns the address of a new session bus. </para>        </briefdescription>
        <detaileddescription>
<para>If successful, returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> and appends the address to <computeroutput>address</computeroutput>. If a failure happens, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and sets an error in <computeroutput>error</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>scope of autolaunch (Windows only) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusString" kindref="compound">DBusString</ref> where the address can be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusError" kindref="compound">DBusError</ref> to store the error in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if an error happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3069" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3069" bodyend="3168"/>
        <references refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" compoundref="dbus-sysdeps-unix_8c" startline="4127" endline="4170">_dbus_check_setuid</references>
        <references refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" compoundref="dbus-errors_8c" startline="243" endline="266">dbus_set_error_const</references>
        <references refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" compoundref="dbus-protocol_8h" startline="369">DBUS_ERROR_NOT_SUPPORTED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" compoundref="dbus-sysdeps_8c" startline="185" endline="193">_dbus_getenv</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusInternalsUtils_1ga49ba67405d677af6cde9329ed87ea91f" compoundref="dbus-internals_8c" startline="854" endline="889">_dbus_get_local_machine_uuid_encoded</references>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1gac153abad46f4eb80999a2b340d29d1f0" compoundref="dbus-internals_8h" startline="174">_DBUS_N_ELEMENTS</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusFile_1ga7c83e2e20811330d1d1b2f6249dbe66c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_make_file_world_readable</definition>
        <argsstring>(const DBusString *filename, DBusError *error)</argsstring>
        <name>_dbus_make_file_world_readable</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Makes the file readable by every user in the system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error location </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the file&apos;s permissions could be changed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3178" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3178" bodyend="3183"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></type>
        <definition>dbus_int32_t _dbus_atomic_inc</definition>
        <argsstring>(DBusAtomic *atomic)</argsstring>
        <name>_dbus_atomic_inc</name>
        <param>
          <type><ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref> *</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Atomically increments an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer to increment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value before incrementing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3193" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3193" bodyend="3198"/>
        <references refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" compoundref="dbus-sysdeps_8h" startline="232">DBusAtomic::value</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></type>
        <definition>dbus_int32_t _dbus_atomic_dec</definition>
        <argsstring>(DBusAtomic *atomic)</argsstring>
        <name>_dbus_atomic_dec</name>
        <param>
          <type><ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref> *</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Atomically decrement an integer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer to decrement </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value before decrementing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3208" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3208" bodyend="3213"/>
        <references refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" compoundref="dbus-sysdeps_8h" startline="232">DBusAtomic::value</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></type>
        <definition>dbus_int32_t _dbus_atomic_get</definition>
        <argsstring>(DBusAtomic *atomic)</argsstring>
        <name>_dbus_atomic_get</name>
        <param>
          <type><ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref> *</type>
          <declname>atomic</declname>
        </param>
        <briefdescription>
<para>Atomically get the value of an integer. </para>        </briefdescription>
        <detaileddescription>
<para>It may change at any time thereafter, so this is mostly only useful for assertions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atomic</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the integer to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at this moment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3223" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3223" bodyend="3238"/>
        <references refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" compoundref="dbus-sysdeps_8h" startline="232">DBusAtomic::value</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga184b42c4b42b91ef73e9ee50a1fa12c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_flush_caches</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_flush_caches</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Called when the bus daemon is signaled to reload its configuration; any caches should be nuked. </para>        </briefdescription>
        <detaileddescription>
<para>Of course any caches that need explicit reload are probably broken, but c&apos;est la vie. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3248" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3248" bodyend="3250"/>
        <references refid="group__DBusInternalsUtils_1ga788ce7775d7f812d28d931e8b87ddfde" compoundref="dbus-userdb_8c" startline="349" endline="361">_dbus_user_database_flush_system</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga1895e860a4a9993cea584ec7e30dd71d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_is_errno_eagain_or_ewouldblock</definition>
        <argsstring>(int e)</argsstring>
        <name>_dbus_get_is_errno_eagain_or_ewouldblock</name>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>See if errno is EAGAIN or EWOULDBLOCK (this has to be done differently for Winsock so is abstracted) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if e == EAGAIN or e == EWOULDBLOCK </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3259" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3259" bodyend="3262"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" compoundref="dbus-sysdeps-win_8c" startline="3483" endline="3491">_dbus_file_exists</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1af4e86a3525ac8938d79bbd30683da2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_install_root</definition>
        <argsstring>(char *prefix, int len)</argsstring>
        <name>_dbus_get_install_root</name>
        <param>
          <type>char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>return the absolute path of the dbus installation </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for installation path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3272" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3272" bodyend="3305"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a3fca18052534ac1b1327b1f2c82fad3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_get_config_file_name</definition>
        <argsstring>(DBusString *config_file, char *s)</argsstring>
        <name>_dbus_get_config_file_name</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>config_file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>find config file either from installation or build root according to the following path layout install-root/ bin/dbus-daemon[d].exe etc/&lt;config-file&gt;.conf <emphasis>or</emphasis> etc/dbus-1/&lt;config-file&gt;.conf (the former above is what dbus4win uses, the latter above is what a &quot;normal&quot; Unix-style &quot;make install&quot; uses) </para>        </briefdescription>
        <detaileddescription>
<para>build-root/ bin/dbus-daemon[d].exe bus/&lt;config-file&gt;.conf </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3321" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3321" bodyend="3370"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gade479f90c1083346d74bc21af178d856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_lookup_session_address</definition>
        <argsstring>(dbus_bool_t *supported, DBusString *address, DBusError *error)</argsstring>
        <name>_dbus_lookup_session_address</name>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref> *</type>
          <declname>supported</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Determines the address of the session bus by querying a platform-specific method. </para>        </briefdescription>
        <detaileddescription>
<para>The first parameter will be a boolean specifying whether or not a dynamic session lookup is supported on this platform.</para><para>If supported is TRUE and the return value is <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, the address will be appended to <computeroutput>address</computeroutput>. If a failure happens, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and sets an error in <computeroutput>error</computeroutput>.</para><para>If supported is FALSE, ignore the return value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>supported</parametername>
</parameternamelist>
<parameterdescription>
<para>returns whether this method is supported </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusString" kindref="compound">DBusString</ref> where the address can be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="structDBusError" kindref="compound">DBusError</ref> to store the error in case of failure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success, <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if an error happened </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3374" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3374" bodyend="3381"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_append_keyring_directory_for_credentials</definition>
        <argsstring>(DBusString *directory, DBusCredentials *credentials)</argsstring>
        <name>_dbus_append_keyring_directory_for_credentials</name>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>directory</declname>
        </param>
        <param>
          <type><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref> *</type>
          <declname>credentials</declname>
        </param>
        <briefdescription>
<para>Appends the directory in which a keyring for the given credentials should be stored. </para>        </briefdescription>
        <detaileddescription>
<para>The credentials should have either a Windows or UNIX user in them. The directory should be an absolute path.</para><para>On UNIX the directory is ~/.dbus-keyrings while on Windows it should probably be something else, since the dotfile convention is not normal on Windows.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directory</parametername>
</parameternamelist>
<parameterdescription>
<para>string to append directory to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>credentials</parametername>
</parameternamelist>
<parameterdescription>
<para>credentials the directory should be for</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3397" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3397" bodyend="3475"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusCredentials_1gabfd7a1f681a91b45ba2f4e7461131827" compoundref="dbus-credentials_8c" startline="361" endline="366">_dbus_credentials_are_anonymous</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusCredentials_1ga462892f995f2932bf0eb3b843407e6d5" compoundref="dbus-credentials_8c" startline="268" endline="271">_dbus_credentials_get_unix_uid</references>
        <references refid="group__DBusSysdeps_1ga3d2f3fb32bb759cabe362ca2de383f7d" compoundref="dbus-sysdeps_8h" startline="105">DBUS_UID_UNSET</references>
        <references refid="group__DBusInternalsUtils_1gabdd1dc47f44e3d6702c86c68da9a0173" compoundref="dbus-userdb_8c" startline="461" endline="493">_dbus_homedir_from_uid</references>
        <references refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" compoundref="dbus-sysdeps_8c" startline="185" endline="193">_dbus_getenv</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" compoundref="dbus-string_8c" startline="935" endline="948">_dbus_string_append</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" compoundref="dbus-sysdeps-unix_8c" startline="2825" endline="2852">_dbus_concat_dir_and_file</references>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_file_exists</definition>
        <argsstring>(const char *file)</argsstring>
        <name>_dbus_file_exists</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Checks if a file exists. </para>        </briefdescription>
        <detaileddescription>
<para>File interface.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>full path to the file </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if file exists </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3483" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3483" bodyend="3491"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" compoundref="dbus-memory_8c" startline="461" endline="516">dbus_malloc</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusErrors_1ga8937f0b7cdf8554fa6305158ce453fbe" compoundref="dbus-errors_8c" startline="188" endline="202">dbus_error_init</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="structDBusError_1afb559175326de5b6b340e26204e92d72" compoundref="dbus-errors_8h" startline="51">DBusError::message</references>
        <references refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" compoundref="dbus-errors_8c" startline="211" endline="226">dbus_error_free</references>
        <referencedby refid="group__DBusSysdeps_1ga1895e860a4a9993cea584ec7e30dd71d" compoundref="dbus-sysdeps-win_8c" startline="3259" endline="3262">_dbus_get_is_errno_eagain_or_ewouldblock</referencedby>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a487a615e6c99df65e0ed72e963f97017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* _dbus_strerror</definition>
        <argsstring>(int error_number)</argsstring>
        <name>_dbus_strerror</name>
        <param>
          <type>int</type>
          <declname>error_number</declname>
        </param>
        <briefdescription>
<para>A wrapper around strerror() because some platforms may be lame and not have strerror(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_number</parametername>
</parameternamelist>
<parameterdescription>
<para>errno. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error description. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3501" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3501" bodyend="3628"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a89e62ddbb89c4ea6645eed45123483bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_win_set_error_from_win_error</definition>
        <argsstring>(DBusError *error, int code)</argsstring>
        <name>_dbus_win_set_error_from_win_error</name>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Assigns an error name and message corresponding to a Win32 error code to a <ref refid="structDBusError" kindref="compound">DBusError</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Does nothing if error is <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the error. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>the Win32 error code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3638" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3638" bodyend="3661"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-win_8c_1a87a04c239a01c7a03c7cee0ac11bf5b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_win_warn_win_error</definition>
        <argsstring>(const char *message, unsigned long code)</argsstring>
        <name>_dbus_win_warn_win_error</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3664" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3664" bodyend="3673"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga3bc1512aef42cea17a2aaacc7d8e7211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_delete_directory</definition>
        <argsstring>(const DBusString *filename, DBusError *error)</argsstring>
        <name>_dbus_delete_directory</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Removes a directory; Directory must be empty. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>directory filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>initialized error object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3683" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3683" bodyend="3703"/>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" compoundref="dbus-protocol_8h" startline="355">DBUS_ERROR_FAILED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6d80876bcae54f47cde79d0bce20321d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_path_is_absolute</definition>
        <argsstring>(const DBusString *filename)</argsstring>
        <name>_dbus_path_is_absolute</name>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Checks whether the filename is an absolute path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if an absolute path </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3712" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3712" bodyend="3720"/>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_check_setuid</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_check_setuid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><bold>NOTE</bold>: If you modify this function, please also consider making the corresponding change in GLib. </para>        </briefdescription>
        <detaileddescription>
<para>See glib/gutils.c:g_check_setuid().</para><para>Returns TRUE if the current process was executed as setuid (or an equivalent __libc_enable_secure is available). See: <ulink url="http://osdir.com/ml/linux.lfs.hardened/2007-04/msg00032.html">http://osdir.com/ml/linux.lfs.hardened/2007-04/msg00032.html</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3723" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3723" bodyend="3726"/>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1gaf80b18a5eff6d59c15f66029be352c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_save_socket_errno</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_save_socket_errno</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3729" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3729" bodyend="3732"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusSysdeps_1ga618db839cc75653ba05d6b5871049007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_restore_socket_errno</definition>
        <argsstring>(int saved_errno)</argsstring>
        <name>_dbus_restore_socket_errno</name>
        <param>
          <type>int</type>
          <declname>saved_errno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-win.c" line="3735" column="1" bodyfile="dbus/dbus-sysdeps-win.c" bodystart="3735" bodyend="3738"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-sysdeps.c<sp/>Wrappers<sp/>around<sp/>system/libc<sp/>features<sp/>(internal<sp/>to<sp/>D-BUS<sp/>implementation)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/>CodeFactory<sp/>AB</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Novell,<sp/>Inc.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Peter<sp/>Kümmel<sp/><sp/>&lt;syntheticpp@gmx.net&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Christian<sp/>Ehrlicher<sp/>&lt;ch.ehrlicher@gmx.de&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006-2013<sp/>Ralf<sp/>Habacker<sp/>&lt;ralf.habacker@freenet.de&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRSAFE_NO_DEPRECATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32_WINNT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WIN32_WINNT<sp/>0x0501</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sha.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-threads.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps-win.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-protocol.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-hash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sockets-win.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-nonce.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-credentials.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ws2tcpip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wincrypt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iphlpapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Declarations<sp/>missing<sp/>in<sp/>mingw&apos;s<sp/>and<sp/>windows<sp/>sdk<sp/>7.0<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/>WINAPI<sp/>ConvertStringSidToSidA<sp/>(LPCSTR<sp/><sp/>StringSid,<sp/>PSID<sp/>*Sid);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>BOOL<sp/>WINAPI<sp/>ConvertSidToStringSidA<sp/>(PSID<sp/>Sid,<sp/>LPSTR<sp/>*StringSid);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_ERRNO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mbstring.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_WS2TCPIP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>getaddrinfo<sp/>for<sp/>Windows<sp/>CE<sp/>(and<sp/>Windows).<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ws2tcpip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>O_BINARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>O_BINARY<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PROCESS_QUERY_LIMITED_INFORMATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>MinGW32<sp/>&lt;<sp/>4<sp/>does<sp/>not<sp/>define<sp/>this<sp/>value<sp/>in<sp/>its<sp/>headers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROCESS_QUERY_LIMITED_INFORMATION<sp/>(0x1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socklen_t;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">_dbus_win_set_errno<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>errno<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>is_winxp_sp3_or_lower();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>_MIB_TCPROW_EX<sp/>and<sp/>friends<sp/>are<sp/>not<sp/>available<sp/>in<sp/>system<sp/>headers</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>are<sp/>mapped<sp/>to<sp/>attribute<sp/>identical<sp/>...OWNER_PID<sp/>typedefs.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MIB_TCPROW_OWNER_PID<sp/>_MIB_TCPROW_EX;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MIB_TCPTABLE_OWNER_PID<sp/>MIB_TCPTABLE_EX;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>PMIB_TCPTABLE_OWNER_PID<sp/>PMIB_TCPTABLE_EX;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>DWORD<sp/>(WINAPI<sp/>*ProcAllocateAndGetTcpExtTableFromStack)(PMIB_TCPTABLE_EX*,BOOL,HANDLE,DWORD,DWORD);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ProcAllocateAndGetTcpExtTableFromStack<sp/>lpfnAllocateAndGetTcpExTableFromStack<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL</highlight></codeline>
<codeline lineno="121"><highlight class="normal">load_ex_ip_helper_procedures(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>HMODULE<sp/>hModule<sp/>=<sp/>LoadLibrary<sp/>(</highlight><highlight class="stringliteral">&quot;iphlpapi.dll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hModule<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>load<sp/>iphlpapi.dll\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>lpfnAllocateAndGetTcpExTableFromStack<sp/>=<sp/>(ProcAllocateAndGetTcpExtTableFromStack)GetProcAddress<sp/>(hModule,<sp/></highlight><highlight class="stringliteral">&quot;AllocateAndGetTcpExTableFromStack&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpfnAllocateAndGetTcpExTableFromStack<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>function<sp/>AllocateAndGetTcpExTableFromStack<sp/>in<sp/>iphlpapi.dll\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal">get_pid_from_extended_tcp_table(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peer_port)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>DWORD<sp/>errorCode,<sp/>size,<sp/>i;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>MIB_TCPTABLE_OWNER_PID<sp/>*tcp_table;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((errorCode<sp/>=</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetExtendedTcpTable<sp/>(<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;size,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<sp/>AF_INET,<sp/>TCP_TABLE_OWNER_PID_ALL,<sp/>0))<sp/>==<sp/>ERROR_INSUFFICIENT_BUFFER)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tcp_table<sp/>=<sp/>(MIB_TCPTABLE_OWNER_PID<sp/>*)<sp/><ref refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" kindref="member">dbus_malloc</ref><sp/>(size);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tcp_table<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_warn_win_error<sp/>(</highlight><highlight class="stringliteral">&quot;unexpected<sp/>error<sp/>returned<sp/>from<sp/>GetExtendedTcpTable&quot;</highlight><highlight class="normal">,<sp/>errorCode);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((errorCode<sp/>=<sp/>GetExtendedTcpTable<sp/>(tcp_table,<sp/>&amp;size,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<sp/>AF_INET,<sp/>TCP_TABLE_OWNER_PID_ALL,<sp/>0))<sp/>!=<sp/>NO_ERROR)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>fetching<sp/>tcp<sp/>table<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)errorCode);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(tcp_table);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tcp_table-&gt;dwNumEntries;<sp/>i++)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MIB_TCPROW_OWNER_PID<sp/>*p<sp/>=<sp/>&amp;tcp_table-&gt;table[i];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_address<sp/>=<sp/>ntohl<sp/>(p-&gt;dwLocalAddr);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_port<sp/>=<sp/>ntohs<sp/>(p-&gt;dwLocalPort);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;dwState<sp/>==<sp/>MIB_TCP_STATE_ESTAB</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>local_address<sp/>==<sp/>INADDR_LOOPBACK<sp/>&amp;&amp;<sp/>local_port<sp/>==<sp/>peer_port)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>p-&gt;dwOwningPid;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(tcp_table);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;got<sp/>pid<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></highlight></codeline>
<codeline lineno="199"><highlight class="normal">get_pid_from_tcp_ex_table(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peer_port)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>DWORD<sp/>errorCode,<sp/>i;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>PMIB_TCPTABLE_EX<sp/>tcp_table<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!load_ex_ip_helper_procedures<sp/>())</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>not<sp/>been<sp/>able<sp/>to<sp/>load<sp/>iphelper<sp/>procedures\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>errorCode<sp/>=<sp/>lpfnAllocateAndGetTcpExTableFromStack<sp/>(&amp;tcp_table,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,<sp/>GetProcessHeap(),<sp/>0,<sp/>2);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCode<sp/>!=<sp/>NO_ERROR)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>not<sp/>been<sp/>able<sp/>to<sp/>call<sp/>AllocateAndGetTcpExTableFromStack()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tcp_table-&gt;dwNumEntries;<sp/>i++)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_MIB_TCPROW_EX<sp/>*p<sp/>=<sp/>&amp;tcp_table-&gt;table[i];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_port<sp/>=<sp/>ntohs<sp/>(p-&gt;dwLocalPort);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_address<sp/>=<sp/>ntohl<sp/>(p-&gt;dwLocalAddr);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(local_address<sp/>==<sp/>INADDR_LOOPBACK<sp/>&amp;&amp;<sp/>local_port<sp/>==<sp/>peer_port)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>p-&gt;dwOwningPid;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>HeapFree<sp/>(GetProcessHeap(),<sp/>0,<sp/>tcp_table);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;got<sp/>pid<sp/>%lu\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></highlight></codeline>
<codeline lineno="245"><highlight class="normal">_dbus_get_peer_pid_from_tcp_handle<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>handle)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_storage<sp/>addr;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>socklen_t<sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(addr);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peer_port;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>is_localhost<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>getpeername<sp/>(handle,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;addr,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr.ss_family<sp/>==<sp/>AF_INET)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>*)<sp/>&amp;addr;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>peer_port<sp/>=<sp/>ntohs<sp/>(s-&gt;sin_port);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_localhost<sp/>=<sp/>(ntohl<sp/>(s-&gt;sin_addr.s_addr)<sp/>==<sp/>INADDR_LOOPBACK);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addr.ss_family<sp/>==<sp/>AF_INET6)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;FIXME<sp/>[61922]:<sp/>IPV6<sp/>support<sp/>not<sp/>working<sp/>on<sp/>windows\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>sockaddr_in6<sp/>*s<sp/>=<sp/>(struct<sp/>sockaddr_in6<sp/>*<sp/>)&amp;addr;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peer_port<sp/>=<sp/>ntohs<sp/>(s-&gt;sin6_port);</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_localhost<sp/>=<sp/>(memcmp(s-&gt;sin6_addr.s6_addr,<sp/>in6addr_loopback.s6_addr,<sp/>16)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(&quot;IPV6<sp/>%08x<sp/>%08x\n&quot;,<sp/>s-&gt;sin6_addr.s6_addr,<sp/>in6addr_loopback.s6_addr);</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>idea<sp/>what<sp/>address<sp/>family<sp/>%d<sp/>is\n&quot;</highlight><highlight class="normal">,<sp/>addr.ss_family);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_localhost)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>fetch<sp/>process<sp/>id<sp/>from<sp/>remote<sp/>process\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(peer_port<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>not<sp/>been<sp/>able<sp/>to<sp/>fetch<sp/>tcp<sp/>peer<sp/>port<sp/>from<sp/>connection\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>get<sp/>peers<sp/>pid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>get_pid_from_extended_tcp_table<sp/>(peer_port);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>get_pid_from_tcp_ex_table<sp/>(peer_port);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Convert<sp/>GetLastError()<sp/>to<sp/>a<sp/>dbus<sp/>error.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="303"><highlight class="normal">_dbus_win_error_from_last_error<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(GetLastError())</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_NO_MORE_FILES:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_TOO_MANY_OPEN_FILES:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga7c96d165c4ebee51e939969934d18027" kindref="member">DBUS_ERROR_LIMITS_EXCEEDED</ref>;<sp/></highlight><highlight class="comment">/*<sp/>kernel<sp/>out<sp/>of<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_ACCESS_DENIED:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_CANNOT_MAKE:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga6d3940075c1fbd1bfe06626b59723a16" kindref="member">DBUS_ERROR_ACCESS_DENIED</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_NOT_ENOUGH_MEMORY:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_FILE_EXISTS:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga7c65e9730331eb19b7d6b128a79361ef" kindref="member">DBUS_ERROR_FILE_EXISTS</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_FILE_NOT_FOUND:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR_PATH_NOT_FOUND:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gaf5ad9572cc5935d4655635003073c21a" kindref="member">DBUS_ERROR_FILE_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="334"><highlight class="normal">_dbus_win_error_string<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_number)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>FormatMessageA<sp/>(FORMAT_MESSAGE_ALLOCATE_BUFFER<sp/>|</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FORMAT_MESSAGE_IGNORE_INSERTS<sp/>|</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FORMAT_MESSAGE_FROM_SYSTEM,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>error_number,<sp/>0,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPSTR)<sp/>&amp;msg,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg[strlen<sp/>(msg)<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>msg[strlen<sp/>(msg)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg[strlen<sp/>(msg)<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>msg[strlen<sp/>(msg)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal">_dbus_win_free_error_string<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>LocalFree<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member">_dbus_read_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count)</highlight></codeline>
<codeline lineno="382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>_dbus_string_get_length<sp/>(buffer);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member">_dbus_string_lengthen</ref><sp/>(buffer,<sp/>count))</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_errno<sp/>(ENOMEM);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/><ref refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" kindref="member">_dbus_string_get_data_len</ref><sp/>(buffer,<sp/>start,<sp/>count);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recv:<sp/>count=%d<sp/>fd=%d\n&quot;</highlight><highlight class="normal">,<sp/>count,<sp/>fd);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>bytes_read<sp/>=<sp/>recv<sp/>(fd,<sp/>data,<sp/>count,<sp/>0);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recv:<sp/>failed:<sp/>%s<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>_dbus_strerror<sp/>(errno),<sp/>errno);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;recv:<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>length<sp/>back<sp/>(note<sp/>that<sp/>this<sp/>doesn&apos;t<sp/>actually<sp/>realloc<sp/>anything)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>length<sp/>back<sp/>(doesn&apos;t<sp/>actually<sp/>realloc)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(buffer,<sp/>start<sp/>+<sp/>bytes_read);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(buffer,<sp/>start,<sp/>bytes_read);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_read;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal">}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" kindref="member">_dbus_write_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer,<sp/>start,<sp/>len);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;send:<sp/>len=%d<sp/>fd=%d\n&quot;</highlight><highlight class="normal">,<sp/>len,<sp/>fd);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/>send<sp/>(fd,<sp/>data,<sp/>len,<sp/>0);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;send:<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes_written<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;send:<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(buffer,<sp/>start,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="493" refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga701f9b3087c196404f66ff95b4ace0b8" kindref="member">_dbus_close_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closesocket<sp/>(fd)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>close<sp/>socket:<sp/>socket=%d,<sp/>,<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;_dbus_close_socket:<sp/>socket=%d,<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>fd);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">_dbus_win_handle_set_close_on_exec<sp/>(HANDLE<sp/>handle)</highlight></codeline>
<codeline lineno="525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!SetHandleInformation(<sp/>(HANDLE)<sp/>handle,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE_FLAG_INHERIT<sp/>|<sp/>HANDLE_FLAG_PROTECT_FROM_CLOSE,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="comment">/*disable<sp/>both<sp/>flags*/</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_warn_win_error<sp/>(</highlight><highlight class="stringliteral">&quot;Disabling<sp/>socket<sp/>handle<sp/>inheritance<sp/>failed:&quot;</highlight><highlight class="normal">,<sp/>GetLastError());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="542"><highlight class="normal">_dbus_set_fd_nonblocking<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>u_long<sp/>one<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ioctlsocket<sp/>(handle,<sp/>FIONBIO,<sp/>&amp;one)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>set<sp/>socket<sp/>%d:%d<sp/>to<sp/>nonblocking:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>handle,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga02da720105c2a2397b7c687c5ca81174" kindref="member">_dbus_write_socket_two</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer1,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start1,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len1,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer2,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start2,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len2)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>WSABUF<sp/>vectors[2];</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data1;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data2;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>DWORD<sp/>bytes_written;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(buffer1<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(len1<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(len2<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>data1<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer1,<sp/>start1,<sp/>len1);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer2<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>data2<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(buffer2,<sp/>start2,<sp/>len2);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>vectors[0].buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data1;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>vectors[0].len<sp/>=<sp/>len1;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>vectors[1].buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data2;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>vectors[1].len<sp/>=<sp/>len2;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/>again:</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WSASend:<sp/>len1+2=%d+%d<sp/>fd=%d\n&quot;</highlight><highlight class="normal">,<sp/>len1,<sp/>len2,<sp/>fd);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>rc<sp/>=<sp/>WSASend<sp/>(fd,<sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectors,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/>?<sp/>2<sp/>:<sp/>1,<sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bytes_written,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WSASend:<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes_written<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WSASend:<sp/>=<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="647"><highlight class="normal">_dbus_socket_is_invalid<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd<sp/>==<sp/>INVALID_SOCKET<sp/>?<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>:<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">_dbus_connect_named_pipe<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*path,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="675"><highlight class="normal">_dbus_win_startup_winsock<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Straight<sp/>from<sp/>MSDN,<sp/>deuglified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Protected<sp/>by<sp/>_DBUS_LOCK_sysdeps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>beenhere<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>WORD<sp/>wVersionRequested;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>WSADATA<sp/>wsaData;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" kindref="member">_DBUS_LOCK</ref><sp/>(sysdeps))</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beenhere)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>wVersionRequested<sp/>=<sp/>MAKEWORD<sp/>(2,<sp/>0);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>WSAStartup<sp/>(wVersionRequested,<sp/>&amp;wsaData);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>initialize<sp/>WinSock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" kindref="member">_dbus_abort</ref><sp/>();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Confirm<sp/>that<sp/>the<sp/>WinSock<sp/>DLL<sp/>supports<sp/>2.0.<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>DLL</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/>*<sp/>supports<sp/>versions<sp/>greater<sp/>than<sp/>2.0<sp/>in<sp/>addition<sp/>to<sp/>2.0,<sp/>it<sp/>will</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/>*<sp/>still<sp/>return<sp/>2.0<sp/>in<sp/>wVersion<sp/>since<sp/>that<sp/>is<sp/>the<sp/>version<sp/>we</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/>*<sp/>requested.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LOBYTE<sp/>(wsaData.wVersion)<sp/>!=<sp/>2<sp/>||</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HIBYTE<sp/>(wsaData.wVersion)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;No<sp/>usable<sp/>WinSock<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" kindref="member">_dbus_abort</ref><sp/>();</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>beenhere<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" kindref="member">_DBUS_UNLOCK</ref><sp/>(sysdeps);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>UTF<sp/>/<sp/>string<sp/>code</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="group__DBusSysdeps_1gaffaf8b5bb832c20a8ccb10f012920776" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1gaffaf8b5bb832c20a8ccb10f012920776" kindref="member">_dbus_printf_string_upper_bound</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>args)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MSVCRT&apos;s<sp/>vsnprintf<sp/>semantics<sp/>are<sp/>a<sp/>bit<sp/>different<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1024];</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>va_list<sp/>args_copy;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>bufsize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>DBUS_VA_COPY<sp/>(args_copy,<sp/>args);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>_vsnprintf<sp/>(buf,<sp/>bufsize<sp/>-<sp/>1,<sp/>format,<sp/>args_copy);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>va_end<sp/>(args_copy);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>-1)<sp/></highlight><highlight class="comment">/*<sp/>try<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bufsize<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>malloc<sp/>(bufsize);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_VA_COPY<sp/>(args_copy,<sp/>args);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>_vsnprintf<sp/>(p,<sp/>bufsize<sp/>-<sp/>1,<sp/>format,<sp/>args_copy);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>va_end<sp/>(args_copy);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(p);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="780"><highlight class="normal">_dbus_win_utf8_to_utf16<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>s;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*retval;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref><sp/>(&amp;s,<sp/>str);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga65f0f04b7c9371406fc87343f691e8da" kindref="member">_dbus_string_validate_utf8</ref><sp/>(&amp;s,<sp/>0,<sp/>_dbus_string_get_length<sp/>(&amp;s)))</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>UTF-8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>MultiByteToWideChar<sp/>(CP_UTF8,<sp/>0,<sp/>str,<sp/>-1,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_error_from_win_error<sp/>(error,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member">dbus_new</ref><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!retval)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MultiByteToWideChar<sp/>(CP_UTF8,<sp/>0,<sp/>str,<sp/>-1,<sp/>retval,<sp/>n)<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(retval);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;MultiByteToWideChar<sp/>inconsistency&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="829"><highlight class="normal">_dbus_win_utf16_to_utf8<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*retval;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/>WideCharToMultiByte<sp/>(CP_UTF8,<sp/>0,<sp/>str,<sp/>-1,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_error_from_win_error<sp/>(error,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" kindref="member">dbus_malloc</ref><sp/>(n);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!retval)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WideCharToMultiByte<sp/>(CP_UTF8,<sp/>0,<sp/>str,<sp/>-1,<sp/>retval,<sp/>n,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(retval);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WideCharToMultiByte<sp/>inconsistency&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/>************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="872"><highlight class="normal">_dbus_win_account_to_sid<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*waccount,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**ppsid,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>DWORD<sp/>sid_length,<sp/>wdomain_length;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>SID_NAME_USE<sp/>use;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*wdomain;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>*ppsid<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>sid_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/>wdomain_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LookupAccountNameW<sp/>(<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>waccount,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;sid_length,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;wdomain_length,<sp/>&amp;use)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetLastError<sp/>()<sp/>!=<sp/>ERROR_INSUFFICIENT_BUFFER)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_error_from_win_error<sp/>(error,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>*ppsid<sp/>=<sp/><ref refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" kindref="member">dbus_malloc</ref><sp/>(sid_length);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*ppsid)</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>wdomain<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member">dbus_new</ref><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">,<sp/>wdomain_length);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wdomain)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out1;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!LookupAccountNameW<sp/>(<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>waccount,<sp/>(PSID)<sp/>*ppsid,<sp/>&amp;sid_length,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdomain,<sp/>&amp;wdomain_length,<sp/>&amp;use))</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_error_from_win_error<sp/>(error,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out2;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsValidSid<sp/>((PSID)<sp/>*ppsid))</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>SID&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out2;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">out2:</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(wdomain);</highlight></codeline>
<codeline lineno="924"><highlight class="normal">out1:</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!retval)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(*ppsid);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ppsid<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944" refid="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1b30aa55e8758ed6e1b62e0f86866543" kindref="member">_dbus_pid_for_log</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="945"><highlight class="normal">{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid</ref><sp/>();</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>is_winxp_sp3_or_lower()</highlight></codeline>
<codeline lineno="952"><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/>OSVERSIONINFOEX<sp/>osvi;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/>DWORDLONG<sp/>dwlConditionMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>op=VER_LESS_EQUAL;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>OSVERSIONINFOEX<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/>ZeroMemory(&amp;osvi,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(OSVERSIONINFOEX));</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/>osvi.dwOSVersionInfoSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(OSVERSIONINFOEX);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>osvi.dwMajorVersion<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/>osvi.dwMinorVersion<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/>osvi.wServicePackMajor<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/>osvi.wServicePackMinor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>condition<sp/>mask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/>VER_SET_CONDITION(<sp/>dwlConditionMask,<sp/>VER_MAJORVERSION,<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/>VER_SET_CONDITION(<sp/>dwlConditionMask,<sp/>VER_MINORVERSION,<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/>VER_SET_CONDITION(<sp/>dwlConditionMask,<sp/>VER_SERVICEPACKMAJOR,<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/>VER_SET_CONDITION(<sp/>dwlConditionMask,<sp/>VER_SERVICEPACKMINOR,<sp/>op<sp/>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VerifyVersionInfo(</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;osvi,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VER_MAJORVERSION<sp/>|<sp/>VER_MINORVERSION<sp/>|</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VER_SERVICEPACKMAJOR<sp/>|<sp/>VER_SERVICEPACKMINOR,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dwlConditionMask);</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="988"><highlight class="normal">_dbus_getsid(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**sid,<sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref><sp/>process_id)</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/>HANDLE<sp/>process_token<sp/>=<sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>TOKEN_USER<sp/>*token_user<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>DWORD<sp/>n;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>PSID<sp/>psid;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>HANDLE<sp/>process_handle<sp/>=<sp/>OpenProcess(is_winxp_sp3_or_lower()<sp/>?<sp/>PROCESS_QUERY_INFORMATION<sp/>:<sp/>PROCESS_QUERY_LIMITED_INFORMATION,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>process_id);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!OpenProcessToken<sp/>(process_handle,<sp/>TOKEN_QUERY,<sp/>&amp;process_token))</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_warn_win_error<sp/>(</highlight><highlight class="stringliteral">&quot;OpenProcessToken<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!GetTokenInformation<sp/>(process_token,<sp/>TokenUser,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>&amp;n)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>GetLastError<sp/>()<sp/>!=<sp/>ERROR_INSUFFICIENT_BUFFER)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(token_user<sp/>=<sp/>alloca<sp/>(n))<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!GetTokenInformation<sp/>(process_token,<sp/>TokenUser,<sp/>token_user,<sp/>n,<sp/>&amp;n))</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_warn_win_error<sp/>(</highlight><highlight class="stringliteral">&quot;GetTokenInformation<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>psid<sp/>=<sp/>token_user-&gt;User.Sid;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsValidSid<sp/>(psid))</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose(</highlight><highlight class="stringliteral">&quot;%s<sp/>invalid<sp/>sid\n&quot;</highlight><highlight class="normal">,__FUNCTION__);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ConvertSidToStringSidA<sp/>(psid,<sp/>sid))</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose(</highlight><highlight class="stringliteral">&quot;%s<sp/>invalid<sp/>sid\n&quot;</highlight><highlight class="normal">,__FUNCTION__);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment">//okay:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal">failed:</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>CloseHandle<sp/>(process_handle);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(process_token<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseHandle<sp/>(process_token);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/>_dbus_verbose(</highlight><highlight class="stringliteral">&quot;_dbus_getsid()<sp/>got<sp/>&apos;%s&apos;<sp/>and<sp/>returns<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>*sid,<sp/>retval);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/>pipes</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/>************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1052" refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae96a3f400324b065f78a865a86454d09" kindref="member">_dbus_full_duplex_pipe</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd1,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd2,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>blocking,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>SOCKET<sp/>temp,<sp/>socket1<sp/>=<sp/>-1,<sp/>socket2<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>saddr;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>u_long<sp/>arg;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_win_startup_winsock<sp/>())</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/>temp<sp/>=<sp/>socket<sp/>(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out0;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" kindref="member">_DBUS_ZERO</ref><sp/>(saddr);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>saddr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/>saddr.sin_port<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>saddr.sin_addr.s_addr<sp/>=<sp/>htonl<sp/>(INADDR_LOOPBACK);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind<sp/>(temp,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;saddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(saddr))<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out0;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen<sp/>(temp,<sp/>1)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out0;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(saddr);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockname<sp/>(temp,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;saddr,<sp/>&amp;len)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out0;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>socket1<sp/>=<sp/>socket<sp/>(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket1<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out0;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connect<sp/>(socket1,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/><sp/>*)&amp;saddr,<sp/>len)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out1;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/>socket2<sp/>=<sp/>accept<sp/>(temp,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;saddr,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(socket2<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out1;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blocking)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ioctlsocket<sp/>(socket1,<sp/>FIONBIO,<sp/>&amp;arg)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out2;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arg<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ioctlsocket<sp/>(socket2,<sp/>FIONBIO,<sp/>&amp;arg)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out2;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>*fd1<sp/>=<sp/>socket1;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>*fd2<sp/>=<sp/>socket2;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;full-duplex<sp/>pipe<sp/>%d:%d<sp/>&lt;-&gt;<sp/>%d:%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fd1,<sp/>socket1,<sp/>*fd2,<sp/>socket2);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>closesocket<sp/>(temp);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal">out2:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>closesocket<sp/>(socket2);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">out1:</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>closesocket<sp/>(socket1);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">out0:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>closesocket<sp/>(temp);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>setup<sp/>socket<sp/>pair:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169" refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gac1cdb5995dcef6dd54399ab610ae689a" kindref="member">_dbus_poll</ref><sp/>(<ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fds,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_fds,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout_milliseconds)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_CHRIS_IMPL<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_CHRIS_IMPL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_POLL_CHAR_BUFFER_SIZE<sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[DBUS_POLL_CHAR_BUFFER_SIZE];</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msgp;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ready;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_STACK_WSAEVENTS<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>WSAEVENT<sp/>eventsOnStack[DBUS_STACK_WSAEVENTS];</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>WSAEVENT<sp/>*pEvents<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fds<sp/>&gt;<sp/>DBUS_STACK_WSAEVENTS)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>pEvents<sp/>=<sp/>calloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(WSAEVENT),<sp/>n_fds);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>pEvents<sp/>=<sp/>eventsOnStack;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>msgp<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;WSAEventSelect:<sp/>to=%d\n\t&quot;</highlight><highlight class="normal">,<sp/>timeout_milliseconds);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;R:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member">_DBUS_POLLOUT</ref>)</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;W:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;E:%d\n\t&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>more<sp/>robust<sp/>code<sp/>for<sp/>long<sp/><sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create<sp/>on<sp/>heap<sp/>when<sp/>msg[]<sp/>becomes<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msgp<sp/>&gt;=<sp/>msg<sp/>+<sp/>DBUS_POLL_CHAR_BUFFER_SIZE)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;buffer<sp/>overflow<sp/>in<sp/>_dbus_poll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,msg);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WSAEVENT<sp/>ev;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lNetworkEvents<sp/>=<sp/>FD_OOB;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>WSACreateEvent();</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lNetworkEvents<sp/>|=<sp/>FD_READ<sp/>|<sp/>FD_ACCEPT<sp/>|<sp/>FD_CLOSE;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member">_DBUS_POLLOUT</ref>)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lNetworkEvents<sp/>|=<sp/>FD_WRITE<sp/>|<sp/>FD_CONNECT;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WSAEventSelect(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>ev,<sp/>lNetworkEvents);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pEvents[i]<sp/>=<sp/>ev;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>ready<sp/>=<sp/>WSAWaitForMultipleEvents<sp/>(n_fds,<sp/>pEvents,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>timeout_milliseconds,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DBUS_SOCKET_API_RETURNS_ERROR<sp/>(ready))</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>WSAEWOULDBLOCK)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WSAWaitForMultipleEvents:<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>==<sp/>WSA_WAIT_TIMEOUT)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WSAWaitForMultipleEvents:<sp/>WSA_WAIT_TIMEOUT\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>&gt;=<sp/>WSA_WAIT_EVENT_0<sp/>&amp;&amp;<sp/>ready<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(WSA_WAIT_EVENT_0<sp/>+<sp/>n_fds))</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;WSAWaitForMultipleEvents:<sp/>=%d\n\t&quot;</highlight><highlight class="normal">,<sp/>ready);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WSANETWORKEVENTS<sp/>ne;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WSAEnumNetworkEvents(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>pEvents[i],<sp/>&amp;ne);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ne.lNetworkEvents<sp/>&amp;<sp/>(FD_READ<sp/>|<sp/>FD_ACCEPT<sp/>|<sp/>FD_CLOSE))</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ne.lNetworkEvents<sp/>&amp;<sp/>(FD_WRITE<sp/>|<sp/>FD_CONNECT))</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member">_DBUS_POLLOUT</ref>;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ne.lNetworkEvents<sp/>&amp;<sp/>(FD_OOB))</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member">_DBUS_POLLERR</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ne.lNetworkEvents<sp/>&amp;<sp/>(FD_READ<sp/>|<sp/>FD_ACCEPT<sp/>|<sp/>FD_CLOSE))</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;R:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ne.lNetworkEvents<sp/>&amp;<sp/>(FD_WRITE<sp/>|<sp/>FD_CONNECT))</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;W:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ne.lNetworkEvents<sp/>&amp;<sp/>(FD_OOB))</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;E:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;lNetworkEvents:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>ne.lNetworkEvents);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ne.lNetworkEvents)</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret++;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WSAEventSelect(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>pEvents[i],<sp/>0);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,msg);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;WSAWaitForMultipleEvents:<sp/>failed<sp/>for<sp/>unknown<sp/>reason!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WSACloseEvent(pEvents[i]);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fds<sp/>&gt;<sp/>DBUS_STACK_WSAEVENTS)</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>free(pEvents);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_CHRIS_IMPL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBUS_POLL_CHAR_BUFFER_SIZE<sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[DBUS_POLL_CHAR_BUFFER_SIZE];</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msgp;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>fd_set<sp/>read_set,<sp/>write_set,<sp/>err_set;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_fd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ready;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;read_set);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;write_set);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>FD_ZERO<sp/>(&amp;err_set);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>msgp<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;select:<sp/>to=%d\n\t&quot;</highlight><highlight class="normal">,<sp/>timeout_milliseconds);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;R:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member">_DBUS_POLLOUT</ref>)</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;W:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;E:%d\n\t&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>more<sp/>robust<sp/>code<sp/>for<sp/>long<sp/><sp/>msg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create<sp/>on<sp/>heap<sp/>when<sp/>msg[]<sp/>becomes<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msgp<sp/>&gt;=<sp/>msg<sp/>+<sp/>DBUS_POLL_CHAR_BUFFER_SIZE)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;buffer<sp/>overflow<sp/>in<sp/>_dbus_poll&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,msg);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];<sp/></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>)</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;read_set);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10e65e6721451e92361497b2efaa758f" kindref="member">events</ref><sp/>&amp;<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member">_DBUS_POLLOUT</ref>)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;write_set);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;err_set);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_fd<sp/>=<sp/>MAX<sp/>(max_fd,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>random<sp/>lockups<sp/>with<sp/>send(),<sp/>for<sp/>lack<sp/>of<sp/>a<sp/>better<sp/>solution<sp/>so<sp/>far</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>tv.tv_sec<sp/>=<sp/>timeout_milliseconds<sp/>&lt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>timeout_milliseconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>tv.tv_usec<sp/>=<sp/>timeout_milliseconds<sp/>&lt;<sp/>0<sp/>?<sp/>0<sp/>:<sp/>(timeout_milliseconds<sp/>%<sp/>1000)<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>ready<sp/>=<sp/>select<sp/>(max_fd<sp/>+<sp/>1,<sp/>&amp;read_set,<sp/>&amp;write_set,<sp/>&amp;err_set,<sp/>&amp;tv);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DBUS_SOCKET_API_RETURNS_ERROR<sp/>(ready))</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>!=<sp/>WSAEWOULDBLOCK)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;select:<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;select:<sp/>=<sp/>0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ready<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_VERBOSE_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;select:<sp/>=<sp/>%d:\n\t&quot;</highlight><highlight class="normal">,<sp/>ready);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;read_set))</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;R:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;write_set))</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;W:%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;err_set))</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;E:%d\n\t&quot;</highlight><highlight class="normal">,<sp/>fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgp<sp/>+=<sp/>sprintf<sp/>(msgp,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,msg);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusPollFD" kindref="compound">DBusPollFD</ref><sp/>*fdp<sp/>=<sp/>&amp;fds[i];</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;read_set))</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga96b5ba58b9939d789bfece0d9bb82f41" kindref="member">_DBUS_POLLIN</ref>;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;write_set))</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga0cb1ace07be145e0b908687e99b5f161" kindref="member">_DBUS_POLLOUT</ref>;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET<sp/>(fdp-&gt;<ref refid="structDBusPollFD_1a10b23977d2f696abfd276b9077f8c97e" kindref="member">fd</ref>,<sp/>&amp;err_set))</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdp-&gt;<ref refid="structDBusPollFD_1a24bc29c766b8bbddc5da052e7a46bc9e" kindref="member">revents</ref><sp/>|=<sp/><ref refid="group__DBusSysdeps_1ga231164196ff407eccb732452a2d36468" kindref="member">_DBUS_POLLERR</ref>;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ready;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>USE_CHRIS_IMPL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1437"><highlight class="comment">Original<sp/>CVS<sp/>version<sp/>of<sp/>dbus-sysdeps.c</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1439"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-sysdeps.c<sp/>Wrappers<sp/>around<sp/>system/libc<sp/>features<sp/>(internal<sp/>to<sp/>D-Bus<sp/>implementation)</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/>CodeFactory<sp/>AB</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Novell,<sp/>Inc.</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472" refid="group__DBusSysdeps_1ga203e3257b50597a8fe7757c920474a20" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga203e3257b50597a8fe7757c920474a20" kindref="member">_dbus_exit</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/>_exit<sp/>(code);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489" refid="group__DBusSysdeps_1gaa3adf90f6e47d30eeacf0a27d1a09ee5" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaa3adf90f6e47d30eeacf0a27d1a09ee5" kindref="member">_dbus_connect_tcp_socket</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*host,</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*port,</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*family,</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_connect_tcp_socket_with_nonce<sp/>(host,<sp/>port,<sp/>family,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>error);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal">_dbus_connect_tcp_socket_with_nonce<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*host,</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*port,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*family,</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*noncefile,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>-1,<sp/>res;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>hints;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>*ai,<sp/>*tmp;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_win_startup_winsock<sp/>())</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" kindref="member">_DBUS_ZERO</ref><sp/>(hints);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!family)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_UNSPEC;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv4&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" kindref="member">DBUS_ERROR_INVALID_ARGS</ref>,</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>address<sp/>family<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>family);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>hints.ai_protocol<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>hints.ai_socktype<sp/>=<sp/>SOCK_STREAM;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AI_ADDRCONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>AI_ADDRCONFIG;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>getaddrinfo(host,<sp/>port,<sp/>&amp;hints,<sp/>&amp;ai))<sp/>!=<sp/>0<sp/>||<sp/>!ai)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(res),</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>lookup<sp/>host/port:<sp/>\&quot;%s:%s\&quot;:<sp/>%s<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>port,<sp/>_dbus_strerror(res),<sp/>res);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tmp)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>socket<sp/>(tmp-&gt;ai_family,<sp/>SOCK_STREAM,<sp/>0))<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>socket:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(connect<sp/>(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>tmp-&gt;ai_addr,<sp/>tmp-&gt;ai_addrlen)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket(fd);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp-&gt;ai_next;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>connect<sp/>to<sp/>socket<sp/>\&quot;%s:%s\&quot;<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host,<sp/>port,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(noncefile<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>noncefileStr;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>ret;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;noncefileStr)<sp/>||</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(&amp;noncefileStr,<sp/>noncefile))</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket<sp/>(fd);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>_dbus_send_nonce<sp/>(fd,<sp/>&amp;noncefileStr,<sp/>error);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;noncefileStr);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket<sp/>(fd);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Every<sp/>SOCKET<sp/>is<sp/>also<sp/>a<sp/>HANDLE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>_dbus_win_handle_set_close_on_exec<sp/>((HANDLE)<sp/>fd);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(fd,<sp/>error))</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closesocket<sp/>(fd);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636" refid="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gafdae31b3b61299dbaaccfcb1205a6f30" kindref="member">_dbus_listen_tcp_socket</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*host,</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*port,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*family,</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/>*retport,</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fds_p,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nlisten_fd<sp/>=<sp/>0,<sp/>*listen_fd<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>res,<sp/>i,<sp/>port_num<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>hints;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">addrinfo<sp/>*ai,<sp/>*tmp;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>Vista,<sp/>sockaddr_gen<sp/>must<sp/>be<sp/>a<sp/>sockaddr_in6,<sp/>and<sp/>not<sp/>a<sp/>sockaddr_in6_old</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//That&apos;s<sp/>required<sp/>for<sp/>family<sp/>==<sp/>IPv6(which<sp/>is<sp/>the<sp/>default<sp/>on<sp/>Vista<sp/>if<sp/>family<sp/>is<sp/>not<sp/>given)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//So<sp/>we<sp/>use<sp/>our<sp/>own<sp/>union<sp/>instead<sp/>of<sp/>sockaddr_gen:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>Address;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>AddressIn;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in6<sp/>AddressIn6;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>}<sp/>mysockaddr_gen;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/>*fds_p<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_win_startup_winsock<sp/>())</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" kindref="member">_DBUS_ZERO</ref><sp/>(hints);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!family)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_UNSPEC;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv4&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(family,<sp/></highlight><highlight class="stringliteral">&quot;ipv6&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>hints.ai_family<sp/>=<sp/>AF_INET6;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" kindref="member">DBUS_ERROR_INVALID_ARGS</ref>,</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>address<sp/>family<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>family);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/>hints.ai_protocol<sp/>=<sp/>IPPROTO_TCP;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/>hints.ai_socktype<sp/>=<sp/>SOCK_STREAM;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AI_ADDRCONFIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>AI_ADDRCONFIG<sp/>|<sp/>AI_PASSIVE;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>hints.ai_flags<sp/>=<sp/>AI_PASSIVE;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/>redo_lookup_with_port:</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((res<sp/>=<sp/>getaddrinfo(host,<sp/>port,<sp/>&amp;hints,<sp/>&amp;ai))<sp/>!=<sp/>0<sp/>||<sp/>!ai)</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(res),</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>lookup<sp/>host/port:<sp/>\&quot;%s:%s\&quot;:<sp/>%s<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/>_dbus_strerror(res),<sp/>res);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>ai;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tmp)</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>-1,<sp/>*newlisten_fd;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fd<sp/>=<sp/>socket<sp/>(tmp-&gt;ai_family,<sp/>SOCK_STREAM,<sp/>0))<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>socket:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR(error);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind<sp/>(fd,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr*)<sp/>tmp-&gt;ai_addr,<sp/>tmp-&gt;ai_addrlen)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>socket<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket<sp/>(fd);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen<sp/>(fd,<sp/>30<sp/></highlight><highlight class="comment">/*<sp/>backlog<sp/>*/</highlight><highlight class="normal">)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>listen<sp/>on<sp/>socket<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket<sp/>(fd);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newlisten_fd<sp/>=<sp/><ref refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" kindref="member">dbus_realloc</ref>(listen_fd,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*(nlisten_fd+1));</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newlisten_fd)</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closesocket<sp/>(fd);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>file<sp/>handle<sp/>array&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listen_fd<sp/>=<sp/>newlisten_fd;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>listen_fd[nlisten_fd]<sp/>=<sp/>fd;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nlisten_fd++;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_string_get_length(retport))</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>user<sp/>didn&apos;t<sp/>specify<sp/>a<sp/>port,<sp/>or<sp/>used<sp/>0,<sp/>then</highlight></codeline>
<codeline lineno="1750"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>kernel<sp/>chooses<sp/>a<sp/>port.<sp/>After<sp/>the<sp/>first<sp/>address</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>bound<sp/>to,<sp/>we<sp/>need<sp/>to<sp/>force<sp/>all<sp/>remaining<sp/>addresses</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>use<sp/>the<sp/>same<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!port<sp/>||<sp/>!strcmp(port,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mysockaddr_gen<sp/>addr;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>socklen_t<sp/>addrlen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(addr);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>portbuf[10];</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getsockname(fd,<sp/>&amp;addr.Address,<sp/>&amp;addrlen)<sp/>==<sp/>SOCKET_ERROR)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>resolve<sp/>port<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref>());</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(<sp/>portbuf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>portbuf<sp/>)<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>addr.AddressIn.sin_port<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(retport,<sp/>portbuf))</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>current<sp/>address<sp/>list<sp/>&amp;<sp/>redo<sp/>lookup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>_dbus_string_get_const_data(retport);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>redo_lookup_with_port;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(retport,<sp/>port))</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp-&gt;ai_next;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>ai<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nlisten_fd)</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_errno<sp/>(WSAEADDRINUSE);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>socket<sp/>\&quot;%s:%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host<sp/>?<sp/>host<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>port,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/>sscanf(_dbus_string_get_const_data(retport),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;port_num);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nlisten_fd<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_handle_set_close_on_exec<sp/>((HANDLE)<sp/>listen_fd[i]);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_set_fd_nonblocking<sp/>(listen_fd[i],<sp/>error))</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/>*fds_p<sp/>=<sp/>listen_fd;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nlisten_fd;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ai)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>freeaddrinfo(ai);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>nlisten_fd<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>closesocket<sp/>(listen_fd[i]);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref>(listen_fd);</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836" refid="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga687f4393a365474ec16f02e40c418cce" kindref="member">_dbus_accept</ref><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>listen_fd)</highlight></codeline>
<codeline lineno="1837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>client_fd;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/>retry:</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/>client_fd<sp/>=<sp/>accept<sp/>(listen_fd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DBUS_SOCKET_IS_INVALID<sp/>(client_fd))</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_SOCKET_SET_ERRNO<sp/>();</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>retry;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;client<sp/>fd<sp/>%d<sp/>accepted\n&quot;</highlight><highlight class="normal">,<sp/>client_fd);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>client_fd;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1859" refid="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6cc9916aa1dde4d44072ee85b5691b5b" kindref="member">_dbus_send_credentials_socket</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FIXME:<sp/>for<sp/>the<sp/>session<sp/>bus<sp/>credentials<sp/>shouldn&apos;t<sp/>matter<sp/>(?),<sp/>but</highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/>*<sp/>for<sp/>the<sp/>system<sp/>bus<sp/>they<sp/>are<sp/>presumably<sp/>essential.<sp/>A<sp/>rough<sp/>outline</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/>*<sp/>of<sp/>a<sp/>way<sp/>to<sp/>implement<sp/>the<sp/>credential<sp/>transfer<sp/>would<sp/>be<sp/>this:</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/>*<sp/>client<sp/>waits<sp/>to<sp/>*read*<sp/>a<sp/>byte.</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/>*<sp/>server<sp/>creates<sp/>a<sp/>named<sp/>pipe<sp/>with<sp/>a<sp/>random<sp/>name,<sp/>sends<sp/>a<sp/>byte</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/>*<sp/>contining<sp/>its<sp/>length,<sp/>and<sp/>its<sp/>name.</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1871"><highlight class="comment"><sp/>*<sp/>client<sp/>reads<sp/>the<sp/>name,<sp/>connects<sp/>to<sp/>it<sp/>(using<sp/>Win32<sp/>API).</highlight></codeline>
<codeline lineno="1872"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/>*<sp/>server<sp/>waits<sp/>for<sp/>connection<sp/>to<sp/>the<sp/>named<sp/>pipe,<sp/>then<sp/>calls</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/>*<sp/>ImpersonateNamedPipeClient(),<sp/>notes<sp/>its<sp/>now-current<sp/>credentials,</highlight></codeline>
<codeline lineno="1875"><highlight class="comment"><sp/>*<sp/>calls<sp/>RevertToSelf(),<sp/>closes<sp/>its<sp/>handles<sp/>to<sp/>the<sp/>named<sp/>pipe,<sp/>and</highlight></codeline>
<codeline lineno="1876"><highlight class="comment"><sp/>*<sp/>is<sp/>done.<sp/>(Maybe<sp/>there<sp/>is<sp/>some<sp/>other<sp/>way<sp/>to<sp/>get<sp/>the<sp/>SID<sp/>of<sp/>a<sp/>named</highlight></codeline>
<codeline lineno="1877"><highlight class="comment"><sp/>*<sp/>pipe<sp/>client<sp/>without<sp/>having<sp/>to<sp/>use<sp/>impersonation?)</highlight></codeline>
<codeline lineno="1878"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1879"><highlight class="comment"><sp/>*<sp/>client<sp/>closes<sp/>its<sp/>handles<sp/>and<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="1880"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/>*<sp/>Ralf:<sp/>Why<sp/>not<sp/>sending<sp/>credentials<sp/>over<sp/>the<sp/>given<sp/>this<sp/>connection<sp/>?</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/>*<sp/>Using<sp/>named<sp/>pipes<sp/>makes<sp/>it<sp/>impossible<sp/>to<sp/>be<sp/>connected<sp/>from<sp/>a<sp/>unix<sp/>client.<sp/><sp/></highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_written;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>buf;<sp/></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" kindref="member">_dbus_string_init_const_len</ref><sp/>(&amp;buf,<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">again:</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/>bytes_written<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga346cadd9b0f7d0ae1cd19007b2e4c2de" kindref="member">_dbus_write_socket</ref><sp/>(handle,<sp/>&amp;buf,<sp/>0,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR)</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>again;</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusInternalsUtils_1ga2212aa0e5732257598a6597748c658e4" kindref="member">_dbus_error_from_errno</ref><sp/>(errno),</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>write<sp/>credentials<sp/>byte:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_written<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga445d7ad73da94c796ef441df2dcc3cc8" kindref="member">DBUS_ERROR_IO_ERROR</ref>,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wrote<sp/>zero<sp/>bytes<sp/>writing<sp/>credentials<sp/>byte&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(bytes_written<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;wrote<sp/>1<sp/>zero<sp/>byte,<sp/>credential<sp/>sending<sp/>isn&apos;t<sp/>implemented<sp/>yet\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1936" refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga9906c86bebb51358f0d8df6a42af30f6" kindref="member">_dbus_read_credentials_socket</ref><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle,</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/>*credentials,</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="1939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_read<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>buf;</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sid<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref><sp/>pid;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>fail<sp/>due<sp/>too<sp/>OOM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;buf))</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bytes_read<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga6fe72fa1c0484ac5594b08145ea19530" kindref="member">_dbus_read_socket</ref><sp/>(handle,<sp/>&amp;buf,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes_read<sp/>&gt;<sp/>0)<sp/></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;got<sp/>one<sp/>zero<sp/>byte<sp/>from<sp/>server\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;buf);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>pid<sp/>=<sp/>_dbus_get_peer_pid_from_tcp_handle<sp/>(handle);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pid<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><ref refid="group__DBusCredentials_1gaad133a8d06af2a447307266a8425a9f8" kindref="member">_dbus_credentials_add_pid</ref><sp/>(credentials,<sp/>pid);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_getsid<sp/>(&amp;sid,<sp/>pid))</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1ga9d2186a4cfa8a421c552ae4592b400f5" kindref="member">_dbus_credentials_add_windows_sid</ref><sp/>(credentials,<sp/>sid))</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sid)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalFree<sp/>(sid);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1988" refid="group__DBusSysdeps_1ga8e16f75e361d9fed43223f69baf0e2a5" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga8e16f75e361d9fed43223f69baf0e2a5" kindref="member">_dbus_check_dir_is_private_to_user</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*dir,<sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="1989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2007" refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member">_dbus_concat_dir_and_file</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dir,</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*next_component)</highlight></codeline>
<codeline lineno="2009"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>dir_ends_in_slash;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>file_starts_with_slash;</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(dir)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(next_component)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>dir_ends_in_slash<sp/>=</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>==<sp/>_dbus_string_get_byte<sp/>(dir,<sp/>_dbus_string_get_length<sp/>(dir)<sp/>-<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>==<sp/>_dbus_string_get_byte<sp/>(dir,<sp/>_dbus_string_get_length<sp/>(dir)<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/>file_starts_with_slash<sp/>=</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>==<sp/>_dbus_string_get_byte<sp/>(next_component,<sp/>0)<sp/>||</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>==<sp/>_dbus_string_get_byte<sp/>(next_component,<sp/>0));</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir_ends_in_slash<sp/>&amp;&amp;<sp/>file_starts_with_slash)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga7af1cbfa905f26d972ab644d890548b8" kindref="member">_dbus_string_shorten</ref><sp/>(dir,<sp/>1);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(dir_ends_in_slash<sp/>||<sp/>file_starts_with_slash))</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaa6ecf36e70263659f921a4ef0335db12" kindref="member">_dbus_string_append_byte</ref><sp/>(dir,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member">_dbus_string_copy</ref><sp/>(next_component,<sp/>0,<sp/>dir,</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(dir));</highlight></codeline>
<codeline lineno="2037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"></highlight><highlight class="comment">/*----------------<sp/>DBusCredentials<sp/>----------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2049" refid="group__DBusSysdeps_1gacecdbb00a3c8b63e821edae537ae3c7b" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gacecdbb00a3c8b63e821edae537ae3c7b" kindref="member">_dbus_credentials_add_from_user</ref><sp/>(<ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/><sp/>*credentials,</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*username)</highlight></codeline>
<codeline lineno="2051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusCredentials_1ga9d2186a4cfa8a421c552ae4592b400f5" kindref="member">_dbus_credentials_add_windows_sid</ref><sp/>(credentials,</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data(username));</highlight></codeline>
<codeline lineno="2054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2065" refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga9d5493f8bd1c5577060c8c6dce44d09f" kindref="member">_dbus_credentials_add_from_current_process</ref><sp/>(<ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/>*credentials)</highlight></codeline>
<codeline lineno="2066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sid<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_getsid(&amp;sid,<sp/><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid</ref>()))</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1gaad133a8d06af2a447307266a8425a9f8" kindref="member">_dbus_credentials_add_pid</ref><sp/>(credentials,<sp/><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid</ref>()))</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusCredentials_1ga9d2186a4cfa8a421c552ae4592b400f5" kindref="member">_dbus_credentials_add_windows_sid</ref><sp/>(credentials,sid))</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end;</highlight></codeline>
<codeline lineno="2081"><highlight class="normal">failed:</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal">end:</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sid)</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalFree(sid);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2103" refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" kindref="member">_dbus_append_user_from_current_process</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str)</highlight></codeline>
<codeline lineno="2104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sid<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_getsid(&amp;sid,<sp/><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid</ref>()))</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(str,sid);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>LocalFree(sid);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1eff6303266888ec466cddba6c03aa40" kindref="member">dbus_pid_t</ref></highlight></codeline>
<codeline lineno="2122" refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga870807b07f3b1c1a725eb9408edad147" kindref="member">_dbus_getpid</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetCurrentProcessId<sp/>();</highlight></codeline>
<codeline lineno="2125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="preprocessor">#define<sp/>NANOSECONDS_PER_SECOND<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1000000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="preprocessor">#define<sp/>MICROSECONDS_PER_SECOND<sp/><sp/><sp/><sp/><sp/><sp/>1000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="preprocessor">#define<sp/>MILLISECONDS_PER_SECOND<sp/><sp/><sp/><sp/><sp/><sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="preprocessor">#define<sp/>NANOSECONDS_PER_MILLISECOND<sp/><sp/>1000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="preprocessor">#define<sp/>MICROSECONDS_PER_MILLISECOND<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143" refid="group__DBusSysdeps_1ga1153b4669819148af6b3f6f2b7c9183a" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1153b4669819148af6b3f6f2b7c9183a" kindref="member">_dbus_sleep_milliseconds</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds)</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/>Sleep<sp/>(milliseconds);</highlight></codeline>
<codeline lineno="2146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157" refid="group__DBusSysdeps_1gae10ee21ab353beadbe2493728065f600" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae10ee21ab353beadbe2493728065f600" kindref="member">_dbus_get_real_time</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*tv_sec,</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*tv_usec)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/>FILETIME<sp/>ft;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga0a7c275002dbafa34536a76db079a950" kindref="member">dbus_uint64_t</ref><sp/>time64;</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/>GetSystemTimeAsFileTime<sp/>(&amp;ft);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/>memcpy<sp/>(&amp;time64,<sp/>&amp;ft,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(time64));</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>from<sp/>100s<sp/>of<sp/>nanoseconds<sp/>since<sp/>1601-01-01</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/><sp/>*<sp/>to<sp/>Unix<sp/>epoch.<sp/>Yes,<sp/>this<sp/>is<sp/>Y2038<sp/>unsafe.</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/>time64<sp/>-=<sp/><ref refid="group__DBusTypes_1ga8deac39e1bf9fcca44854afeaaaf6199" kindref="member">DBUS_INT64_CONSTANT</ref><sp/>(116444736000000000);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/>time64<sp/>/=<sp/>10;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tv_sec)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>*tv_sec<sp/>=<sp/>time64<sp/>/<sp/>1000000;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tv_usec)</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>*tv_usec<sp/>=<sp/>time64<sp/>%<sp/>1000000;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188" refid="group__DBusSysdeps_1gab9951a7fd8c33188bf86314e7fd56300" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gab9951a7fd8c33188bf86314e7fd56300" kindref="member">_dbus_get_monotonic_time</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*tv_sec,</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*tv_usec)</highlight></codeline>
<codeline lineno="2190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>implementation<sp/>yet,<sp/>fall<sp/>back<sp/>to<sp/>wall-clock<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1gae10ee21ab353beadbe2493728065f600" kindref="member">_dbus_get_real_time</ref><sp/>(tv_sec,<sp/>tv_usec);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199" refid="group__DBusSysdeps_1ga6890d4cde3afec0bf274ca2af8c9e204" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6890d4cde3afec0bf274ca2af8c9e204" kindref="member">_dbus_disable_sigpipe</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2212" refid="group__DBusSysdeps_1gaa47156dedbe573ee9b213d1fd3f7bb79" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gaa47156dedbe573ee9b213d1fd3f7bb79" kindref="member">_dbus_create_directory</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename,</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename_c;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/>filename_c<sp/>=<sp/>_dbus_string_get_const_data<sp/>(filename);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CreateDirectoryA<sp/>(filename_c,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetLastError<sp/>()<sp/>==<sp/>ERROR_ALREADY_EXISTS)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>directory<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_c,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2245" refid="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gac9fd08af5e54c0e9b3db108b48a65778" kindref="member">_dbus_generate_random_bytes</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_bytes)</highlight></codeline>
<codeline lineno="2247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_len;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/>HCRYPTPROV<sp/>hprov;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>old_len<sp/>=<sp/>_dbus_string_get_length<sp/>(str);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member">_dbus_string_lengthen</ref><sp/>(str,<sp/>n_bytes))</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/><ref refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" kindref="member">_dbus_string_get_data_len</ref><sp/>(str,<sp/>old_len,<sp/>n_bytes);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CryptAcquireContext<sp/>(&amp;hprov,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>PROV_RSA_FULL,<sp/>CRYPT_VERIFYCONTEXT))</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CryptGenRandom<sp/>(hprov,<sp/>n_bytes,<sp/>p))</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CryptReleaseContext<sp/>(hprov,<sp/>0);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/>CryptReleaseContext<sp/>(hprov,<sp/>0);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="2280" refid="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3ecdae905f2d9e95fd35891b20f06532" kindref="member">_dbus_get_tmpdir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Protected<sp/>by<sp/>_DBUS_LOCK_sysdeps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tmpdir<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[1000];</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" kindref="member">_DBUS_LOCK</ref><sp/>(sysdeps))</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmpdir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*last_slash;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!GetTempPathA<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buf),<sp/>buf))</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;GetTempPath<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdeps_1ga83c51771d3c4e612522bd5ad72e6ad7a" kindref="member">_dbus_abort</ref><sp/>();</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Drop<sp/>terminating<sp/>backslash<sp/>or<sp/>slash<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_slash<sp/>=<sp/>_mbsrchr<sp/>(buf,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_slash<sp/>&gt;<sp/>buf<sp/>&amp;&amp;<sp/>last_slash[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_slash[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_slash<sp/>=<sp/>_mbsrchr<sp/>(buf,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_slash<sp/>&gt;<sp/>buf<sp/>&amp;&amp;<sp/>last_slash[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_slash[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmpdir<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" kindref="member">_DBUS_UNLOCK</ref><sp/>(sysdeps);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(tmpdir<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmpdir;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2327" refid="group__DBusFile_1ga4d4936493cddac47b6e7e4ab3f390627" refkind="member"><highlight class="normal"><ref refid="group__DBusFile_1ga4d4936493cddac47b6e7e4ab3f390627" kindref="member">_dbus_delete_file</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename,</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename_c;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>filename_c<sp/>=<sp/>_dbus_string_get_const_data<sp/>(filename);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DeleteFileA<sp/>(filename_c)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>delete<sp/>file<sp/>%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_c,<sp/><ref refid="group__DBusInternalsUtils_1ga56de84795d6df4162ad79b3be7af7588" kindref="member">_dbus_strerror_from_errno</ref><sp/>());</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(DBUS_DISABLE_ASSERT)<sp/>||<sp/>defined(DBUS_ENABLE_EMBEDDED_TESTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)<sp/>||<sp/>defined(DBUS_WINCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>BACKTRACES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>undef<sp/>BACKTRACES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>BACKTRACES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BACKTRACES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/>*<sp/>Backtrace<sp/>Generator</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2004<sp/>Eric<sp/>Poech</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2004<sp/>Robert<sp/>Shearman</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="2365"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="2366"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="2367"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="2368"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2369"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="2370"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="2371"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="2372"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="2373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2374"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="2375"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="2376"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="2377"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;winver.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;imagehlp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DPRINTF<sp/>_dbus_warn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOL<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__i386__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>MAKE_FUNCPTR(f)<sp/>static<sp/>typeof(f)<sp/>*<sp/>p##f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight><highlight class="comment">//MAKE_FUNCPTR(StackWalk);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight><highlight class="comment">//MAKE_FUNCPTR(SymGetModuleBase);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight><highlight class="comment">//MAKE_FUNCPTR(SymFunctionTableAccess);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="comment">//MAKE_FUNCPTR(SymInitialize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight><highlight class="comment">//MAKE_FUNCPTR(SymGetSymFromAddr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight><highlight class="comment">//MAKE_FUNCPTR(SymGetModuleInfo);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>(WINAPI<sp/>*pStackWalk)(</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>DWORD<sp/>MachineType,</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hThread,</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/>LPSTACKFRAME<sp/>StackFrame,</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/>PVOID<sp/>ContextRecord,</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/>PREAD_PROCESS_MEMORY_ROUTINE<sp/>ReadMemoryRoutine,</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/>PFUNCTION_TABLE_ACCESS_ROUTINE<sp/>FunctionTableAccessRoutine,</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>PGET_MODULE_BASE_ROUTINE<sp/>GetModuleBaseRoutine,</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/>PTRANSLATE_ADDRESS_ROUTINE<sp/>TranslateAddress</highlight></codeline>
<codeline lineno="2409"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DWORD64<sp/>(WINAPI<sp/>*pSymGetModuleBase)(</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/>DWORD64<sp/>dwAddr</highlight></codeline>
<codeline lineno="2414"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PVOID<sp/><sp/>(WINAPI<sp/>*pSymFunctionTableAccess)(</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/>DWORD64<sp/>AddrBase</highlight></codeline>
<codeline lineno="2418"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DWORD<sp/>(WINAPI<sp/>*pSymGetModuleBase)(</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/>DWORD<sp/>dwAddr</highlight></codeline>
<codeline lineno="2423"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PVOID<sp/><sp/>(WINAPI<sp/>*pSymFunctionTableAccess)(</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>DWORD<sp/>AddrBase</highlight></codeline>
<codeline lineno="2427"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(WINAPI<sp/>*pSymInitialize)(</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/>PSTR<sp/>UserSearchPath,</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/>BOOL<sp/>fInvadeProcess</highlight></codeline>
<codeline lineno="2433"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(WINAPI<sp/>*pSymGetSymFromAddr)(</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/>DWORD<sp/>Address,</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/>PDWORD<sp/>Displacement,</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/>PIMAGEHLP_SYMBOL<sp/>Symbol</highlight></codeline>
<codeline lineno="2439"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/><sp/>(WINAPI<sp/>*pSymGetModuleInfo)(</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/>DWORD<sp/>dwAddr,</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/>PIMAGEHLP_MODULE<sp/>ModuleInfo</highlight></codeline>
<codeline lineno="2444"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DWORD<sp/><sp/>(WINAPI<sp/>*pSymSetOptions)(</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/>DWORD<sp/>SymOptions</highlight></codeline>
<codeline lineno="2447"><highlight class="normal">);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL<sp/>init_backtrace()</highlight></codeline>
<codeline lineno="2451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>HMODULE<sp/>hmodDbgHelp<sp/>=<sp/>LoadLibraryA(</highlight><highlight class="stringliteral">&quot;dbghelp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2454"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>GETFUNC(x)<sp/>\</highlight></codeline>
<codeline lineno="2455"><highlight class="comment"><sp/><sp/><sp/><sp/>p##x<sp/>=<sp/>(typeof(x)*)GetProcAddress(hmodDbgHelp,<sp/>#x);<sp/>\</highlight></codeline>
<codeline lineno="2456"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(!p##x)<sp/>\</highlight></codeline>
<codeline lineno="2457"><highlight class="comment"><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="2458"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>FALSE;<sp/>\</highlight></codeline>
<codeline lineno="2459"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2460"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GETFUNC(StackWalk);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GETFUNC(SymGetModuleBase);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GETFUNC(SymFunctionTableAccess);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GETFUNC(SymInitialize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GETFUNC(SymGetSymFromAddr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>GETFUNC(SymGetModuleInfo);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUNC(x)<sp/>#x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pStackWalk<sp/>=<sp/>(BOOL<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2473"><highlight class="normal">DWORD<sp/>MachineType,</highlight></codeline>
<codeline lineno="2474"><highlight class="normal">HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2475"><highlight class="normal">HANDLE<sp/>hThread,</highlight></codeline>
<codeline lineno="2476"><highlight class="normal">LPSTACKFRAME<sp/>StackFrame,</highlight></codeline>
<codeline lineno="2477"><highlight class="normal">PVOID<sp/>ContextRecord,</highlight></codeline>
<codeline lineno="2478"><highlight class="normal">PREAD_PROCESS_MEMORY_ROUTINE<sp/>ReadMemoryRoutine,</highlight></codeline>
<codeline lineno="2479"><highlight class="normal">PFUNCTION_TABLE_ACCESS_ROUTINE<sp/>FunctionTableAccessRoutine,</highlight></codeline>
<codeline lineno="2480"><highlight class="normal">PGET_MODULE_BASE_ROUTINE<sp/>GetModuleBaseRoutine,</highlight></codeline>
<codeline lineno="2481"><highlight class="normal">PTRANSLATE_ADDRESS_ROUTINE<sp/>TranslateAddress</highlight></codeline>
<codeline lineno="2482"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(StackWalk));</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymGetModuleBase=(DWORD64<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/>DWORD64<sp/>dwAddr</highlight></codeline>
<codeline lineno="2487"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymGetModuleBase));</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymFunctionTableAccess=(PVOID<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/>DWORD64<sp/>AddrBase</highlight></codeline>
<codeline lineno="2491"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymFunctionTableAccess));</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymGetModuleBase=(DWORD<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>DWORD<sp/>dwAddr</highlight></codeline>
<codeline lineno="2496"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymGetModuleBase));</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymFunctionTableAccess=(PVOID<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/>DWORD<sp/>AddrBase</highlight></codeline>
<codeline lineno="2500"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymFunctionTableAccess));</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymInitialize<sp/>=<sp/>(BOOL<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/>PSTR<sp/>UserSearchPath,</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>BOOL<sp/>fInvadeProcess</highlight></codeline>
<codeline lineno="2506"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymInitialize));</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymGetSymFromAddr<sp/>=<sp/>(BOOL<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/>DWORD<sp/>Address,</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/>PDWORD<sp/>Displacement,</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/>PIMAGEHLP_SYMBOL<sp/>Symbol</highlight></codeline>
<codeline lineno="2512"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymGetSymFromAddr));</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymGetModuleInfo<sp/>=<sp/>(BOOL<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hProcess,</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/>DWORD<sp/>dwAddr,</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/>PIMAGEHLP_MODULE<sp/>ModuleInfo</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymGetModuleInfo));</highlight></codeline>
<codeline lineno="2518"><highlight class="normal">pSymSetOptions<sp/>=<sp/>(DWORD<sp/><sp/>(WINAPI<sp/>*)(</highlight></codeline>
<codeline lineno="2519"><highlight class="normal">DWORD<sp/>SymOptions</highlight></codeline>
<codeline lineno="2520"><highlight class="normal">))GetProcAddress<sp/>(hmodDbgHelp,<sp/>FUNC(SymSetOptions));</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymSetOptions(SYMOPT_UNDNAME);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>pSymInitialize(GetCurrentProcess(),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump_backtrace_for_thread(HANDLE<sp/>hThread)</highlight></codeline>
<codeline lineno="2531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/>STACKFRAME<sp/>sf;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/>CONTEXT<sp/>context;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>dwImageType;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pStackWalk)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init_backtrace())</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>use<sp/>this<sp/>function<sp/>for<sp/>current<sp/>thread<sp/>as<sp/>GetThreadContext</highlight></codeline>
<codeline lineno="2541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>doesn&apos;t<sp/>support<sp/>getting<sp/>context<sp/>from<sp/>current<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hThread<sp/>==<sp/>GetCurrentThread())</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/>DPRINTF(</highlight><highlight class="stringliteral">&quot;Backtrace:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" kindref="member">_DBUS_ZERO</ref>(context);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>context.ContextFlags<sp/>=<sp/>CONTEXT_FULL;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>SuspendThread(hThread);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!GetThreadContext(hThread,<sp/>&amp;context))</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPRINTF(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>get<sp/>thread<sp/>context<sp/>(error<sp/>%ld)\n&quot;</highlight><highlight class="normal">,<sp/>GetLastError());</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResumeThread(hThread);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gaec42589166158b1385d5f5439318cda2" kindref="member">_DBUS_ZERO</ref>(sf);</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__i386__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/>sf.AddrFrame.Offset<sp/>=<sp/>context.Ebp;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/>sf.AddrFrame.Mode<sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/>sf.AddrPC.Offset<sp/>=<sp/>context.Eip;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/>sf.AddrPC.Mode<sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/>dwImageType<sp/>=<sp/>IMAGE_FILE_MACHINE_I386;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_M_X64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/>dwImageType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>IMAGE_FILE_MACHINE_AMD64;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/>sf.AddrPC.Offset<sp/><sp/><sp/><sp/>=<sp/>context.Rip;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/>sf.AddrPC.Mode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/>sf.AddrFrame.Offset<sp/>=<sp/>context.Rsp;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>sf.AddrFrame.Mode<sp/><sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/>sf.AddrStack.Offset<sp/>=<sp/>context.Rsp;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/>sf.AddrStack.Mode<sp/><sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_M_IA64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/>dwImageType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>IMAGE_FILE_MACHINE_IA64;</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/>sf.AddrPC.Offset<sp/><sp/><sp/><sp/>=<sp/>context.StIIP;</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/>sf.AddrPC.Mode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/>sf.AddrFrame.Offset<sp/>=<sp/>context.IntSp;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/>sf.AddrFrame.Mode<sp/><sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/>sf.AddrBStore.Offset=<sp/>context.RsBSP;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/>sf.AddrBStore.Mode<sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/>sf.AddrStack.Offset<sp/>=<sp/>context.IntSp;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/>sf.AddrStack.Mode<sp/><sp/><sp/>=<sp/>AddrModeFlat;</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>error<sp/>You<sp/>need<sp/>to<sp/>fill<sp/>in<sp/>the<sp/>STACKFRAME<sp/>structure<sp/>for<sp/>your<sp/>architecture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pStackWalk(dwImageType,<sp/>GetCurrentProcess(),</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hThread,<sp/>&amp;sf,<sp/>&amp;context,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pSymFunctionTableAccess,</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSymGetModuleBase,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BYTE<sp/>buffer[256];</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMAGEHLP_SYMBOL<sp/>*<sp/>pSymbol<sp/>=<sp/>(IMAGEHLP_SYMBOL<sp/>*)buffer;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dwDisplacement;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSymbol-&gt;SizeOfStruct<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IMAGEHLP_SYMBOL);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSymbol-&gt;MaxNameLength<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer)<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IMAGEHLP_SYMBOL)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSymGetSymFromAddr(GetCurrentProcess(),<sp/>sf.AddrPC.Offset,</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dwDisplacement,<sp/>pSymbol))</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IMAGEHLP_MODULE<sp/>ModuleInfo;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ModuleInfo.SizeOfStruct<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ModuleInfo);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pSymGetModuleInfo(GetCurrentProcess(),<sp/>sf.AddrPC.Offset,</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;ModuleInfo))</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPRINTF(</highlight><highlight class="stringliteral">&quot;1\t%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)sf.AddrPC.Offset);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPRINTF(</highlight><highlight class="stringliteral">&quot;2\t%s+0x%lx\n&quot;</highlight><highlight class="normal">,<sp/>ModuleInfo.ImageName,</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf.AddrPC.Offset<sp/>-<sp/>ModuleInfo.BaseOfImage);</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwDisplacement)</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPRINTF(</highlight><highlight class="stringliteral">&quot;3\t%s+0x%lx\n&quot;</highlight><highlight class="normal">,<sp/>pSymbol-&gt;Name,<sp/>dwDisplacement);</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DPRINTF(</highlight><highlight class="stringliteral">&quot;4\t%s\n&quot;</highlight><highlight class="normal">,<sp/>pSymbol-&gt;Name);</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/>ResumeThread(hThread);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DWORD<sp/>WINAPI<sp/>dump_thread_proc(LPVOID<sp/>lpParameter)</highlight></codeline>
<codeline lineno="2623"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/>dump_backtrace_for_thread((HANDLE)lpParameter);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cannot<sp/>get<sp/>valid<sp/>context<sp/>from<sp/>current<sp/>thread,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>execute</highlight></codeline>
<codeline lineno="2629"><highlight class="comment"><sp/>*<sp/>backtrace<sp/>from<sp/>another<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump_backtrace()</highlight></codeline>
<codeline lineno="2631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hCurrentThread;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hThread;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>dwThreadId;</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/>DuplicateHandle(GetCurrentProcess(),<sp/>GetCurrentThread(),</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetCurrentProcess(),<sp/>&amp;hCurrentThread,<sp/>0,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>DUPLICATE_SAME_ACCESS);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>hThread<sp/>=<sp/>CreateThread(<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>dump_thread_proc,<sp/>(LPVOID)hCurrentThread,</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>&amp;dwThreadId);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/>WaitForSingleObject(hThread,<sp/>INFINITE);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseHandle(hThread);</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>CloseHandle(hCurrentThread);</highlight></codeline>
<codeline lineno="2642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>asserts<sp/>or<sp/>tests<sp/>enabled<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BACKTRACES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2647" refid="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" kindref="member">_dbus_print_backtrace</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/>init_backtrace();</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/>dump_backtrace();</highlight></codeline>
<codeline lineno="2651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DBusSysdeps_1ga8646ab2ef727fcc862c7904113c88a8d" kindref="member">_dbus_print_backtrace</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>D-Bus<sp/>not<sp/>compiled<sp/>with<sp/>backtrace<sp/>support\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>fromAscii(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ascii)</highlight></codeline>
<codeline lineno="2660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ascii<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ascii<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ascii<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ascii<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ascii<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ascii<sp/>-<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ascii<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ascii<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ascii<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670" refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" refkind="member"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><ref refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" kindref="member">_dbus_read_local_machine_uuid</ref><sp/><sp/><sp/>(<ref refid="unionDBusGUID" kindref="compound">DBusGUID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*machine_id,</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>create_if_not_found,</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="2673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/>HW_PROFILE_INFOA<sp/>info;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lpc<sp/>=<sp/>&amp;info.szHwProfileGuid[0];</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>u;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>the<sp/>hw-profile<sp/>guid<sp/>lives<sp/>long<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!GetCurrentHwProfileA(&amp;info))</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gac32eaf0b92f798307853cd4fe0cf11c2" kindref="member">DBUS_ERROR_NO_MEMORY</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/></highlight><highlight class="comment">//<sp/>FIXME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Form:<sp/>{12340001-4980-1920-6788-123456789012}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/>lpc++;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12340001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>((fromAscii(lpc[0])<sp/>&lt;&lt;<sp/><sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[1])<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[2])<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[3])<sp/>&lt;&lt;<sp/>12)<sp/>|</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[4])<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[5])<sp/>&lt;&lt;<sp/>20)<sp/>|</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[6])<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[7])<sp/>&lt;&lt;<sp/>28));</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_id-&gt;<ref refid="unionDBusGUID_1a3db114d87644fab561564504a8653e72" kindref="member">as_uint32s</ref>[0]<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/>lpc<sp/>+=<sp/>9;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4980-1920</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>((fromAscii(lpc[0])<sp/>&lt;&lt;<sp/><sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[1])<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[2])<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[3])<sp/>&lt;&lt;<sp/>12)<sp/>|</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[5])<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[6])<sp/>&lt;&lt;<sp/>20)<sp/>|</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[7])<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[8])<sp/>&lt;&lt;<sp/>28));</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_id-&gt;<ref refid="unionDBusGUID_1a3db114d87644fab561564504a8653e72" kindref="member">as_uint32s</ref>[1]<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/>lpc<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6788-1234</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>((fromAscii(lpc[0])<sp/>&lt;&lt;<sp/><sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[1])<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[2])<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[3])<sp/>&lt;&lt;<sp/>12)<sp/>|</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[5])<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[6])<sp/>&lt;&lt;<sp/>20)<sp/>|</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[7])<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[8])<sp/>&lt;&lt;<sp/>28));</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_id-&gt;<ref refid="unionDBusGUID_1a3db114d87644fab561564504a8653e72" kindref="member">as_uint32s</ref>[2]<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/>lpc<sp/>+=<sp/>9;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>56789012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>((fromAscii(lpc[0])<sp/>&lt;&lt;<sp/><sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[1])<sp/>&lt;&lt;<sp/><sp/>4)<sp/>|</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[2])<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[3])<sp/>&lt;&lt;<sp/>12)<sp/>|</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[4])<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[5])<sp/>&lt;&lt;<sp/>20)<sp/>|</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[6])<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fromAscii(lpc[7])<sp/>&lt;&lt;<sp/>28));</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>machine_id-&gt;<ref refid="unionDBusGUID_1a3db114d87644fab561564504a8653e72" kindref="member">as_uint32s</ref>[3]<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal">HANDLE<sp/>_dbus_global_lock<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mutexname)</highlight></codeline>
<codeline lineno="2743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/>HANDLE<sp/>mutex;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/>DWORD<sp/>gotMutex;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/>mutex<sp/>=<sp/>CreateMutexA(<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>mutexname<sp/>);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!mutex<sp/>)</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/>gotMutex<sp/>=<sp/>WaitForSingleObject(<sp/>mutex,<sp/>INFINITE<sp/>);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>gotMutex<sp/>)</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WAIT_ABANDONED:</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMutex<sp/>(mutex);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle<sp/>(mutex);</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WAIT_FAILED:</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WAIT_TIMEOUT:</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mutex;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_dbus_global_unlock<sp/>(HANDLE<sp/>mutex)</highlight></codeline>
<codeline lineno="2770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>ReleaseMutex<sp/>(mutex);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/>CloseHandle<sp/>(mutex);<sp/></highlight></codeline>
<codeline lineno="2773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>proper<sp/>cleanup<sp/>in<sp/>dbus-daemon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HANDLE<sp/>hDBusDaemonMutex<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HANDLE<sp/>hDBusSharedMem<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sync<sp/>_dbus_daemon_publish_session_bus_address,<sp/>_dbus_daemon_unpublish_session_bus_address<sp/>and<sp/>_dbus_daemon_already_runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cUniqueDBusInitMutex<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UniqueDBusInitMutex&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sync<sp/>_dbus_get_autolaunch_address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cDBusAutolaunchMutex<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DBusAutolaunchMutex&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mutex<sp/>to<sp/>determine<sp/>if<sp/>dbus-daemon<sp/>is<sp/>already<sp/>started<sp/>(per<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cDBusDaemonMutex<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DBusDaemonMutex&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>named<sp/>shm<sp/>for<sp/>dbus<sp/>adress<sp/>info<sp/>(per<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cDBusDaemonAddressInfo<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DBusDaemonAddressInfo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2788"><highlight class="normal">_dbus_get_install_root_as_hash(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*out)</highlight></codeline>
<codeline lineno="2789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>install_path;</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[MAX_PATH*2];</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>path_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(path);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_install_root(path,path_size))</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref>(&amp;install_path);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(&amp;install_path,path);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref>(out);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga698f4b0299e6c6a707fd7e9c14915f00" kindref="member">_dbus_string_tolower_ascii</ref>(&amp;install_path,0,_dbus_string_get_length(&amp;install_path));</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSHA_1ga4278fb9df967943834c4ad6332f2c28b" kindref="member">_dbus_sha_compute</ref><sp/>(&amp;install_path,<sp/>out))</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2811"><highlight class="normal">_dbus_get_address_string<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*basestring,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="2812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref>(out);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(out,basestring);</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scope)</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(scope,</highlight><highlight class="stringliteral">&quot;*install-path&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>1.3<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>strcmp(scope,</highlight><highlight class="stringliteral">&quot;install-path&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>temp;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_install_root_as_hash(&amp;temp))</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(out);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(out,</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(out,_dbus_string_get_const_data(&amp;temp));</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(&amp;temp);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(scope,</highlight><highlight class="stringliteral">&quot;*user&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(out,</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1ga095c54de3974c6d04c29ef86c6e06e35" kindref="member">_dbus_append_user_from_current_process</ref>(out))</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(out);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(scope)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(out,</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(out,scope);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2853"><highlight class="normal">_dbus_get_shm_name<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*out,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="2854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_get_address_string<sp/>(out,cDBusDaemonAddressInfo,scope);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2859"><highlight class="normal">_dbus_get_mutex_name<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*out,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="2860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_get_address_string<sp/>(out,cDBusDaemonMutex,scope);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2865"><highlight class="normal">_dbus_daemon_is_session_bus_address_published<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="2866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/>HANDLE<sp/>lock;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>mutex_name;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_mutex_name(&amp;mutex_name,scope))</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hDBusDaemonMutex)</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sync<sp/>_dbus_daemon_publish_session_bus_address,<sp/>_dbus_daemon_unpublish_session_bus_address<sp/>and<sp/>_dbus_daemon_already_runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/>lock<sp/>=<sp/>_dbus_global_lock(<sp/>cUniqueDBusInitMutex<sp/>);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>CreateMutex<sp/>instead<sp/>of<sp/>OpenMutex<sp/>because<sp/>of<sp/>possible<sp/>race<sp/>conditions,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>http://msdn.microsoft.com/en-us/library/ms684315%28VS.85%29.aspx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/>hDBusDaemonMutex<sp/>=<sp/>CreateMutexA(<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>_dbus_string_get_const_data(&amp;mutex_name)<sp/>);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>client<sp/>uses<sp/>mutex<sp/>ownership<sp/>to<sp/>detect<sp/>a<sp/>running<sp/>server,<sp/>so<sp/>the<sp/>server<sp/>should<sp/>do<sp/>so<sp/>too.</highlight></codeline>
<codeline lineno="2887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Fortunally<sp/>the<sp/>client<sp/>deletes<sp/>the<sp/>mutex<sp/>in<sp/>the<sp/>lock<sp/>protected<sp/>area,<sp/>so<sp/>checking<sp/>presence<sp/></highlight></codeline>
<codeline lineno="2888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>will<sp/>work<sp/>too.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hDBusDaemonMutex<sp/><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetLastError()<sp/>==<sp/>ERROR_ALREADY_EXISTS)</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(hDBusDaemonMutex);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hDBusDaemonMutex<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mutex<sp/>wasn&apos;t<sp/>created<sp/>before,<sp/>so<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>leave<sp/>the<sp/>mutex<sp/>name<sp/>allocated<sp/>for<sp/>later<sp/>reusage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>_dbus_daemon_publish_session_bus_address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2909"><highlight class="normal">_dbus_daemon_publish_session_bus_address<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/>HANDLE<sp/>lock;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shared_addr<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>shm_name;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>mutex_name;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(address);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_mutex_name(&amp;mutex_name,scope))</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sync<sp/>_dbus_daemon_publish_session_bus_address,<sp/>_dbus_daemon_unpublish_session_bus_address<sp/>and<sp/>_dbus_daemon_already_runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/>lock<sp/>=<sp/>_dbus_global_lock(<sp/>cUniqueDBusInitMutex<sp/>);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hDBusDaemonMutex)</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hDBusDaemonMutex<sp/>=<sp/>CreateMutexA(<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>_dbus_string_get_const_data(&amp;mutex_name)<sp/>);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>acquire<sp/>the<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WaitForSingleObject(<sp/>hDBusDaemonMutex,<sp/>10<sp/>)<sp/>!=<sp/>WAIT_OBJECT_0)</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(<sp/>hDBusDaemonMutex<sp/>);</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_shm_name(&amp;shm_name,scope))</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;shm_name<sp/>);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>shm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/>hDBusSharedMem<sp/>=<sp/>CreateFileMappingA(<sp/>INVALID_HANDLE_VALUE,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>PAGE_READWRITE,</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>strlen(<sp/>address<sp/>)<sp/>+<sp/>1,<sp/>_dbus_string_get_const_data(&amp;shm_name)<sp/>);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(<sp/>hDBusSharedMem<sp/>);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/>shared_addr<sp/>=<sp/>MapViewOfFile(<sp/>hDBusSharedMem,<sp/>FILE_MAP_WRITE,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(shared_addr);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/>strcpy(<sp/>shared_addr,<sp/>address);</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/>UnmapViewOfFile(<sp/>shared_addr<sp/>);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/>_dbus_verbose(<sp/></highlight><highlight class="stringliteral">&quot;published<sp/>session<sp/>bus<sp/>address<sp/>at<sp/>%s\n&quot;</highlight><highlight class="normal">,_dbus_string_get_const_data<sp/>(&amp;shm_name)<sp/>);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;shm_name<sp/>);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal">_dbus_daemon_unpublish_session_bus_address<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/>HANDLE<sp/>lock;</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sync<sp/>_dbus_daemon_publish_session_bus_address,<sp/>_dbus_daemon_unpublish_session_bus_address<sp/>and<sp/>_dbus_daemon_already_runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/>lock<sp/>=<sp/>_dbus_global_lock(<sp/>cUniqueDBusInitMutex<sp/>);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/>CloseHandle(<sp/>hDBusSharedMem<sp/>);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/>hDBusSharedMem<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/>ReleaseMutex(<sp/>hDBusDaemonMutex<sp/>);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/>CloseHandle(<sp/>hDBusDaemonMutex<sp/>);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/>hDBusDaemonMutex<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2991"><highlight class="normal">_dbus_get_autolaunch_shm<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*address,<sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*shm_name)</highlight></codeline>
<codeline lineno="2992"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/>HANDLE<sp/>sharedMem;</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*shared_addr;</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>shm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;20;++i)<sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>know<sp/>that<sp/>dbus-daemon<sp/>is<sp/>available,<sp/>so<sp/>we<sp/>wait<sp/>until<sp/>shm<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sharedMem<sp/>=<sp/>OpenFileMappingA(<sp/>FILE_MAP_READ,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>_dbus_string_get_const_data(shm_name));</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sharedMem<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sleep(<sp/>100<sp/>);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sharedMem<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sharedMem<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/>shared_addr<sp/>=<sp/>MapViewOfFile(<sp/>sharedMem,<sp/>FILE_MAP_READ,<sp/>0,<sp/>0,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!shared_addr<sp/>)</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref>(<sp/>address<sp/>);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(<sp/>address,<sp/>shared_addr<sp/>);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/>UnmapViewOfFile(<sp/>shared_addr<sp/>);</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/>CloseHandle(<sp/>sharedMem<sp/>);</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3028"><highlight class="normal">_dbus_daemon_already_runs<sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*address,<sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*shm_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope)</highlight></codeline>
<codeline lineno="3029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/>HANDLE<sp/>lock;</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/>HANDLE<sp/>daemon;</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>mutex_name;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>bRet<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_mutex_name(&amp;mutex_name,scope))</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sync<sp/>_dbus_daemon_publish_session_bus_address,<sp/>_dbus_daemon_unpublish_session_bus_address<sp/>and<sp/>_dbus_daemon_already_runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/>lock<sp/>=<sp/>_dbus_global_lock(<sp/>cUniqueDBusInitMutex<sp/>);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/>daemon<sp/>=<sp/>CreateMutexA(<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>_dbus_string_get_const_data(&amp;mutex_name)<sp/>);</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(WaitForSingleObject(<sp/>daemon,<sp/>10<sp/>)<sp/>!=<sp/>WAIT_TIMEOUT)</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMutex<sp/>(daemon);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle<sp/>(daemon);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>shm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/>bRet<sp/>=<sp/>_dbus_get_autolaunch_shm(<sp/>address,<sp/>shm_name<sp/>);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/>CloseHandle<sp/>(<sp/>daemon<sp/>);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/>_dbus_global_unlock(<sp/>lock<sp/>);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref>(<sp/>&amp;mutex_name<sp/>);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bRet;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3069" refid="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gabc4712c0db91f11854cdd933027355af" kindref="member">_dbus_get_autolaunch_address</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scope,<sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*address,</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="3071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/>HANDLE<sp/>mutex;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/>STARTUPINFOA<sp/>si;</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/>PROCESS_INFORMATION<sp/>pi;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/>LPSTR<sp/>lpFile;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dbus_exe_path[MAX_PATH];</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dbus_args[MAX_PATH<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>daemon_name<sp/>=<sp/>DBUS_DAEMON_NAME<sp/></highlight><highlight class="stringliteral">&quot;.exe&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>shm_name;</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_shm_name(&amp;shm_name,scope))</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>determine<sp/>shm<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/>mutex<sp/>=<sp/>_dbus_global_lock<sp/>(<sp/>cDBusAutolaunchMutex<sp/>);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_daemon_already_runs(address,&amp;shm_name,scope))</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose(<sp/></highlight><highlight class="stringliteral">&quot;found<sp/>running<sp/>dbus<sp/>daemon<sp/>at<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;shm_name)<sp/>);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SearchPathA(<ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>daemon_name,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dbus_exe_path),<sp/>dbus_exe_path,<sp/>&amp;lpFile))</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>in<sp/>directory<sp/>containing<sp/>dbus<sp/>shared<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HMODULE<sp/>hmod;</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dbus_module_path[MAX_PATH];</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>rc;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"></highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose(<sp/></highlight><highlight class="stringliteral">&quot;did<sp/>not<sp/>found<sp/>dbus<sp/>daemon<sp/>executable<sp/>on<sp/>default<sp/>search<sp/>path,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;trying<sp/>path<sp/>where<sp/>dbus<sp/>shared<sp/>library<sp/>is<sp/>located&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hmod<sp/>=<sp/>_dbus_win_get_dll_hmodule();</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rc<sp/>=<sp/>GetModuleFileNameA(hmod,<sp/>dbus_module_path,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dbus_module_path));</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>retrieve<sp/>dbus<sp/>shared<sp/>library<sp/>file<sp/>name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ext_idx<sp/>=<sp/>strrchr(dbus_module_path,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ext_idx)</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ext_idx<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SearchPathA(dbus_module_path,<sp/>daemon_name,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dbus_exe_path),<sp/>dbus_exe_path,<sp/>&amp;lpFile))</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;could<sp/>not<sp/>find<sp/>dbus-daemon<sp/>executable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;please<sp/>add<sp/>the<sp/>path<sp/>to<sp/>%s<sp/>to<sp/>your<sp/>PATH<sp/>environment<sp/>variable\n&quot;</highlight><highlight class="normal">,<sp/>daemon_name);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;or<sp/>start<sp/>the<sp/>daemon<sp/>manually\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose(<sp/></highlight><highlight class="stringliteral">&quot;found<sp/>dbus<sp/>daemon<sp/>executable<sp/>at<sp/>%s&quot;</highlight><highlight class="normal">,dbus_module_path);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/>ZeroMemory(<sp/>&amp;si,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(si)<sp/>);</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/>si.cb<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(si);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/>ZeroMemory(<sp/>&amp;pi,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pi)<sp/>);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/>_snprintf(dbus_args,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dbus_args)<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;%s\&quot;<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>dbus_exe_path,<sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>--session&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>argv[i]<sp/>=<sp/>&quot;--config-file=bus\\session.conf&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>printf(&quot;create<sp/>process<sp/>\&quot;%s\&quot;<sp/>%s\n&quot;,<sp/>dbus_exe_path,<sp/>dbus_args);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(CreateProcessA(dbus_exe_path,<sp/>dbus_args,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>CREATE_NO_WINDOW,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;si,<sp/>&amp;pi))</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle<sp/>(pi.hThread);</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle<sp/>(pi.hProcess);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>_dbus_get_autolaunch_shm(<sp/>address,<sp/>&amp;shm_name<sp/>);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>get<sp/>autolaunch<sp/>address<sp/>from<sp/>launched<sp/>dbus-daemon&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga3cc15cc37bcd3aaca87aa4d791c124f5" kindref="member">dbus_set_error_const</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>launch<sp/>dbus-daemon&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal">out:</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval)</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/>_DBUS_ASSERT_ERROR_IS_SET<sp/>(error);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/>_dbus_global_unlock<sp/>(mutex);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3178" refid="group__DBusFile_1ga7c83e2e20811330d1d1b2f6249dbe66c" refkind="member"><highlight class="normal"><ref refid="group__DBusFile_1ga7c83e2e20811330d1d1b2f6249dbe66c" kindref="member">_dbus_make_file_world_readable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename,</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error)</highlight></codeline>
<codeline lineno="3180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></highlight></codeline>
<codeline lineno="3193" refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member">_dbus_atomic_inc</ref><sp/>(<ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref><sp/>*atomic)</highlight></codeline>
<codeline lineno="3194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+/-<sp/>1<sp/>is<sp/>needed<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>volatile<sp/>argument<sp/>with<sp/>mingw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InterlockedIncrement<sp/>(&amp;atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member">value</ref>)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></highlight></codeline>
<codeline lineno="3208" refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" kindref="member">_dbus_atomic_dec</ref><sp/>(<ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref><sp/>*atomic)</highlight></codeline>
<codeline lineno="3209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+/-<sp/>1<sp/>is<sp/>needed<sp/>here!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>volatile<sp/>argument<sp/>with<sp/>mingw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>InterlockedDecrement<sp/>(&amp;atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member">value</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></highlight></codeline>
<codeline lineno="3223" refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member">_dbus_atomic_get</ref><sp/>(<ref refid="structDBusAtomic" kindref="compound">DBusAtomic</ref><sp/>*atomic)</highlight></codeline>
<codeline lineno="3224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>this<sp/>situation,<sp/>GLib<sp/>issues<sp/>a<sp/>MemoryBarrier()<sp/>and<sp/>then<sp/>returns</highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/><sp/><sp/>*<sp/>atomic-&gt;value.<sp/>However,<sp/>mingw<sp/>from<sp/>mingw.org<sp/>(not<sp/>to<sp/>be<sp/>confused<sp/>with</highlight></codeline>
<codeline lineno="3227"><highlight class="comment"><sp/><sp/><sp/>*<sp/>mingw-w64<sp/>from<sp/>mingw-w64.sf.net)<sp/>does<sp/>not<sp/>have<sp/>MemoryBarrier<sp/>in<sp/>its</highlight></codeline>
<codeline lineno="3228"><highlight class="comment"><sp/><sp/><sp/>*<sp/>headers,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>get<sp/>a<sp/>memory<sp/>barrier<sp/>some<sp/>other<sp/>way.</highlight></codeline>
<codeline lineno="3229"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3230"><highlight class="comment"><sp/><sp/><sp/>*<sp/>InterlockedIncrement<sp/>is<sp/>older,<sp/>and<sp/>is<sp/>documented<sp/>on<sp/>MSDN<sp/>to<sp/>be<sp/>a<sp/>full</highlight></codeline>
<codeline lineno="3231"><highlight class="comment"><sp/><sp/><sp/>*<sp/>memory<sp/>barrier,<sp/>so<sp/>let&apos;s<sp/>use<sp/>that.</highlight></codeline>
<codeline lineno="3232"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dummy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/>InterlockedExchange<sp/>(&amp;dummy,<sp/>1);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomic-&gt;<ref refid="structDBusAtomic_1aef100f17856a635a9d0f3cae7a7f6bf8" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="3238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3248" refid="group__DBusSysdeps_1ga184b42c4b42b91ef73e9ee50a1fa12c2" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga184b42c4b42b91ef73e9ee50a1fa12c2" kindref="member">_dbus_flush_caches</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3259" refid="group__DBusSysdeps_1ga1895e860a4a9993cea584ec7e30dd71d" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga1895e860a4a9993cea584ec7e30dd71d" kindref="member">_dbus_get_is_errno_eagain_or_ewouldblock</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e)</highlight></codeline>
<codeline lineno="3260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>e<sp/>==<sp/>WSAEWOULDBLOCK;</highlight></codeline>
<codeline lineno="3262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3272"><highlight class="normal">_dbus_get_install_root(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="3273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//To<sp/>find<sp/>the<sp/>prefix,<sp/>we<sp/>cut<sp/>the<sp/>filename<sp/>and<sp/>also<sp/>\bin\<sp/>if<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>pathLength;</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*lastSlash;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/>SetLastError(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/>pathLength<sp/>=<sp/>GetModuleFileNameA(_dbus_win_get_dll_hmodule(),<sp/>prefix,<sp/>len);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pathLength<sp/>==<sp/>0<sp/>||<sp/>GetLastError()<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prefix<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSlash<sp/>=<sp/>_mbsrchr(prefix,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastSlash<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prefix<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cut<sp/>off<sp/>binary<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>lastSlash[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cut<sp/>possible<sp/>&quot;\\bin&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>fails<sp/>if<sp/>we<sp/>are<sp/>in<sp/>a<sp/>double-byte<sp/>system<sp/>codepage<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//folder&apos;s<sp/>name<sp/>happens<sp/>to<sp/>end<sp/>with<sp/>the<sp/>*bytes*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&quot;\\bin&quot;...<sp/>(I.e.<sp/>the<sp/>second<sp/>byte<sp/>of<sp/>some<sp/>Han<sp/>character<sp/>and<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>Latin<sp/>&quot;bin&quot;,<sp/>but<sp/>that<sp/>is<sp/>not<sp/>likely<sp/>I<sp/>think...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastSlash<sp/>-<sp/>prefix<sp/>&gt;=<sp/>4<sp/>&amp;&amp;<sp/>strnicmp(lastSlash<sp/>-<sp/>4,<sp/></highlight><highlight class="stringliteral">&quot;\\bin&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSlash[-3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastSlash<sp/>-<sp/>prefix<sp/>&gt;=<sp/>10<sp/>&amp;&amp;<sp/>strnicmp(lastSlash<sp/>-<sp/>10,<sp/></highlight><highlight class="stringliteral">&quot;\\bin\\debug&quot;</highlight><highlight class="normal">,<sp/>10)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSlash[-9]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastSlash<sp/>-<sp/>prefix<sp/>&gt;=<sp/>12<sp/>&amp;&amp;<sp/>strnicmp(lastSlash<sp/>-<sp/>12,<sp/></highlight><highlight class="stringliteral">&quot;\\bin\\release&quot;</highlight><highlight class="normal">,<sp/>12)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSlash[-11]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/></highlight></codeline>
<codeline lineno="3321"><highlight class="normal">_dbus_get_config_file_name(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*config_file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="3322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[MAX_PATH*2];</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>path_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(path);</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_install_root(path,path_size))</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(s)<sp/>+<sp/>4<sp/>+<sp/>strlen(path)<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(path)-2)</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/>strcat(path,</highlight><highlight class="stringliteral">&quot;etc\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>strcat(path,s);</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" kindref="member">_dbus_file_exists</ref>(path))<sp/></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>path<sp/>from<sp/>executable<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(config_file,<sp/>path))</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_install_root(path,path_size))</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(s)<sp/>+<sp/>11<sp/>+<sp/>strlen(path)<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(path)-2)</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcat(path,</highlight><highlight class="stringliteral">&quot;etc\\dbus-1\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcat(path,s);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" kindref="member">_dbus_file_exists</ref>(path))<sp/></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(config_file,<sp/>path))</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_get_install_root(path,path_size))</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(s)<sp/>+<sp/>4<sp/>+<sp/>strlen(path)<sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(path)-2)</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(path,</highlight><highlight class="stringliteral">&quot;bus\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(path,s);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" kindref="member">_dbus_file_exists</ref>(path))<sp/></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(config_file,<sp/>path))</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>See<sp/>comment<sp/>in<sp/>dbus-sysdeps-unix.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3374" refid="group__DBusSysdeps_1gade479f90c1083346d74bc21af178d856" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1gade479f90c1083346d74bc21af178d856" kindref="member">_dbus_lookup_session_address</ref><sp/>(<ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>*supported,</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*address,</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Probably<sp/>fill<sp/>this<sp/>in<sp/>with<sp/>something<sp/>based<sp/>on<sp/>COM?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/>*supported<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3397" refid="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3cc5a5734416858fa58f3166ed181a64" kindref="member">_dbus_append_keyring_directory_for_credentials</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/>*directory,</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusCredentials" kindref="compound">DBusCredentials</ref><sp/>*credentials)</highlight></codeline>
<codeline lineno="3399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>homedir;</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>dotdir;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*homepath;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*homedrive;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(credentials<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!<ref refid="group__DBusCredentials_1gabfd7a1f681a91b45ba2f4e7461131827" kindref="member">_dbus_credentials_are_anonymous</ref><sp/>(credentials));</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;homedir))</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/>homedrive<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member">_dbus_getenv</ref>(</highlight><highlight class="stringliteral">&quot;HOMEDRIVE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(homedrive<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>*homedrive<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(&amp;homedir,homedrive);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/>homepath<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member">_dbus_getenv</ref>(</highlight><highlight class="stringliteral">&quot;HOMEPATH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(homepath<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>*homepath<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref>(&amp;homedir,homepath);</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_EMBEDDED_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DBUS_TEST_HOMEDIR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>*</highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;homedir,<sp/>0);</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga100c5ce0696822c5a4cfbdfaba674d96" kindref="member">_dbus_string_append</ref><sp/>(&amp;homedir,<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Using<sp/>fake<sp/>homedir<sp/>for<sp/>testing:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;homedir));</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>strictly<sp/>thread-safe,<sp/>but<sp/>if<sp/>we<sp/>fail<sp/>at<sp/>thread-safety<sp/>here,</highlight></codeline>
<codeline lineno="3440"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>worst<sp/>that<sp/>will<sp/>happen<sp/>is<sp/>some<sp/>extra<sp/>warnings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>already_warned<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!already_warned)</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Using<sp/>your<sp/>real<sp/>home<sp/>directory<sp/>for<sp/>testing,<sp/>set<sp/>DBUS_TEST_HOMEDIR<sp/>to<sp/>avoid\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>already_warned<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>It&apos;s<sp/>not<sp/>possible<sp/>to<sp/>create<sp/>a<sp/>.something<sp/>directory<sp/>in<sp/>Windows<sp/>CE</highlight></codeline>
<codeline lineno="3453"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>using<sp/>the<sp/>file<sp/>explorer.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEYRING_DIR<sp/>&quot;dbus-keyrings&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KEYRING_DIR<sp/>&quot;.dbus-keyrings&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref><sp/>(&amp;dotdir,<sp/>KEYRING_DIR);</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdeps_1gae3a3fdc0c6001e367584bb016aca495d" kindref="member">_dbus_concat_dir_and_file</ref><sp/>(&amp;homedir,</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dotdir))</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member">_dbus_string_copy</ref><sp/>(&amp;homedir,<sp/>0,</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directory,<sp/>_dbus_string_get_length<sp/>(directory)))<sp/>{</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;homedir);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/>failed:<sp/></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;homedir);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/></highlight></codeline>
<codeline lineno="3483" refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" refkind="member"><highlight class="normal"><ref refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" kindref="member">_dbus_file_exists</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)</highlight></codeline>
<codeline lineno="3484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/>DWORD<sp/>attributes<sp/>=<sp/>GetFileAttributesA<sp/>(file);</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attributes<sp/>!=<sp/>INVALID_FILE_ATTRIBUTES<sp/>&amp;&amp;<sp/>GetLastError()<sp/>!=<sp/>ERROR_PATH_NOT_FOUND)</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="3491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3501"><highlight class="normal">_dbus_strerror<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_number)</highlight></codeline>
<codeline lineno="3502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(error_number)</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEINTR:</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Interrupted<sp/>function<sp/>call&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEACCES:</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Permission<sp/>denied&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEFAULT:</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>address&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEINVAL:</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>argument&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEMFILE:</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>open<sp/>files&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEWOULDBLOCK:</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Resource<sp/>temporarily<sp/>unavailable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEINPROGRESS:</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Operation<sp/>now<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEALREADY:</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Operation<sp/>already<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENOTSOCK:</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>operation<sp/>on<sp/>nonsocket&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEDESTADDRREQ:</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Destination<sp/>address<sp/>required&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEMSGSIZE:</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>too<sp/>long&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEPROTOTYPE:</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Protocol<sp/>wrong<sp/>type<sp/>for<sp/>socket&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENOPROTOOPT:</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>protocol<sp/>option&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEPROTONOSUPPORT:</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Protocol<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAESOCKTNOSUPPORT:</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>type<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEOPNOTSUPP:</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Operation<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEPFNOSUPPORT:</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Protocol<sp/>family<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEAFNOSUPPORT:</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Address<sp/>family<sp/>not<sp/>supported<sp/>by<sp/>protocol<sp/>family&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEADDRINUSE:</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Address<sp/>already<sp/>in<sp/>use&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEADDRNOTAVAIL:</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>assign<sp/>requested<sp/>address&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENETDOWN:</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Network<sp/>is<sp/>down&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENETUNREACH:</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Network<sp/>is<sp/>unreachable&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENETRESET:</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Network<sp/>dropped<sp/>connection<sp/>on<sp/>reset&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAECONNABORTED:</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Software<sp/>caused<sp/>connection<sp/>abort&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAECONNRESET:</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>reset<sp/>by<sp/>peer&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENOBUFS:</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>buffer<sp/>space<sp/>available&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEISCONN:</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>is<sp/>already<sp/>connected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAENOTCONN:</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Socket<sp/>is<sp/>not<sp/>connected&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAESHUTDOWN:</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>send<sp/>after<sp/>socket<sp/>shutdown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAETIMEDOUT:</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>timed<sp/>out&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAECONNREFUSED:</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Connection<sp/>refused&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEHOSTDOWN:</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>is<sp/>down&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEHOSTUNREACH:</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>route<sp/>to<sp/>host&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEPROCLIM:</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Too<sp/>many<sp/>processes&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAEDISCON:</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Graceful<sp/>shutdown<sp/>in<sp/>progress&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSATYPE_NOT_FOUND:</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>type<sp/>not<sp/>found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAHOST_NOT_FOUND:</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Host<sp/>not<sp/>found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSATRY_AGAIN:</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Nonauthoritative<sp/>host<sp/>not<sp/>found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSANO_RECOVERY:</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>nonrecoverable<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSANO_DATA:</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Valid<sp/>name,<sp/>no<sp/>data<sp/>record<sp/>of<sp/>requested<sp/>type&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSA_INVALID_HANDLE:</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Specified<sp/>event<sp/>object<sp/>handle<sp/>is<sp/>invalid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSA_INVALID_PARAMETER:</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;One<sp/>or<sp/>more<sp/>parameters<sp/>are<sp/>invalid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSA_IO_INCOMPLETE:</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Overlapped<sp/>I/O<sp/>event<sp/>object<sp/>not<sp/>in<sp/>signaled<sp/>state&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSA_IO_PENDING:</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Overlapped<sp/>operations<sp/>will<sp/>complete<sp/>later&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSA_NOT_ENOUGH_MEMORY:</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>memory<sp/>available&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSA_OPERATION_ABORTED:</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Overlapped<sp/>operation<sp/>aborted&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WSAINVALIDPROCTABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAINVALIDPROCTABLE:</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>procedure<sp/>table<sp/>from<sp/>service<sp/>provider&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WSAINVALIDPROVIDER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAINVALIDPROVIDER:</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>service<sp/>provider<sp/>version<sp/>number&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WSAPROVIDERFAILEDINIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSAPROVIDERFAILEDINIT:</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>initialize<sp/>a<sp/>service<sp/>provider&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WSASYSCALLFAILURE:</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;System<sp/>call<sp/>failure&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/>msg<sp/>=<sp/>strerror<sp/>(error_number);</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//DBUS_WINCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal">_dbus_win_set_error_from_win_error<sp/>(<ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>*error,</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code)</highlight></codeline>
<codeline lineno="3640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg;</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>As<sp/>we<sp/>want<sp/>the<sp/>English<sp/>message,<sp/>use<sp/>the<sp/>A<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/>FormatMessageA<sp/>(FORMAT_MESSAGE_ALLOCATE_BUFFER<sp/>|</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FORMAT_MESSAGE_IGNORE_INSERTS<sp/>|</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FORMAT_MESSAGE_FROM_SYSTEM,</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>code,<sp/>MAKELANGID<sp/>(LANG_ENGLISH,<sp/>SUBLANG_ENGLISH_US),</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPSTR)<sp/>&amp;msg,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg_copy;</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg_copy<sp/>=<sp/><ref refid="group__DBusMemory_1gaf6e588659067a854c3cca7ebe8ae5084" kindref="member">dbus_malloc</ref><sp/>(strlen<sp/>(msg));</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy<sp/>(msg_copy,<sp/>msg);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree<sp/>(msg);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/></highlight><highlight class="stringliteral">&quot;win32.error&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>msg_copy);</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/></highlight><highlight class="stringliteral">&quot;win32.error&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error<sp/>code<sp/>%d<sp/>or<sp/>FormatMessage<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>code);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal">_dbus_win_warn_win_error<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>code)</highlight></codeline>
<codeline lineno="3666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>error;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga8937f0b7cdf8554fa6305158ce453fbe" kindref="member">dbus_error_init</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/>_dbus_win_set_error_from_win_error<sp/>(&amp;error,<sp/>code);</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;%s:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>message,<sp/>error.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref><sp/>(&amp;error);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3683" refid="group__DBusSysdeps_1ga3bc1512aef42cea17a2aaacc7d8e7211" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga3bc1512aef42cea17a2aaacc7d8e7211" kindref="member">_dbus_delete_directory</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename,</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="3685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename_c;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/>_DBUS_ASSERT_ERROR_IS_CLEAR<sp/>(error);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/>filename_c<sp/>=<sp/>_dbus_string_get_const_data<sp/>(filename);</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RemoveDirectoryA<sp/>(filename_c)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*emsg<sp/>=<sp/>_dbus_win_error_string<sp/>(GetLastError<sp/>());</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/>_dbus_win_error_from_last_error<sp/>(),</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>remove<sp/>directory<sp/>%s:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename_c,<sp/>emsg);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_free_error_string<sp/>(emsg);</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3712" refid="group__DBusSysdeps_1ga6d80876bcae54f47cde79d0bce20321d" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6d80876bcae54f47cde79d0bce20321d" kindref="member">_dbus_path_is_absolute</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*filename)</highlight></codeline>
<codeline lineno="3713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_string_get_length<sp/>(filename)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_string_get_byte<sp/>(filename,<sp/>1)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_dbus_string_get_byte<sp/>(filename,<sp/>0)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_dbus_string_get_byte<sp/>(filename,<sp/>0)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3723" refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" refkind="member"><highlight class="normal"><ref refid="group__DBusSysdeps_1ga6c14c6bf4dd98b3fe3a114e9f5630148" kindref="member">_dbus_check_setuid</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal">_dbus_save_socket_errno<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errno;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal">_dbus_restore_socket_errno<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>saved_errno)</highlight></codeline>
<codeline lineno="3736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/>_dbus_win_set_errno<sp/>(saved_errno);</highlight></codeline>
<codeline lineno="3738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="comment">/*<sp/>tests<sp/>in<sp/>dbus-sysdeps-util.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-sysdeps-win.c"/>
  </compounddef>
</doxygen>
