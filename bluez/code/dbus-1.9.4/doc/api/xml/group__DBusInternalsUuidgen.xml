<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__DBusInternalsUuidgen" kind="group">
    <compoundname>DBusInternalsUuidgen</compoundname>
    <title>dbus-uuidgen implementation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusInternalsUuidgen_1gadb44047ad617f49b6a13906fd64a4d3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t return_uuid</definition>
        <argsstring>(DBusGUID *uuid, char **uuid_p, DBusError *error)</argsstring>
        <name>return_uuid</name>
        <param>
          <type><ref refid="unionDBusGUID" kindref="compound">DBusGUID</ref> *</type>
          <declname>uuid</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>uuid_p</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-uuidgen.c" line="45" column="1" bodyfile="dbus/dbus-uuidgen.c" bodystart="45" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUuidgen_1ga1af5f50499f4c9b7dcaa1b36140b8f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_internal_do_not_use_get_uuid</definition>
        <argsstring>(const char *filename, char **uuid_p, dbus_bool_t create_if_not_found, DBusError *error)</argsstring>
        <name>dbus_internal_do_not_use_get_uuid</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>uuid_p</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>create_if_not_found</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>For use by the dbus-uuidgen binary ONLY, do not call this. </para>        </briefdescription>
        <detaileddescription>
<para>We can and will change this function without modifying the libdbus soname.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the file or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> for the machine ID file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uuid_p</parametername>
</parameternamelist>
<parameterdescription>
<para>out param to return the uuid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>create_if_not_found</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to create it if not already there </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-uuidgen.c" line="83" column="1" bodyfile="dbus/dbus-uuidgen.c" bodystart="83" bodyend="111"/>
        <references refid="group__DBusSysdeps_1ga3f073afc8ef8397471531baf513e1bb5" compoundref="dbus-sysdeps-unix_8c" startline="3684" endline="3721">_dbus_read_local_machine_uuid</references>
        <references refid="group__DBusInternalsUtils_1ga709fd30e6b940a5952af38efaf24ad51" compoundref="dbus-internals_8c" startline="806" endline="837">_dbus_read_uuid_file</references>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusInternalsUuidgen_1ga1ae9da9ff933f3c87ca984161db02b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_internal_do_not_use_create_uuid</definition>
        <argsstring>(char **uuid_p)</argsstring>
        <name>dbus_internal_do_not_use_create_uuid</name>
        <param>
          <type>char **</type>
          <declname>uuid_p</declname>
        </param>
        <briefdescription>
<para>For use by the dbus-uuidgen binary ONLY, do not call this. </para>        </briefdescription>
        <detaileddescription>
<para>We can and will change this function without modifying the libdbus soname.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uuid_p</parametername>
</parameternamelist>
<parameterdescription>
<para>out param to return the uuid </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-uuidgen.c" line="122" column="1" bodyfile="dbus/dbus-uuidgen.c" bodystart="122" bodyend="128"/>
        <references refid="group__DBusInternalsUtils_1ga08c2922335845e5c857e88399436b9ba" compoundref="dbus-internals_8c" startline="641" endline="653">_dbus_generate_uuid</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions for dbus-uuidgen binary. </para>    </briefdescription>
    <detaileddescription>
<para>These are not considered part of the ABI, and if you call them you will get screwed by future changes. </para>    </detaileddescription>
  </compounddef>
</doxygen>
