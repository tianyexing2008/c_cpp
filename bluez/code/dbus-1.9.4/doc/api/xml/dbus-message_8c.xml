<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-message_8c" kind="file" language="C++">
    <compoundname>dbus-message.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-marshal-recursive_8h" local="yes">dbus-marshal-recursive.h</includes>
    <includes refid="dbus-marshal-validate_8h" local="yes">dbus-marshal-validate.h</includes>
    <includes refid="dbus-marshal-byteswap_8h" local="yes">dbus-marshal-byteswap.h</includes>
    <includes refid="dbus-marshal-header_8h" local="yes">dbus-marshal-header.h</includes>
    <includes refid="dbus-signature_8h" local="yes">dbus-signature.h</includes>
    <includes refid="dbus-message-private_8h" local="yes">dbus-message-private.h</includes>
    <includes refid="dbus-object-tree_8h" local="yes">dbus-object-tree.h</includes>
    <includes refid="dbus-memory_8h" local="yes">dbus-memory.h</includes>
    <includes refid="dbus-list_8h" local="yes">dbus-list.h</includes>
    <includes refid="dbus-threads-internal_8h" local="yes">dbus-threads-internal.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="2088">
        <label>dbus-signature.h</label>
        <link refid="dbus-signature_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
      </node>
      <node id="2077">
        <label>stdarg.h</label>
      </node>
      <node id="2083">
        <label>dbus/dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="2064" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2072" relation="include">
        </childnode>
      </node>
      <node id="2093">
        <label>dbus/dbus-connection.h</label>
        <link refid="dbus-connection_8h_source"/>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2094" relation="include">
        </childnode>
      </node>
      <node id="2071">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="2066">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="2073">
        <label>stdint.h</label>
      </node>
      <node id="2094">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="2079">
        <label>sys/poll.h</label>
      </node>
      <node id="2087">
        <label>dbus/dbus-marshal-basic.h</label>
        <link refid="dbus-marshal-basic_8h_source"/>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
      </node>
      <node id="2092">
        <label>dbus/dbus-resources.h</label>
        <link refid="dbus-resources_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2072">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2073" relation="include">
        </childnode>
        <childnode refid="2074" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2075" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
        <childnode refid="2079" relation="include">
        </childnode>
      </node>
      <node id="2064">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2072" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
      </node>
      <node id="2067">
        <label>stddef.h</label>
      </node>
      <node id="2076">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
      </node>
      <node id="2086">
        <label>dbus-marshal-header.h</label>
        <link refid="dbus-marshal-header_8h_source"/>
        <childnode refid="2087" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
      </node>
      <node id="2069">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
      </node>
      <node id="2078">
        <label>string.h</label>
      </node>
      <node id="2081">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
      </node>
      <node id="2084">
        <label>dbus-marshal-validate.h</label>
        <link refid="dbus-marshal-validate_8h_source"/>
      </node>
      <node id="2091">
        <label>dbus/dbus-message-internal.h</label>
        <link refid="dbus-message-internal_8h_source"/>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2092" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
      </node>
      <node id="2085">
        <label>dbus-marshal-byteswap.h</label>
        <link refid="dbus-marshal-byteswap_8h_source"/>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
      </node>
      <node id="2096">
        <label>dbus-object-tree.h</label>
        <link refid="dbus-object-tree_8h_source"/>
        <childnode refid="2093" relation="include">
        </childnode>
      </node>
      <node id="2062">
        <label>dbus-message.c</label>
        <link refid="dbus-message.c"/>
        <childnode refid="2063" relation="include">
        </childnode>
        <childnode refid="2064" relation="include">
        </childnode>
        <childnode refid="2082" relation="include">
        </childnode>
        <childnode refid="2084" relation="include">
        </childnode>
        <childnode refid="2085" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
        <childnode refid="2088" relation="include">
        </childnode>
        <childnode refid="2089" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
        <childnode refid="2080" relation="include">
        </childnode>
        <childnode refid="2078" relation="include">
        </childnode>
      </node>
      <node id="2090">
        <label>dbus/dbus-message.h</label>
        <link refid="dbus-message_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
        <childnode refid="2065" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
        <childnode refid="2077" relation="include">
        </childnode>
      </node>
      <node id="2095">
        <label>dbus/dbus-dataslot.h</label>
        <link refid="dbus-dataslot_8h_source"/>
        <childnode refid="2064" relation="include">
        </childnode>
      </node>
      <node id="2080">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2081" relation="include">
        </childnode>
      </node>
      <node id="2082">
        <label>dbus-marshal-recursive.h</label>
        <link refid="dbus-marshal-recursive_8h_source"/>
        <childnode refid="2071" relation="include">
        </childnode>
        <childnode refid="2083" relation="include">
        </childnode>
      </node>
      <node id="2063">
        <label>config.h</label>
      </node>
      <node id="2075">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2070" relation="include">
        </childnode>
      </node>
      <node id="2070">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2068" relation="include">
        </childnode>
        <childnode refid="2071" relation="include">
        </childnode>
      </node>
      <node id="2068">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="2067" relation="include">
        </childnode>
        <childnode refid="2069" relation="include">
        </childnode>
      </node>
      <node id="2074">
        <label>inttypes.h</label>
      </node>
      <node id="2089">
        <label>dbus-message-private.h</label>
        <link refid="dbus-message-private_8h_source"/>
        <childnode refid="2090" relation="include">
        </childnode>
        <childnode refid="2091" relation="include">
        </childnode>
        <childnode refid="2076" relation="include">
        </childnode>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2086" relation="include">
        </childnode>
      </node>
      <node id="2065">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="2066" relation="include">
        </childnode>
        <childnode refid="2067" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structDBusMessageRealIter" prot="public">DBusMessageRealIter</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dbus-message_8c_1abb4e1d1cc9d36debd3a49cbe793e8b1e" prot="public" static="no">
        <name>_DBUS_TYPE_IS_STRINGLIKE</name>
        <param><defname>type</defname></param>
        <initializer>(type == <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> || type == <ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref> || \
   type == <ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="44" column="9" bodyfile="dbus/dbus-message.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMessageInternals_1gaea37a18258a4c9fd96f965e35cb13bef" prot="public" static="no">
        <name>_dbus_enable_message_cache</name>
        <param></param>
        <initializer>(<ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="88" column="12" bodyfile="dbus/dbus-message.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMessageInternals_1ga1dfae386ef0d4d808584abeafc44e8ca" prot="public" static="no">
        <name>ensure_byte_order</name>
        <param><defname>message</defname></param>
        <initializer>_dbus_message_byteswap (message)</initializer>
        <briefdescription>
<para>byte-swap the message if it doesn&apos;t match our byte order. </para>        </briefdescription>
        <detaileddescription>
<para>Called only when we need the message in our own byte order, normally when reading arrays of integers or doubles. Otherwise should not be called since it would do needless work. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="195" column="9" bodyfile="dbus/dbus-message.c" bodystart="195" bodyend="-1"/>
        <referencedby refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" compoundref="dbus-message_8c" startline="2009" endline="2021">dbus_message_get_args_valist</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMessageInternals_1ga2c5c6aef45dd0b5cc10c800f986a7ce7" prot="public" static="no">
        <name>MAX_MESSAGE_SIZE_TO_CACHE</name>
        <initializer>10 * _DBUS_ONE_KILOBYTE</initializer>
        <briefdescription>
<para>Avoid caching huge messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="505" column="9" bodyfile="dbus/dbus-message.c" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" prot="public" static="no">
        <name>MAX_MESSAGE_CACHE_SIZE</name>
        <initializer>5</initializer>
        <briefdescription>
<para>Avoid caching too many messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="508" column="9" bodyfile="dbus/dbus-message.c" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMessageInternals_1gacbe0bfe7a9551ab0489a0ec9aba6e94e" prot="public" static="no">
        <name>INITIAL_LOADER_DATA_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
<para>The initial buffer size of the message loader. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000039"><xreftitle>Todo</xreftitle><xrefdescription><para>this should be based on min header size plus some average body size, or something. Or rather, the min header size only, if we want to try to read only the header, store that in a <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, then read only the body and store that, etc., depends on how we optimize <ref refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" kindref="member">_dbus_message_loader_get_buffer()</ref> and what the exact message format is. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3854" column="9" bodyfile="dbus/dbus-message.c" bodystart="3854" bodyend="-1"/>
        <referencedby refid="group__DBusMessageInternals_1ga66f1c10cf909ba09ed732bc125ff8671" compoundref="dbus-message_8c" startline="3863" endline="3902">_dbus_message_loader_new</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__DBusMessageInternals_1ga61dadd085c1777f559549e05962b2c9e" prot="public" static="no">
        <name>@5</name>
        <enumvalue id="group__DBusMessageInternals_1gga61dadd085c1777f559549e05962b2c9eac97559aac48c82ad5858e57c580595ad" prot="public">
          <name>DBUS_MESSAGE_ITER_TYPE_READER</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__DBusMessageInternals_1gga61dadd085c1777f559549e05962b2c9ea752d6050689d3fb99c80c38e47fdff2f" prot="public">
          <name>DBUS_MESSAGE_ITER_TYPE_WRITER</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="113" column="1" bodyfile="dbus/dbus-message.c" bodystart="113" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__DBusMessageInternals_1ga84c2bf86d0ab364b236814eafb85e512" prot="public" static="no">
        <type>struct <ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref></type>
        <definition>typedef struct DBusMessageRealIter DBusMessageRealIter</definition>
        <argsstring></argsstring>
        <name>DBusMessageRealIter</name>
        <briefdescription>
<para>typedef for internals of message iterator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="108" column="1" bodyfile="dbus/dbus-message.c" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DBusMessageInternals_1ga0574b83e4022af7bd195abcd1e9361f3" prot="public" static="yes" mutable="no">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBusMessage* message_cache[MAX_MESSAGE_CACHE_SIZE]</definition>
        <argsstring>[MAX_MESSAGE_CACHE_SIZE]</argsstring>
        <name>message_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="511" column="1" bodyfile="dbus/dbus-message.c" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMessageInternals_1ga09970f0ca46c38d2038baa54dec096b5" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int message_cache_count</definition>
        <argsstring></argsstring>
        <name>message_cache_count</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="512" column="1" bodyfile="dbus/dbus-message.c" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMessageInternals_1ga3a81158a7febf4d8882d3afc56c52add" prot="public" static="yes" mutable="no">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t message_cache_shutdown_registered</definition>
        <argsstring></argsstring>
        <name>message_cache_shutdown_registered</name>
        <initializer>= <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="513" column="1" bodyfile="dbus/dbus-message.c" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DBusMessageInternals_1gaa0d783eaf99d7f70b8b1d0bfdd43bb82" prot="public" static="yes" mutable="no">
        <type><ref refid="structDBusDataSlotAllocator" kindref="compound">DBusDataSlotAllocator</ref></type>
        <definition>DBusDataSlotAllocator slot_allocator</definition>
        <argsstring></argsstring>
        <name>slot_allocator</name>
        <initializer>=
  _DBUS_DATA_SLOT_ALLOCATOR_INIT (<ref refid="group__DBusInternalsUtils_1gade571435b55fae64217f5142aa78ee8d" kindref="member">_DBUS_LOCK_NAME</ref> (message_slots))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4542" column="1" bodyfile="dbus/dbus-message.c" bodystart="4542" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusMessage_1ga3bd8e19f0c971fbfd6caf2ab26ffd4e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dbus_message_finalize</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_finalize</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="48" column="1" bodyfile="dbus/dbus-message.c" bodystart="1179" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga7e3e6e067d4c4e90cd9e8d30ae09d312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_trace_ref</definition>
        <argsstring>(DBusMessage *message, int old_refcount, int new_refcount, const char *why)</argsstring>
        <name>_dbus_message_trace_ref</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>old_refcount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_refcount</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>why</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="93" column="1" bodyfile="dbus/dbus-message.c" bodystart="93" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga47a86f36abae39fe43916681d3f16330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_empty_signature_str,&quot;&quot;)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_empty_signature_str</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <briefdescription>
<para>An static string representing an empty signature. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gafeb33a4fc483652f4739d89fd04d7bc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void get_const_signature</definition>
        <argsstring>(DBusHeader *header, const DBusString **type_str_p, int *type_pos_p)</argsstring>
        <name>get_const_signature</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>type_str_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>type_pos_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="140" column="1" bodyfile="dbus/dbus-message.c" bodystart="140" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gadb80b0c88f515bcb15188a858e9ffced" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_message_byteswap</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>_dbus_message_byteswap</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Swaps the message to compiler byte order if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="164" column="1" bodyfile="dbus/dbus-message.c" bodystart="164" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga617811b117ac5eb31151ffb7dabea7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_get_network_data</definition>
        <argsstring>(DBusMessage *message, const DBusString **header, const DBusString **body)</argsstring>
        <name>_dbus_message_get_network_data</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>body</declname>
        </param>
        <briefdescription>
<para>Gets the data to be sent over the network for this message. </para>        </briefdescription>
        <detaileddescription>
<para>The header and then the body should be written out. This function is guaranteed to always return the same data once a message is locked (with <ref refid="group__DBusMessageInternals_1ga3ecc9c24381af05289161f477ad6a578" kindref="member">dbus_message_lock()</ref>).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for message header data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for message body data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="208" column="1" bodyfile="dbus/dbus-message.c" bodystart="208" bodyend="216"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga577e9d5224c56b9cf2ca2691be2e838c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_get_unix_fds</definition>
        <argsstring>(DBusMessage *message, const int **fds, unsigned *n_fds)</argsstring>
        <name>_dbus_message_get_unix_fds</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const int **</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>n_fds</declname>
        </param>
        <briefdescription>
<para>Gets the unix fds to be sent over the network for this message. </para>        </briefdescription>
        <detaileddescription>
<para>This function is guaranteed to always return the same data once a message is locked (with <ref refid="group__DBusMessageInternals_1ga3ecc9c24381af05289161f477ad6a578" kindref="member">dbus_message_lock()</ref>).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fds</parametername>
</parameternamelist>
<parameterdescription>
<para>return location of unix fd array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_fds</parametername>
</parameternamelist>
<parameterdescription>
<para>return number of entries in array </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="227" column="1" bodyfile="dbus/dbus-message.c" bodystart="227" bodyend="240"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga3dd30a62c63eb9972cc0c564f2a89c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dbus_message_set_serial</definition>
        <argsstring>(DBusMessage *message, dbus_uint32_t serial)</argsstring>
        <name>dbus_message_set_serial</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>serial</declname>
        </param>
        <briefdescription>
<para>Sets the serial number of a message. </para>        </briefdescription>
        <detaileddescription>
<para>This can only be done once on a message.</para><para><ref refid="structDBusConnection" kindref="compound">DBusConnection</ref> will automatically set the serial to an appropriate value when the message is sent; this function is only needed when encapsulating messages in another protocol, or otherwise bypassing <ref refid="structDBusConnection" kindref="compound">DBusConnection</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>the serial </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="254" column="1" bodyfile="dbus/dbus-message.c" bodystart="254" bodyend="261"/>
        <references refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3399" endline="3500">dbus_connection_send_with_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gafaed2adc00b2ec54b2827ecb778bbe7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_add_counter_link</definition>
        <argsstring>(DBusMessage *message, DBusList *link)</argsstring>
        <name>_dbus_message_add_counter_link</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Adds a counter to be incremented immediately with the size/unix fds of this message, and decremented by the size/unix fds of this message when this message if finalized. </para>        </briefdescription>
        <detaileddescription>
<para>The link contains a counter with its refcount already incremented, but the counter itself not incremented. Ownership of link and counter refcount is passed to the message.</para><para>This function may be called with locks held. As a result, the counter&apos;s notify function is not called; the caller is expected to either call <ref refid="group__DBusResources_1gab8c0e970e0c3b4696ba06723639d8239" kindref="member">_dbus_counter_notify()</ref> on the counter when they are no longer holding locks, or take the same action that would be taken by the notify function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>link</parametername>
</parameternamelist>
<parameterdescription>
<para>link with counter as data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="280" column="1" bodyfile="dbus/dbus-message.c" bodystart="280" bodyend="312"/>
        <references refid="group__DBusResources_1gae37410c196947675c2a222a7979e9dee" compoundref="dbus-resources_8c" startline="148" endline="171">_dbus_counter_adjust_size</references>
        <references refid="group__DBusResources_1ga7d9411d27b337289ab5648beb148cde6" compoundref="dbus-resources_8c" startline="202" endline="225">_dbus_counter_adjust_unix_fd</references>
        <references refid="group__DBusList_1ga20e549175e2b8f450f907592dc39d953" compoundref="dbus-list_8c" startline="315" endline="322">_dbus_list_append_link</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" compoundref="dbus-message-private_8h" startline="113">DBusMessage::counters</references>
        <references refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" compoundref="dbus-list_8h" startline="38">DBusList::data</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" compoundref="dbus-message-private_8h" startline="114">DBusMessage::size_counter_delta</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusMessageInternals_1gad009d79879d654a009c83627726435d8" compoundref="dbus-message_8c" startline="329" endline="342">_dbus_message_add_counter</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gad009d79879d654a009c83627726435d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_message_add_counter</definition>
        <argsstring>(DBusMessage *message, DBusCounter *counter)</argsstring>
        <name>_dbus_message_add_counter</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusCounter" kindref="compound">DBusCounter</ref> *</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Adds a counter to be incremented immediately with the size/unix fds of this message, and decremented by the size/unix fds of this message when this message if finalized. </para>        </briefdescription>
        <detaileddescription>
<para>This function may be called with locks held. As a result, the counter&apos;s notify function is not called; the caller is expected to either call <ref refid="group__DBusResources_1gab8c0e970e0c3b4696ba06723639d8239" kindref="member">_dbus_counter_notify()</ref> on the counter when they are no longer holding locks, or take the same action that would be taken by the notify function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para>the counter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="329" column="1" bodyfile="dbus/dbus-message.c" bodystart="329" bodyend="342"/>
        <references refid="group__DBusResources_1gae93240c77bfb66642453518c9bb90bc4" compoundref="dbus-resources_8c" startline="108" endline="115">_dbus_counter_ref</references>
        <references refid="group__DBusList_1gac20b9981531cef590d49a59240344cd8" compoundref="dbus-list_8c" startline="242" endline="245">_dbus_list_alloc_link</references>
        <references refid="group__DBusMessageInternals_1gafaed2adc00b2ec54b2827ecb778bbe7e" compoundref="dbus-message_8c" startline="280" endline="312">_dbus_message_add_counter_link</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusTransport_1ga4046f36ecbdb75219f2b667f92e75a2b" compoundref="dbus-transport_8c" startline="1140" endline="1190">_dbus_transport_queue_messages</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gac84be3fd98e49409c1245a87c7de6f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_remove_counter</definition>
        <argsstring>(DBusMessage *message, DBusCounter *counter)</argsstring>
        <name>_dbus_message_remove_counter</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusCounter" kindref="compound">DBusCounter</ref> *</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Removes a counter tracking the size/unix fds of this message, and decrements the counter by the size/unix fds of this message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para>the counter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="352" column="1" bodyfile="dbus/dbus-message.c" bodystart="352" bodyend="371"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusResources_1gae37410c196947675c2a222a7979e9dee" compoundref="dbus-resources_8c" startline="148" endline="171">_dbus_counter_adjust_size</references>
        <references refid="group__DBusResources_1ga7d9411d27b337289ab5648beb148cde6" compoundref="dbus-resources_8c" startline="202" endline="225">_dbus_counter_adjust_unix_fd</references>
        <references refid="group__DBusResources_1gab8c0e970e0c3b4696ba06723639d8239" compoundref="dbus-resources_8c" startline="182" endline="189">_dbus_counter_notify</references>
        <references refid="group__DBusResources_1ga48d9b53d1a395ab3c4f1846ca569ef3f" compoundref="dbus-resources_8c" startline="124" endline="135">_dbus_counter_unref</references>
        <references refid="group__DBusList_1ga5929ad5253d2f538158e513e9df3002b" compoundref="dbus-list_8c" startline="472" endline="488">_dbus_list_find_last</references>
        <references refid="group__DBusList_1ga40abea762d9cb44e5ec6b31b1769dc2e" compoundref="dbus-list_8c" startline="527" endline="532">_dbus_list_remove_link</references>
        <references refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" compoundref="dbus-message-private_8h" startline="113">DBusMessage::counters</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" compoundref="dbus-message-private_8h" startline="114">DBusMessage::size_counter_delta</references>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1gae34751e15f114217e5ad10c663e2ef2e" compoundref="dbus-connection_8c" startline="2681" endline="2692">dbus_connection_ref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga3ecc9c24381af05289161f477ad6a578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dbus_message_lock</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_lock</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Locks a message. </para>        </briefdescription>
        <detaileddescription>
<para>Allows checking that applications don&apos;t keep a reference to a message in the outgoing queue and change it underneath us. Messages are locked when they enter the outgoing queue (dbus_connection_send_message()), and the library complains if the message is modified while locked. This function may also called externally, for applications wrapping D-Bus in another protocol.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to lock. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="384" column="1" bodyfile="dbus/dbus-message.c" bodystart="384" bodyend="397"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" compoundref="dbus-marshal-header_8c" startline="1416" endline="1446">_dbus_header_delete_field</references>
        <references refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</references>
        <references refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" compoundref="dbus-protocol_8h" startline="297">DBUS_HEADER_FIELD_SIGNATURE</references>
        <references refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" compoundref="dbus-message_8c" startline="3543" endline="3553">dbus_message_get_signature</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusMessage_1ga3f90a918ada328450fcfe9ac403b8807" compoundref="dbus-message_8c" startline="4721" endline="4768">dbus_message_marshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga80627f3604a11f0281d11a0db0553802" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t set_or_delete_string_field</definition>
        <argsstring>(DBusMessage *message, int field, int typecode, const char *value)</argsstring>
        <name>set_or_delete_string_field</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>typecode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="400" column="1" bodyfile="dbus/dbus-message.c" bodystart="400" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga3304ebfa4ec7321dad2e6ed3a3204d36" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dbus_message_cache_shutdown</definition>
        <argsstring>(void *data)</argsstring>
        <name>dbus_message_cache_shutdown</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="516" column="1" bodyfile="dbus/dbus-message.c" bodystart="516" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga3c8ae3f1790bbc79e1e463f81d70623a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>static DBusMessage* dbus_message_get_cached</definition>
        <argsstring>(void)</argsstring>
        <name>dbus_message_get_cached</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Tries to get a message from the message cache. </para>        </briefdescription>
        <detaileddescription>
<para>The retrieved message will have junk in it, so it still needs to be cleared out in dbus_message_new_empty_header()</para><para><simplesect kind="return"><para>the message, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none cached </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="547" column="1" bodyfile="dbus/dbus-message.c" bodystart="547" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gaf2e5f8facf5bbe271b139f4718c9f042" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void free_counter</definition>
        <argsstring>(void *element, void *data)</argsstring>
        <name>free_counter</name>
        <param>
          <type>void *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="628" column="1" bodyfile="dbus/dbus-message.c" bodystart="628" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gaaaee3576d7929a84f8cd9a2e54075bc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dbus_message_cache_or_finalize</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_cache_or_finalize</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Tries to cache a message, otherwise finalize it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="649" column="1" bodyfile="dbus/dbus-message.c" bodystart="649" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_message_iter_get_args_valist</definition>
        <argsstring>(DBusMessageIter *iter, DBusError *error, int first_arg_type, va_list var_args)</argsstring>
        <name>_dbus_message_iter_get_args_valist</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg_type</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>var_args</declname>
        </param>
        <briefdescription>
<para>Implementation of the varargs arg-getting functions. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" kindref="member">dbus_message_get_args()</ref> is the place to go for complete documentation.</para><para><simplesect kind="see"><para><ref refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" kindref="member">dbus_message_get_args</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error to be filled in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_arg_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var_args</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for first argument, followed by list of type/location pairs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error was set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message-private.h" line="136" column="1" bodyfile="dbus/dbus-message.c" bodystart="796" bodyend="1066"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" compoundref="dbus-sysdeps-unix_8c" startline="3053" endline="3085">_dbus_dup</references>
        <references refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" compoundref="dbus-internals_8c" startline="527" endline="544">_dbus_strdup</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" compoundref="dbus-marshal-recursive_8c" startline="820" endline="830">_dbus_type_reader_get_element_type</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" compoundref="dbus-marshal-recursive_8c" startline="923" endline="973">_dbus_type_reader_read_fixed_multi</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusProtocol_1ga2a23b986cd4cef832b8823b6b0d1bcb1" compoundref="dbus-protocol_8h" startline="453">DBUS_ERROR_INCONSISTENT_MESSAGE</references>
        <references refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" compoundref="dbus-protocol_8h" startline="391">DBUS_ERROR_INVALID_ARGS</references>
        <references refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" compoundref="dbus-protocol_8h" startline="369">DBUS_ERROR_NOT_SUPPORTED</references>
        <references refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" compoundref="dbus-memory_8c" startline="749" endline="764">dbus_free_string_array</references>
        <references refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" compoundref="dbus-message_8c" startline="2139" endline="2147">dbus_message_iter_get_arg_type</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" compoundref="dbus-types_8h" startline="143">DBusBasicValue::u32</references>
        <referencedby refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" compoundref="dbus-message_8c" startline="2009" endline="2021">dbus_message_get_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga390710c25564c80025a006c376da2030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>DBUS_EXPORT dbus_uint32_t dbus_message_get_serial</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_serial</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Returns the serial of a message or 0 if none has been specified. </para>        </briefdescription>
        <detaileddescription>
<para>The message&apos;s serial number is provided by the application sending the message and is used to identify replies to this message.</para><para>All messages received on a connection will have a serial provided by the remote application.</para><para>For messages you&apos;re sending, <ref refid="group__DBusConnection_1gae1cb64f4cf550949b23fd3a756b2f7d0" kindref="member">dbus_connection_send()</ref> will assign a serial and return it to you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the serial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1127" column="1" bodyfile="dbus/dbus-message.c" bodystart="1127" bodyend="1132"/>
        <references refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnection_1gaa215df7ab7ca6dce7be153c6b9cc80ba" compoundref="dbus-connection_8c" startline="3399" endline="3500">dbus_connection_send_with_reply</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_reply_serial</definition>
        <argsstring>(DBusMessage *message, dbus_uint32_t reply_serial)</argsstring>
        <name>dbus_message_set_reply_serial</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>reply_serial</declname>
        </param>
        <briefdescription>
<para>Sets the reply serial of a message (the serial of the message this is a reply to). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reply_serial</parametername>
</parameternamelist>
<parameterdescription>
<para>the serial we&apos;re replying to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1143" column="1" bodyfile="dbus/dbus-message.c" bodystart="1143" bodyend="1154"/>
        <references refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</references>
        <references refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" compoundref="dbus-protocol_8h" startline="284">DBUS_HEADER_FIELD_REPLY_SERIAL</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>DBUS_EXPORT dbus_uint32_t dbus_message_get_reply_serial</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_reply_serial</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Returns the serial that the message is a reply to or 0 if none. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the reply serial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1163" column="1" bodyfile="dbus/dbus-message.c" bodystart="1163" bodyend="1176"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" compoundref="dbus-sysdeps-unix_8c" startline="2609" endline="2623">_dbus_atomic_get</references>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2562" endline="2576">_dbus_atomic_inc</references>
        <references refid="group__DBusMemoryInternals_1ga7c224d82013e2bdc181c1d85dcb6f295" compoundref="dbus-memory_8c" startline="781">_dbus_current_generation</references>
        <references refid="group__DBusDataSlot_1gabc399733376c462c3010271a2d431e73" compoundref="dbus-dataslot_8c" startline="340" endline="347">_dbus_data_slot_list_free</references>
        <references refid="group__DBusDataSlot_1ga6de49b3a1210202215d40a5a19806992" compoundref="dbus-dataslot_8c" startline="197" endline="201">_dbus_data_slot_list_init</references>
        <references refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" compoundref="dbus-marshal-header_8c" startline="476" endline="479">_dbus_header_free</references>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" compoundref="dbus-marshal-header_8c" startline="460" endline="468">_dbus_header_init</references>
        <references refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" compoundref="dbus-marshal-header_8c" startline="443" endline="450">_dbus_header_reinit</references>
        <references refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" compoundref="dbus-list_8c" startline="542" endline="557">_dbus_list_clear</references>
        <references refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" compoundref="dbus-list_8c" startline="759" endline="774">_dbus_list_foreach</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="structDBusMessage_1a5d102e908f6ff96a5a0aa6a39b4963a8" compoundref="dbus-message-private_8h" startline="116">DBusMessage::changed_stamp</references>
        <references refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" compoundref="dbus-message-private_8h" startline="113">DBusMessage::counters</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" compoundref="dbus-protocol_8h" startline="284">DBUS_HEADER_FIELD_REPLY_SERIAL</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" compoundref="dbus-message-private_8h" startline="121">DBusMessage::generation</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" compoundref="dbus-message-private_8h" startline="110">DBusMessage::in_cache</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" compoundref="dbus-message-private_8h" startline="101">DBusMessage::refcount</references>
        <references refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" compoundref="dbus-message-private_8h" startline="114">DBusMessage::size_counter_delta</references>
        <references refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" compoundref="dbus-message-private_8h" startline="118">DBusMessage::slot_list</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga4b8cc560549160aecd924037a872009d" compoundref="dbus-pending-call_8c" startline="172" endline="194">_dbus_pending_call_set_reply_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaee16b4785182fa19b84bb1101e7074a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>static DBusMessage* dbus_message_new_empty_header</definition>
        <argsstring>(void)</argsstring>
        <name>dbus_message_new_empty_header</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1204" column="1" bodyfile="dbus/dbus-message.c" bodystart="1204" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gab9e5bf8d87a95c5ca7026a791148ebd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_new</definition>
        <argsstring>(int message_type)</argsstring>
        <name>dbus_message_new</name>
        <param>
          <type>int</type>
          <declname>message_type</declname>
        </param>
        <briefdescription>
<para>Constructs a new message of the given message type. </para>        </briefdescription>
        <detaileddescription>
<para>Types include <ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>, <ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>, and so forth.</para><para>Usually you want to use <ref refid="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" kindref="member">dbus_message_new_method_call()</ref>, <ref refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" kindref="member">dbus_message_new_method_return()</ref>, <ref refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" kindref="member">dbus_message_new_signal()</ref>, or <ref refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" kindref="member">dbus_message_new_error()</ref> instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new message or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1289" column="1" bodyfile="dbus/dbus-message.c" bodystart="1289" bodyend="1309"/>
        <references refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_new_method_call</definition>
        <argsstring>(const char *destination, const char *path, const char *iface, const char *method)</argsstring>
        <name>dbus_message_new_method_call</name>
        <param>
          <type>const char *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>Constructs a new message to invoke a method on a remote object. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if memory can&apos;t be allocated for the message. The destination may be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> in which case no destination is set; this is appropriate when using D-Bus in a peer-to-peer context (no message bus). The interface may be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, which means that if multiple methods with the given name exist it is undefined which one will be invoked.</para><para>The path and method names may not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>.</para><para>Destination, path, interface, and method name can&apos;t contain any invalid characters (see the D-Bus specification).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>name that the message should be sent to or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>object path the message should be sent to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>interface to invoke method on, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>method to invoke</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, free with <ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1333" column="1" bodyfile="dbus/dbus-message.c" bodystart="1333" bodyend="1363"/>
        <references refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</references>
        <references refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" compoundref="dbus-protocol_8h" startline="234">DBUS_MESSAGE_TYPE_METHOD_CALL</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusObjectTree_1gab282b916368cd512842d3aaae31e65c7" compoundref="dbus-object-tree_8c" startline="1242" endline="1325">_dbus_decompose_path</referencedby>
        <referencedby refid="group__DBusBus_1ga4eb6401ba014da3dbe3dc4e2a8e5b3ef" compoundref="dbus-bus_8c" startline="1526" endline="1556">dbus_bus_add_match</referencedby>
        <referencedby refid="group__DBusBus_1ga18314500e7f6890a79bddbeace5df5f9" compoundref="dbus-bus_8c" startline="948" endline="1007">dbus_bus_get_id</referencedby>
        <referencedby refid="group__DBusBus_1ga24d782c710f3d82caf1b1ed582dcf474" compoundref="dbus-bus_8c" startline="865" endline="927">dbus_bus_get_unix_user</referencedby>
        <referencedby refid="group__DBusBus_1ga5331b172dd8ed00eec130e894c5c2a0b" compoundref="dbus-bus_8c" startline="1280" endline="1331">dbus_bus_name_has_owner</referencedby>
        <referencedby refid="group__DBusBus_1ga0c21cf74d05c0bd8003846b56a588a4b" compoundref="dbus-bus_8c" startline="646" endline="728">dbus_bus_register</referencedby>
        <referencedby refid="group__DBusBus_1gaa4aa5ebe51cdbe8c0651609fc72e841a" compoundref="dbus-bus_8c" startline="1198" endline="1260">dbus_bus_release_name</referencedby>
        <referencedby refid="group__DBusBus_1ga6e6b98e19fa4400de7ef99c27b866b99" compoundref="dbus-bus_8c" startline="1576" endline="1600">dbus_bus_remove_match</referencedby>
        <referencedby refid="group__DBusBus_1ga8a9024c78c4ea89b6271f19dbc7861b2" compoundref="dbus-bus_8c" startline="1112" endline="1176">dbus_bus_request_name</referencedby>
        <referencedby refid="group__DBusBus_1ga81d303bf29d7c97ad4690ce35071b090" compoundref="dbus-bus_8c" startline="1356" endline="1409">dbus_bus_start_service_by_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_new_method_return</definition>
        <argsstring>(DBusMessage *method_call)</argsstring>
        <name>dbus_message_new_method_return</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>method_call</declname>
        </param>
        <briefdescription>
<para>Constructs a message that is a reply to a method call. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if memory can&apos;t be allocated for the message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>method_call</parametername>
</parameternamelist>
<parameterdescription>
<para>the message being replied to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, free with <ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1373" column="1" bodyfile="dbus/dbus-message.c" bodystart="1373" bodyend="1407"/>
        <references refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</references>
        <references refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" compoundref="dbus-message_8c" startline="3510" endline="3522">dbus_message_get_sender</references>
        <references refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" compoundref="dbus-message_8c" startline="1127" endline="1132">dbus_message_get_serial</references>
        <references refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" compoundref="dbus-message_8c" startline="2984" endline="2993">dbus_message_set_no_reply</references>
        <references refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" compoundref="dbus-message_8c" startline="1143" endline="1154">dbus_message_set_reply_serial</references>
        <references refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" compoundref="dbus-protocol_8h" startline="236">DBUS_MESSAGE_TYPE_METHOD_RETURN</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" compoundref="dbus-object-tree_8c" startline="718" endline="724">_dbus_object_tree_free_all_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4378" endline="4393">dbus_connection_get_dispatch_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_new_signal</definition>
        <argsstring>(const char *path, const char *iface, const char *name)</argsstring>
        <name>dbus_message_new_signal</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a new message representing a signal emission. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if memory can&apos;t be allocated for the message. A signal is identified by its originating object path, interface, and the name of the signal.</para><para>Path, interface, and signal name must all be valid (the D-Bus specification defines the syntax of these fields).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the object emitting the signal </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>the interface the signal is emitted from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the signal </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, free with <ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1424" column="1" bodyfile="dbus/dbus-message.c" bodystart="1424" bodyend="1453"/>
        <references refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</references>
        <references refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" compoundref="dbus-message_8c" startline="2984" endline="2993">dbus_message_set_no_reply</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1249" endline="1409">_dbus_connection_new_for_transport</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_new_error</definition>
        <argsstring>(DBusMessage *reply_to, const char *error_name, const char *error_message)</argsstring>
        <name>dbus_message_new_error</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>reply_to</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_message</declname>
        </param>
        <briefdescription>
<para>Creates a new message that is an error reply to another message. </para>        </briefdescription>
        <detaileddescription>
<para>Error replies are most common in response to method calls, but can be returned in reply to any message.</para><para>The error name must be a valid error name according to the syntax given in the D-Bus specification. If you don&apos;t want to make up an error name just use <ref refid="group__DBusProtocol_1gabb62fd6340d0787fbd56ff8dd2f326c7" kindref="member">DBUS_ERROR_FAILED</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reply_to</parametername>
</parameternamelist>
<parameterdescription>
<para>the message we&apos;re replying to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the error name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_message</parametername>
</parameternamelist>
<parameterdescription>
<para>the error message string (or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> for none, but please give a message) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new error message object, free with <ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1470" column="1" bodyfile="dbus/dbus-message.c" bodystart="1470" bodyend="1523"/>
        <references refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</references>
        <references refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" compoundref="dbus-message_8c" startline="3510" endline="3522">dbus_message_get_sender</references>
        <references refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" compoundref="dbus-message_8c" startline="1127" endline="1132">dbus_message_get_serial</references>
        <references refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2656" endline="2753">dbus_message_iter_append_basic</references>
        <references refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</references>
        <references refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" compoundref="dbus-message_8c" startline="2984" endline="2993">dbus_message_set_no_reply</references>
        <references refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" compoundref="dbus-message_8c" startline="1143" endline="1154">dbus_message_set_reply_serial</references>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusPendingCallInternals_1ga9901fc4c5fd2db9bf1ce2dcc9abf55fc" compoundref="dbus-pending-call_8c" startline="354" endline="384">_dbus_pending_call_set_timeout_error_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4378" endline="4393">dbus_connection_get_dispatch_status</referencedby>
        <referencedby refid="group__DBusMessage_1ga707a27881820f964e3606bc906a47978" compoundref="dbus-message_8c" startline="1542" endline="1571">dbus_message_new_error_printf</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga707a27881820f964e3606bc906a47978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_new_error_printf</definition>
        <argsstring>(DBusMessage *reply_to, const char *error_name, const char *error_format,...)</argsstring>
        <name>dbus_message_new_error_printf</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>reply_to</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Creates a new message that is an error reply to another message, allowing you to use printf formatting. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" kindref="member">dbus_message_new_error()</ref> for details - this function is the same aside from the printf formatting.</para><para><xrefsect id="todo_1_todo000026"><xreftitle>Todo</xreftitle><xrefdescription><para>add _DBUS_GNUC_PRINTF to this (requires moving _DBUS_GNUC_PRINTF to public header, see DBUS_DEPRECATED for an example)</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reply_to</parametername>
</parameternamelist>
<parameterdescription>
<para>the original message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the error name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_format</parametername>
</parameternamelist>
<parameterdescription>
<para>the error message format as with printf </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>format string arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new error message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1542" column="1" bodyfile="dbus/dbus-message.c" bodystart="1542" bodyend="1571"/>
        <references refid="group__DBusString_1ga8d794f292831d1a7edeb971b13a2c641" compoundref="dbus-string_8c" startline="1072" endline="1102">_dbus_string_append_printf_valist</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_copy</definition>
        <argsstring>(const DBusMessage *message)</argsstring>
        <name>dbus_message_copy</name>
        <param>
          <type>const <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Creates a new message that is an exact replica of the message specified, except that its refcount is set to 1, its message serial is reset to 0, and if the original message was &quot;locked&quot; (in the outgoing message queue and thus not modifiable) the new message will not be locked. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000027"><xreftitle>Todo</xreftitle><xrefdescription><para>This function can&apos;t be used in programs that try to recover from OOM errors.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new message.or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if not enough memory or Unix file descriptors (in case the message to copy includes Unix file descriptors) can be allocated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1587" column="1" bodyfile="dbus/dbus-message.c" bodystart="1587" bodyend="1656"/>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2562" endline="2576">_dbus_atomic_inc</references>
        <references refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" compoundref="dbus-sysdeps-unix_8c" startline="3053" endline="3085">_dbus_dup</references>
        <references refid="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" compoundref="dbus-marshal-header_8c" startline="490" endline="509">_dbus_header_copy</references>
        <references refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" compoundref="dbus-marshal-header_8c" startline="476" endline="479">_dbus_header_free</references>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" compoundref="dbus-message-private_8h" startline="121">DBusMessage::generation</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" compoundref="dbus-message-private_8h" startline="101">DBusMessage::refcount</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBUS_EXPORT DBusMessage * dbus_message_ref</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_ref</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Increments the reference count of a <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the message </para></simplesect>
<simplesect kind="see"><para><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1667" column="1" bodyfile="dbus/dbus-message.c" bodystart="1667" bodyend="1680"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" compoundref="dbus-sysdeps-unix_8c" startline="2562" endline="2576">_dbus_atomic_inc</references>
        <references refid="group__DBusMemoryInternals_1ga7c224d82013e2bdc181c1d85dcb6f295" compoundref="dbus-memory_8c" startline="781">_dbus_current_generation</references>
        <references refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" compoundref="dbus-message-private_8h" startline="121">DBusMessage::generation</references>
        <references refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" compoundref="dbus-message-private_8h" startline="110">DBusMessage::in_cache</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" compoundref="dbus-message-private_8h" startline="101">DBusMessage::refcount</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga4b8cc560549160aecd924037a872009d" compoundref="dbus-pending-call_8c" startline="172" endline="194">_dbus_pending_call_set_reply_unlocked</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_unref</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_unref</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count of a <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, freeing the message if the count reaches 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" kindref="member">dbus_message_ref</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1690" column="1" bodyfile="dbus/dbus-message.c" bodystart="1690" bodyend="1709"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" compoundref="dbus-sysdeps-unix_8c" startline="2585" endline="2599">_dbus_atomic_dec</references>
        <references refid="group__DBusMemoryInternals_1ga7c224d82013e2bdc181c1d85dcb6f295" compoundref="dbus-memory_8c" startline="781">_dbus_current_generation</references>
        <references refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" compoundref="dbus-message-private_8h" startline="121">DBusMessage::generation</references>
        <references refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" compoundref="dbus-message-private_8h" startline="110">DBusMessage::in_cache</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" compoundref="dbus-message-private_8h" startline="101">DBusMessage::refcount</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga12756797bd5c1918aa065f9c37ed7bba" compoundref="dbus-connection_8c" startline="1486" endline="1525">_dbus_connection_handle_watch</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga2cdffe9215251b69cb39ff36b9f50e6c" compoundref="dbus-connection_8c" startline="1249" endline="1409">_dbus_connection_new_for_transport</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1ga3db10d48ec16e485d5a638aacebd4ad2" compoundref="dbus-connection_8c" startline="399" endline="426">_dbus_connection_unlock</referencedby>
        <referencedby refid="group__DBusObjectTree_1gab282b916368cd512842d3aaae31e65c7" compoundref="dbus-object-tree_8c" startline="1242" endline="1325">_dbus_decompose_path</referencedby>
        <referencedby refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" compoundref="dbus-message_8c" startline="4302" endline="4355">_dbus_message_loader_queue_messages</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" compoundref="dbus-message_8c" startline="3925" endline="3941">_dbus_message_loader_unref</referencedby>
        <referencedby refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" compoundref="dbus-object-tree_8c" startline="718" endline="724">_dbus_object_tree_free_all_unlocked</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga9d8987da3747604d370ffec2c5e1e10a" compoundref="dbus-pending-call_8c" startline="394" endline="403">_dbus_pending_call_ref_unlocked</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga9901fc4c5fd2db9bf1ce2dcc9abf55fc" compoundref="dbus-pending-call_8c" startline="354" endline="384">_dbus_pending_call_set_timeout_error_unlocked</referencedby>
        <referencedby refid="group__DBusBus_1ga4eb6401ba014da3dbe3dc4e2a8e5b3ef" compoundref="dbus-bus_8c" startline="1526" endline="1556">dbus_bus_add_match</referencedby>
        <referencedby refid="group__DBusBus_1ga18314500e7f6890a79bddbeace5df5f9" compoundref="dbus-bus_8c" startline="948" endline="1007">dbus_bus_get_id</referencedby>
        <referencedby refid="group__DBusBus_1ga24d782c710f3d82caf1b1ed582dcf474" compoundref="dbus-bus_8c" startline="865" endline="927">dbus_bus_get_unix_user</referencedby>
        <referencedby refid="group__DBusBus_1ga5331b172dd8ed00eec130e894c5c2a0b" compoundref="dbus-bus_8c" startline="1280" endline="1331">dbus_bus_name_has_owner</referencedby>
        <referencedby refid="group__DBusBus_1ga0c21cf74d05c0bd8003846b56a588a4b" compoundref="dbus-bus_8c" startline="646" endline="728">dbus_bus_register</referencedby>
        <referencedby refid="group__DBusBus_1gaa4aa5ebe51cdbe8c0651609fc72e841a" compoundref="dbus-bus_8c" startline="1198" endline="1260">dbus_bus_release_name</referencedby>
        <referencedby refid="group__DBusBus_1ga6e6b98e19fa4400de7ef99c27b866b99" compoundref="dbus-bus_8c" startline="1576" endline="1600">dbus_bus_remove_match</referencedby>
        <referencedby refid="group__DBusBus_1ga8a9024c78c4ea89b6271f19dbc7861b2" compoundref="dbus-bus_8c" startline="1112" endline="1176">dbus_bus_request_name</referencedby>
        <referencedby refid="group__DBusBus_1ga81d303bf29d7c97ad4690ce35071b090" compoundref="dbus-bus_8c" startline="1356" endline="1409">dbus_bus_start_service_by_name</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1gae34751e15f114217e5ad10c663e2ef2e" compoundref="dbus-connection_8c" startline="2681" endline="2692">dbus_connection_ref</referencedby>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3535" endline="3592">dbus_connection_send_with_reply_and_block</referencedby>
        <referencedby refid="group__DBusMessage_1gab9e5bf8d87a95c5ca7026a791148ebd4" compoundref="dbus-message_8c" startline="1289" endline="1309">dbus_message_new</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" compoundref="dbus-message_8c" startline="1333" endline="1363">dbus_message_new_method_call</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
        <referencedby refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" compoundref="dbus-message_8c" startline="1424" endline="1453">dbus_message_new_signal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>DBUS_EXPORT int dbus_message_get_type</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_type</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the type of a message. </para>        </briefdescription>
        <detaileddescription>
<para>Types include <ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>, <ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref>, <ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>, <ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>, but other types are allowed and all code must silently ignore messages of unknown type. <ref refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" kindref="member">DBUS_MESSAGE_TYPE_INVALID</ref> will never be returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type of the message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1722" column="1" bodyfile="dbus/dbus-message.c" bodystart="1722" bodyend="1727"/>
        <references refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" compoundref="dbus-marshal-header_8c" startline="386" endline="394">_dbus_header_get_message_type</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusPendingCallInternals_1ga4b8cc560549160aecd924037a872009d" compoundref="dbus-pending-call_8c" startline="172" endline="194">_dbus_pending_call_set_reply_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga2fea5f972d1bfe7bcde8c0ec65ca9e90" compoundref="dbus-connection_8c" startline="3217" endline="3251">dbus_connection_send_preallocated</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" compoundref="dbus-message_8c" startline="3543" endline="3553">dbus_message_get_signature</referencedby>
        <referencedby refid="group__DBusMessage_1ga70ef9d7fad409666a0b5f3a8d4f0dd92" compoundref="dbus-message_8c" startline="3657" endline="3677">dbus_message_is_error</referencedby>
        <referencedby refid="group__DBusMessage_1gaba5e49e956e6bbd1f857ffd21c289276" compoundref="dbus-message_8c" startline="3796" endline="3816">dbus_set_error_from_message</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_append_args</definition>
        <argsstring>(DBusMessage *message, int first_arg_type,...)</argsstring>
        <name>dbus_message_append_args</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg_type</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Appends fields to a message given a variable argument list. </para>        </briefdescription>
        <detaileddescription>
<para>The variable argument list should contain the type of each argument followed by the value to append. Appendable types are basic types, and arrays of fixed-length basic types (except arrays of Unix file descriptors). To append variable-length basic types, or any more complex value, you have to use an iterator rather than this function.</para><para>To append a basic type, specify its type code followed by the address of the value. For example:</para><para><programlisting><codeline><highlight class="normal">dbus_int32_t<sp/>v_INT32<sp/>=<sp/>42;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>char<sp/>*v_STRING<sp/>=<sp/>&quot;Hello<sp/>World&quot;;</highlight></codeline>
<codeline><highlight class="normal">dbus_message_append_args<sp/>(message,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_TYPE_INT32,<sp/>&amp;v_INT32,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_TYPE_STRING,<sp/>&amp;v_STRING,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_TYPE_INVALID);</highlight></codeline>
</programlisting></para><para>To append an array of fixed-length basic types (except Unix file descriptors), pass in the DBUS_TYPE_ARRAY typecode, the element typecode, the address of the array pointer, and a 32-bit integer giving the number of elements in the array. So for example:<programlisting><codeline><highlight class="normal">const<sp/>dbus_int32_t<sp/>array[]<sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3<sp/>};<sp/>const<sp/>dbus_int32_t</highlight></codeline>
<codeline><highlight class="normal">*v_ARRAY<sp/>=<sp/>array;<sp/>dbus_message_append_args<sp/>(message,</highlight></codeline>
<codeline><highlight class="normal">DBUS_TYPE_ARRAY,<sp/>DBUS_TYPE_INT32,<sp/>&amp;v_ARRAY,<sp/>3,<sp/>DBUS_TYPE_INVALID);</highlight></codeline>
</programlisting></para><para>This function does not support arrays of Unix file descriptors. If you need those you need to manually recurse into the array.</para><para>For Unix file descriptors this function will internally duplicate the descriptor you passed in. Hence you may close the descriptor immediately after this call.</para><para><simplesect kind="warning"><para>in C, given &quot;int array[]&quot;, &quot;&amp;array == array&quot; (the comp.lang.c FAQ says otherwise, but gcc and the FAQ don&apos;t agree). So if you&apos;re using an array instead of a pointer you have to create a pointer variable, assign the array to it, then take the address of the pointer variable. For strings it works to write const char *array = &quot;Hello&quot; and then use &amp;array though.</para></simplesect>
The last argument to this function must be <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>, marking the end of the argument list. If you don&apos;t do this then libdbus won&apos;t know to stop and will read invalid memory.</para><para>String/signature/path arrays should be passed in as &quot;const char***
address_of_array&quot; and &quot;int n_elements&quot;</para><para><xrefsect id="todo_1_todo000028"><xreftitle>Todo</xreftitle><xrefdescription><para>support DBUS_TYPE_STRUCT and DBUS_TYPE_VARIANT and complex arrays</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000029"><xreftitle>Todo</xreftitle><xrefdescription><para>If this fails due to lack of memory, the message is hosed and you have to start over building the whole message.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_arg_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>value of first argument, list of additional type-value pairs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1792" column="1" bodyfile="dbus/dbus-message.c" bodystart="1792" bodyend="1808"/>
        <references refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusBus_1ga4eb6401ba014da3dbe3dc4e2a8e5b3ef" compoundref="dbus-bus_8c" startline="1526" endline="1556">dbus_bus_add_match</referencedby>
        <referencedby refid="group__DBusBus_1ga24d782c710f3d82caf1b1ed582dcf474" compoundref="dbus-bus_8c" startline="865" endline="927">dbus_bus_get_unix_user</referencedby>
        <referencedby refid="group__DBusBus_1ga5331b172dd8ed00eec130e894c5c2a0b" compoundref="dbus-bus_8c" startline="1280" endline="1331">dbus_bus_name_has_owner</referencedby>
        <referencedby refid="group__DBusBus_1gaa4aa5ebe51cdbe8c0651609fc72e841a" compoundref="dbus-bus_8c" startline="1198" endline="1260">dbus_bus_release_name</referencedby>
        <referencedby refid="group__DBusBus_1ga6e6b98e19fa4400de7ef99c27b866b99" compoundref="dbus-bus_8c" startline="1576" endline="1600">dbus_bus_remove_match</referencedby>
        <referencedby refid="group__DBusBus_1ga8a9024c78c4ea89b6271f19dbc7861b2" compoundref="dbus-bus_8c" startline="1112" endline="1176">dbus_bus_request_name</referencedby>
        <referencedby refid="group__DBusBus_1ga81d303bf29d7c97ad4690ce35071b090" compoundref="dbus-bus_8c" startline="1356" endline="1409">dbus_bus_start_service_by_name</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4378" endline="4393">dbus_connection_get_dispatch_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_append_args_valist</definition>
        <argsstring>(DBusMessage *message, int first_arg_type, va_list var_args)</argsstring>
        <name>dbus_message_append_args_valist</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg_type</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>var_args</declname>
        </param>
        <briefdescription>
<para>Like <ref refid="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" kindref="member">dbus_message_append_args()</ref> but takes a va_list for use by language bindings. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000030"><xreftitle>Todo</xreftitle><xrefdescription><para>for now, if this function fails due to OOM it will leave the message half-written and you have to discard the message and start over.</para></xrefdescription></xrefsect></para><para><simplesect kind="see"><para><ref refid="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" kindref="member">dbus_message_append_args</ref>. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_arg_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var_args</parametername>
</parameternamelist>
<parameterdescription>
<para>value of first argument, then list of type/value pairs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1824" column="1" bodyfile="dbus/dbus-message.c" bodystart="1824" bodyend="1933"/>
        <references refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" compoundref="dbus-marshal-basic_8c" startline="1219" endline="1270">_dbus_type_to_string</references>
        <references refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" compoundref="dbus-internals_8c" startline="230" endline="247">_dbus_warn</references>
        <references refid="group__DBusMessage_1ga6e62697ca11f0a57dbecc93d5721612c" compoundref="dbus-message_8c" startline="2951" endline="2965">dbus_message_iter_abandon_container</references>
        <references refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2656" endline="2753">dbus_message_iter_append_basic</references>
        <references refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" compoundref="dbus-message_8c" startline="2791" endline="2825">dbus_message_iter_append_fixed_array</references>
        <references refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" compoundref="dbus-message_8c" startline="2918" endline="2937">dbus_message_iter_close_container</references>
        <references refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</references>
        <references refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" compoundref="dbus-message_8c" startline="2849" endline="2901">dbus_message_iter_open_container</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" compoundref="dbus-message_8c" startline="1792" endline="1808">dbus_message_append_args</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_get_args</definition>
        <argsstring>(DBusMessage *message, DBusError *error, int first_arg_type,...)</argsstring>
        <name>dbus_message_get_args</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg_type</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Gets arguments from a message given a variable argument list. </para>        </briefdescription>
        <detaileddescription>
<para>The supported types include those supported by <ref refid="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" kindref="member">dbus_message_append_args()</ref>; that is, basic types and arrays of fixed-length basic types. The arguments are the same as they would be for <ref refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" kindref="member">dbus_message_iter_get_basic()</ref> or <ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array()</ref>.</para><para>In addition to those types, arrays of string, object path, and signature are supported; but these are returned as allocated memory and must be freed with <ref refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" kindref="member">dbus_free_string_array()</ref>, while the other types are returned as const references. To get a string array pass in &quot;char ***array_location&quot; and &quot;int *n_elements&quot;.</para><para>Similar to dbus_message_get_fixed_array() this function does not support arrays of type DBUS_TYPE_UNIX_FD. If you need to parse messages with arrays of Unix file descriptors you need to recurse into the array manually.</para><para>Unix file descriptors that are read with this function will have the FD_CLOEXEC flag set. If you need them without this flag set, make sure to unset it with fcntl().</para><para>The variable argument list should contain the type of the argument followed by a pointer to where the value should be stored. The list is terminated with <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>.</para><para>Except for string arrays, the returned values are constant; do not free them. They point into the <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>.</para><para>If the requested arguments are not present, or do not have the requested types, then an error will be set.</para><para>If more arguments than requested are present, the requested arguments are returned and the extra arguments are ignored.</para><para><xrefsect id="todo_1_todo000031"><xreftitle>Todo</xreftitle><xrefdescription><para>support DBUS_TYPE_STRUCT and DBUS_TYPE_VARIANT and complex arrays</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error to be filled in on failure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_arg_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the first argument type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>location for first argument value, then list of type-location pairs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the error was set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="1980" column="1" bodyfile="dbus/dbus-message.c" bodystart="1980" bodyend="1996"/>
        <references refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" compoundref="dbus-message_8c" startline="2009" endline="2021">dbus_message_get_args_valist</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusBus_1ga18314500e7f6890a79bddbeace5df5f9" compoundref="dbus-bus_8c" startline="948" endline="1007">dbus_bus_get_id</referencedby>
        <referencedby refid="group__DBusBus_1ga24d782c710f3d82caf1b1ed582dcf474" compoundref="dbus-bus_8c" startline="865" endline="927">dbus_bus_get_unix_user</referencedby>
        <referencedby refid="group__DBusBus_1ga5331b172dd8ed00eec130e894c5c2a0b" compoundref="dbus-bus_8c" startline="1280" endline="1331">dbus_bus_name_has_owner</referencedby>
        <referencedby refid="group__DBusBus_1ga0c21cf74d05c0bd8003846b56a588a4b" compoundref="dbus-bus_8c" startline="646" endline="728">dbus_bus_register</referencedby>
        <referencedby refid="group__DBusBus_1gaa4aa5ebe51cdbe8c0651609fc72e841a" compoundref="dbus-bus_8c" startline="1198" endline="1260">dbus_bus_release_name</referencedby>
        <referencedby refid="group__DBusBus_1ga8a9024c78c4ea89b6271f19dbc7861b2" compoundref="dbus-bus_8c" startline="1112" endline="1176">dbus_bus_request_name</referencedby>
        <referencedby refid="group__DBusBus_1ga81d303bf29d7c97ad4690ce35071b090" compoundref="dbus-bus_8c" startline="1356" endline="1409">dbus_bus_start_service_by_name</referencedby>
        <referencedby refid="group__DBusMessage_1gaba5e49e956e6bbd1f857ffd21c289276" compoundref="dbus-message_8c" startline="3796" endline="3816">dbus_set_error_from_message</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_get_args_valist</definition>
        <argsstring>(DBusMessage *message, DBusError *error, int first_arg_type, va_list var_args)</argsstring>
        <name>dbus_message_get_args_valist</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first_arg_type</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>var_args</declname>
        </param>
        <briefdescription>
<para>Like dbus_message_get_args but takes a va_list for use by language bindings. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" kindref="member">dbus_message_get_args</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>error to be filled in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_arg_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the first argument </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var_args</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for first argument, followed by list of type/location pairs </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if error was set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2009" column="1" bodyfile="dbus/dbus-message.c" bodystart="2009" bodyend="2021"/>
        <references refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</references>
        <references refid="structDBusMessage_1a5d102e908f6ff96a5a0aa6a39b4963a8" compoundref="dbus-message-private_8h" startline="116">DBusMessage::changed_stamp</references>
        <references refid="structDBusMessageRealIter_1ac10324f74497a5c2288eef8fbcd3ae42" compoundref="dbus-message_8c" startline="129">DBusMessageRealIter::changed_stamp</references>
        <references refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</references>
        <references refid="group__DBusMessageInternals_1ga1dfae386ef0d4d808584abeafc44e8ca" compoundref="dbus-message_8c" startline="195">ensure_byte_order</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" compoundref="dbus-message_8c" startline="131">DBusMessageRealIter::sig_refcount</references>
        <referencedby refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" compoundref="dbus-message_8c" startline="1980" endline="1996">dbus_message_get_args</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga7caf2a07fc8c5cd1298f94df0be89096" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_message_iter_init_common</definition>
        <argsstring>(DBusMessage *message, DBusMessageRealIter *real, int iter_type)</argsstring>
        <name>_dbus_message_iter_init_common</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref> *</type>
          <declname>real</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2024" column="1" bodyfile="dbus/dbus-message.c" bodystart="2024" bodyend="2039"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_init</definition>
        <argsstring>(DBusMessage *message, DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_init</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> for reading the arguments of the message passed in. </para>        </briefdescription>
        <detaileddescription>
<para>When possible, <ref refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" kindref="member">dbus_message_get_args()</ref> is much more convenient. Some types of argument can only be read with <ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> however.</para><para>The easiest way to iterate is like this: <programlisting><codeline><highlight class="normal">dbus_message_iter_init<sp/>(message,<sp/>&amp;iter);</highlight></codeline>
<codeline><highlight class="normal">while<sp/>((current_type<sp/>=<sp/>dbus_message_iter_get_arg_type<sp/>(&amp;iter))<sp/>!=<sp/>DBUS_TYPE_INVALID)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>dbus_message_iter_next<sp/>(&amp;iter);</highlight></codeline>
</programlisting></para><para><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> contains no allocated memory; it need not be freed, and can be copied by assignment or memcpy().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an iterator to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the message has no arguments </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2064" column="1" bodyfile="dbus/dbus-message.c" bodystart="2064" bodyend="2086"/>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <referencedby refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" compoundref="dbus-message_8c" startline="2009" endline="2021">dbus_message_get_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaaffc75a699c96ff6197287f166df2149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_has_next</definition>
        <argsstring>(DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_has_next</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Checks if an iterator has any more fields. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there are more fields following </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2095" column="1" bodyfile="dbus/dbus-message.c" bodystart="2095" bodyend="2103"/>
        <references refid="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" compoundref="dbus-marshal-recursive_8c" startline="1091" endline="1098">_dbus_type_reader_has_next</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga554e9fafd4dcc84cebe9da9344846a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_next</definition>
        <argsstring>(DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_next</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Moves the iterator to the next field, if any. </para>        </briefdescription>
        <detaileddescription>
<para>If there&apos;s no next field, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>. If the iterator moves forward, returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the iterator was moved to the next field </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2114" column="1" bodyfile="dbus/dbus-message.c" bodystart="2114" bodyend="2122"/>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>DBUS_EXPORT int dbus_message_iter_get_arg_type</definition>
        <argsstring>(DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_get_arg_type</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Returns the argument type of the argument that the message iterator points to. </para>        </briefdescription>
        <detaileddescription>
<para>If the iterator is at the end of the message, returns <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>. You can thus write a loop as follows:</para><para><programlisting><codeline><highlight class="normal">dbus_message_iter_init<sp/>(message,<sp/>&amp;iter);</highlight></codeline>
<codeline><highlight class="normal">while<sp/>((current_type<sp/>=<sp/>dbus_message_iter_get_arg_type<sp/>(&amp;iter))<sp/>!=<sp/>DBUS_TYPE_INVALID)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>dbus_message_iter_next<sp/>(&amp;iter);</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the argument type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2139" column="1" bodyfile="dbus/dbus-message.c" bodystart="2139" bodyend="2147"/>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <referencedby refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" compoundref="dbus-message_8c" startline="796" endline="1066">_dbus_message_iter_get_args_valist</referencedby>
        <referencedby refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" compoundref="dbus-message_8c" startline="2293" endline="2325">dbus_message_iter_get_basic</referencedby>
        <referencedby refid="group__DBusMessage_1ga868a7aeddb9b54b2805776b512f68cb4" compoundref="dbus-message_8c" startline="2158" endline="2167">dbus_message_iter_get_element_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga868a7aeddb9b54b2805776b512f68cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>DBUS_EXPORT int dbus_message_iter_get_element_type</definition>
        <argsstring>(DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_get_element_type</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Returns the element type of the array that the message iterator points to. </para>        </briefdescription>
        <detaileddescription>
<para>Note that you need to check that the iterator points to an array prior to using this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the array element type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2158" column="1" bodyfile="dbus/dbus-message.c" bodystart="2158" bodyend="2167"/>
        <references refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" compoundref="dbus-marshal-recursive_8c" startline="820" endline="830">_dbus_type_reader_get_element_type</references>
        <references refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" compoundref="dbus-message_8c" startline="2139" endline="2147">dbus_message_iter_get_arg_type</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_iter_recurse</definition>
        <argsstring>(DBusMessageIter *iter, DBusMessageIter *sub)</argsstring>
        <name>dbus_message_iter_recurse</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Recurses into a container value when reading values from a message, initializing a sub-iterator to use for traversing the child values of the container. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this recurses into a value, not a type, so you can only recurse if the value exists. The main implication of this is that if you have for example an empty array of array of int32, you can recurse into the outermost array, but it will have no values, so you won&apos;t be able to recurse further. There&apos;s no array of int32 to recurse into.</para><para>If a container is an array of fixed-length types (except Unix file descriptors), it is much more efficient to use <ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array()</ref> to get the whole array in one shot, rather than individually walking over the array elements.</para><para>Be sure you have somehow checked that <ref refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" kindref="member">dbus_message_iter_get_arg_type()</ref> matches the type you are expecting to recurse into. Results of this function are undefined if there is no container to recurse into at the current iterator position.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>the sub-iterator to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2195" column="1" bodyfile="dbus/dbus-message.c" bodystart="2195" bodyend="2206"/>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gab4579a88a1a7eaf648350466f585ef8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>DBUS_EXPORT char * dbus_message_iter_get_signature</definition>
        <argsstring>(DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_get_signature</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Returns the current signature of a message iterator. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful primarily for dealing with variants; one can recurse into a variant and determine the signature of the variant&apos;s value.</para><para>The returned string must be freed with <ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the message iterator </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the contained signature, or NULL if out of memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2220" column="1" bodyfile="dbus/dbus-message.c" bodystart="2220" bodyend="2243"/>
        <references refid="group__DBusString_1ga724656b7091b910965bd1af42d0b7bab" compoundref="dbus-string_8c" startline="1136" endline="1145">_dbus_string_append_len</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga556cc30c3ab032dbc63e217119f0d1f5" compoundref="dbus-string_8c" startline="641" endline="662">_dbus_string_steal_data</references>
        <references refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" compoundref="dbus-marshal-recursive_8c" startline="1122" endline="1130">_dbus_type_reader_get_signature</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_iter_get_basic</definition>
        <argsstring>(DBusMessageIter *iter, void *value)</argsstring>
        <name>dbus_message_iter_get_basic</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Reads a basic-typed value from the message iterator. </para>        </briefdescription>
        <detaileddescription>
<para>Basic types are the non-containers such as integer and string.</para><para>The value argument should be the address of a location to store the returned value. So for int32 it should be a &quot;dbus_int32_t*&quot; and for string a &quot;const char**&quot;. The returned value is by reference and should not be freed.</para><para>This call duplicates Unix file descriptors when reading them. It is your job to close them when you don&apos;t need them anymore.</para><para>Unix file descriptors that are read with this function will have the FD_CLOEXEC flag set. If you need them without this flag set, make sure to unset it with fcntl().</para><para>Be sure you have somehow checked that <ref refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" kindref="member">dbus_message_iter_get_arg_type()</ref> matches the type you are expecting, or you&apos;ll crash when you try to use an integer as a string or something.</para><para>To read any container type (array, struct, dict) you will need to recurse into the container with <ref refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" kindref="member">dbus_message_iter_recurse()</ref>. If the container is an array of fixed-length values (except Unix file descriptors), you can get all the array elements at once with <ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array()</ref>. Otherwise, you have to iterate over the container&apos;s contents one value at a time.</para><para>All basic-typed values are guaranteed to fit in a <ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>, so in versions of libdbus that have that type, you can write code like this:</para><para><programlisting><codeline><highlight class="normal">DBusBasicValue<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>type;</highlight></codeline>
<codeline><highlight class="normal">dbus_message_iter_get_basic<sp/>(&amp;read_iter,<sp/>&amp;value);</highlight></codeline>
<codeline><highlight class="normal">type<sp/>=<sp/>dbus_message_iter_get_arg_type<sp/>(&amp;read_iter);</highlight></codeline>
<codeline><highlight class="normal">dbus_message_iter_append_basic<sp/>(&amp;write_iter,<sp/>type,<sp/>&amp;value);</highlight></codeline>
</programlisting></para><para>(All D-Bus basic types are either numeric and 8 bytes or smaller, or behave like a string; so in older versions of libdbus, <ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref> can be replaced with union { char *string; unsigned char bytes[8]; }, for instance.)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store the value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2293" column="1" bodyfile="dbus/dbus-message.c" bodystart="2293" bodyend="2325"/>
        <references refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" compoundref="dbus-sysdeps-unix_8c" startline="3053" endline="3085">_dbus_dup</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" compoundref="dbus-message_8c" startline="2139" endline="2147">dbus_message_iter_get_arg_type</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" compoundref="dbus-types_8h" startline="143">DBusBasicValue::u32</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gab8ff47649497b3e0b93a2289f5d3eb23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>DBUS_EXPORT DBUS_DEPRECATED int dbus_message_iter_get_array_len</definition>
        <argsstring>(DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_get_array_len</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes in the array as marshaled in the wire protocol. </para>        </briefdescription>
        <detaileddescription>
<para>The iterator must currently be inside an array-typed value.</para><para>This function is deprecated on the grounds that it is stupid. Why would you want to know how many bytes are in the array as marshaled in the wire protocol? For now, use the n_elements returned from <ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array()</ref> instead, or iterate over the array values and count them.</para><para><xrefsect id="todo_1_todo000032"><xreftitle>Todo</xreftitle><xrefdescription><para>introduce a variant of this get_n_elements that returns the number of elements, though with a non-fixed array it will not be very efficient, so maybe it&apos;s not good.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes in the array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2346" column="1" bodyfile="dbus/dbus-message.c" bodystart="2346" bodyend="2353"/>
        <references refid="group__DBusMarshal_1ga7def93d676d528c261aa274cea41c29d" compoundref="dbus-marshal-recursive_8c" startline="899" endline="905">_dbus_type_reader_get_array_length</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_iter_get_fixed_array</definition>
        <argsstring>(DBusMessageIter *iter, void *value, int *n_elements)</argsstring>
        <name>dbus_message_iter_get_fixed_array</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>n_elements</declname>
        </param>
        <briefdescription>
<para>Reads a block of fixed-length values from the message iterator. </para>        </briefdescription>
        <detaileddescription>
<para>Fixed-length values are those basic types that are not string-like, such as integers, bool, double. The returned block will be from the current position in the array until the end of the array.</para><para>There is one exception here: although DBUS_TYPE_UNIX_FD is considered a &apos;fixed&apos; type arrays of this type may not be read with this function.</para><para>The message iter should be &quot;in&quot; the array (that is, you recurse into the array, and then you call <ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array()</ref> on the &quot;sub-iterator&quot; created by <ref refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" kindref="member">dbus_message_iter_recurse()</ref>).</para><para>The value argument should be the address of a location to store the returned array. So for int32 it should be a &quot;const dbus_int32_t**&quot; The returned value is by reference and should not be freed.</para><para>This function should only be used if <ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed()</ref> returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> for the element type.</para><para>If an array&apos;s elements are not fixed in size, you have to recurse into the array with <ref refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" kindref="member">dbus_message_iter_recurse()</ref> and read the elements one by one.</para><para>Because the array is not copied, this function runs in constant time and is fast; it&apos;s much preferred over walking the entire array with an iterator. (However, you can always use <ref refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" kindref="member">dbus_message_iter_recurse()</ref>, even for fixed-length types; <ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array()</ref> is just an optimization.)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>location to store the block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the block </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2391" column="1" bodyfile="dbus/dbus-message.c" bodystart="2391" bodyend="2407"/>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" compoundref="dbus-marshal-recursive_8c" startline="923" endline="973">_dbus_type_reader_read_fixed_multi</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" compoundref="dbus-message_8c" startline="135">DBusMessageRealIter::reader</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_iter_init_append</definition>
        <argsstring>(DBusMessage *message, DBusMessageIter *iter)</argsstring>
        <name>dbus_message_iter_init_append</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> for appending arguments to the end of a message. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000033"><xreftitle>Todo</xreftitle><xrefdescription><para>If appending any of the arguments fails due to lack of memory, the message is hosed and you have to start over building the whole message.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an iterator to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2421" column="1" bodyfile="dbus/dbus-message.c" bodystart="2421" bodyend="2440"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" compoundref="dbus-marshal-header_8c" startline="1392" endline="1406">_dbus_header_get_field_raw</references>
        <references refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="group__DBusMarshal_1ga863b2f232a21582f9e6fe1951b09da91" compoundref="dbus-marshal-recursive_8c" startline="1543" endline="1552">_dbus_type_writer_add_types</references>
        <references refid="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" compoundref="dbus-marshal-recursive_8c" startline="1525" endline="1532">_dbus_type_writer_init_types_delayed</references>
        <references refid="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" compoundref="dbus-marshal-recursive_8c" startline="1560" endline="1564">_dbus_type_writer_remove_types</references>
        <references refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" compoundref="dbus-internals_8c" startline="258" endline="277">_dbus_warn_check_failed</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" compoundref="dbus-protocol_8h" startline="297">DBUS_HEADER_FIELD_SIGNATURE</references>
        <references refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" compoundref="dbus-memory_8h" startline="58">dbus_new</references>
        <references refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" compoundref="dbus-memory_8c" startline="601" endline="692">dbus_realloc</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" compoundref="dbus-message_8c" startline="131">DBusMessageRealIter::sig_refcount</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" compoundref="dbus-marshal-recursive_8h" startline="74">DBusTypeWriter::type_str</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" compoundref="dbus-message_8c" startline="134">DBusMessageRealIter::writer</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" compoundref="dbus-object-tree_8c" startline="718" endline="724">_dbus_object_tree_free_all_unlocked</referencedby>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaa17903e06fde2a8f766cf5cc157eac73" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_message_iter_open_signature</definition>
        <argsstring>(DBusMessageRealIter *real)</argsstring>
        <name>_dbus_message_iter_open_signature</name>
        <param>
          <type><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref> *</type>
          <declname>real</declname>
        </param>
        <briefdescription>
<para>Creates a temporary signature string containing the current signature, stores it in the iterator, and points the iterator to the end of it. </para>        </briefdescription>
        <detaileddescription>
<para>Used any time we write to the message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>real</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator without a type_str </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2451" column="1" bodyfile="dbus/dbus-message.c" bodystart="2451" bodyend="2510"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga327425badc25dc9f63eb68dc8399f7df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_message_iter_close_signature</definition>
        <argsstring>(DBusMessageRealIter *real)</argsstring>
        <name>_dbus_message_iter_close_signature</name>
        <param>
          <type><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref> *</type>
          <declname>real</declname>
        </param>
        <briefdescription>
<para>Sets the new signature as the message signature, frees the signature string, and marks the iterator as not having a type_str anymore. </para>        </briefdescription>
        <detaileddescription>
<para>Frees the signature even if it fails, so you can&apos;t really recover from failure. Kinda busted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>real</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator without a type_str </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2522" column="1" bodyfile="dbus/dbus-message.c" bodystart="2522" bodyend="2554"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gadb64188a0f8ff4b9aa62b2407115a6b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_message_iter_abandon_signature</definition>
        <argsstring>(DBusMessageRealIter *real)</argsstring>
        <name>_dbus_message_iter_abandon_signature</name>
        <param>
          <type><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref> *</type>
          <declname>real</declname>
        </param>
        <briefdescription>
<para>Frees the signature string and marks the iterator as not having a type_str anymore. </para>        </briefdescription>
        <detaileddescription>
<para>Since the new signature is not set, the message will generally be hosed after this is called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>real</parametername>
</parameternamelist>
<parameterdescription>
<para>an iterator without a type_str </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2564" column="1" bodyfile="dbus/dbus-message.c" bodystart="2564" bodyend="2583"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga1defdbeecd6a59cfe65bfef9b8f9ad76" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_message_iter_append_check</definition>
        <argsstring>(DBusMessageRealIter *iter)</argsstring>
        <name>_dbus_message_iter_append_check</name>
        <param>
          <type><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2587" column="1" bodyfile="dbus/dbus-message.c" bodystart="2587" bodyend="2599"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_append_basic</definition>
        <argsstring>(DBusMessageIter *iter, int type, const void *value)</argsstring>
        <name>dbus_message_iter_append_basic</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Appends a basic-typed value to the message. </para>        </briefdescription>
        <detaileddescription>
<para>The basic types are the non-container types such as integer and string.</para><para>The &quot;value&quot; argument should be the address of a basic-typed value. So for string, const char**. For integer, dbus_int32_t*.</para><para>For Unix file descriptors this function will internally duplicate the descriptor you passed in. Hence you may close the descriptor immediately after this call.</para><para><xrefsect id="todo_1_todo000034"><xreftitle>Todo</xreftitle><xrefdescription><para>If this fails due to lack of memory, the message is hosed and you have to start over building the whole message.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the append iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2656" column="1" bodyfile="dbus/dbus-message.c" bodystart="2656" bodyend="2753"/>
        <references refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" compoundref="dbus-sysdeps-unix_8c" startline="3025" endline="3042">_dbus_close</references>
        <references refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" compoundref="dbus-sysdeps-unix_8c" startline="3053" endline="3085">_dbus_dup</references>
        <references refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" compoundref="dbus-protocol_8h" startline="302">DBUS_HEADER_FIELD_UNIX_FDS</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" compoundref="dbus-signature_8c" startline="318" endline="326">dbus_type_is_basic</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" compoundref="dbus-message_8c" startline="134">DBusMessageRealIter::writer</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" compoundref="dbus-object-tree_8c" startline="718" endline="724">_dbus_object_tree_free_all_unlocked</referencedby>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_append_fixed_array</definition>
        <argsstring>(DBusMessageIter *iter, int element_type, const void *value, int n_elements)</argsstring>
        <name>dbus_message_iter_append_fixed_array</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>element_type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_elements</declname>
        </param>
        <briefdescription>
<para>Appends a block of fixed-length values to an array. </para>        </briefdescription>
        <detaileddescription>
<para>The fixed-length types are all basic types that are not string-like. So int32, double, bool, etc. (Unix file descriptors however are not supported.) You must call <ref refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" kindref="member">dbus_message_iter_open_container()</ref> to open an array of values before calling this function. You may call this function multiple times (and intermixed with calls to <ref refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" kindref="member">dbus_message_iter_append_basic()</ref>) for the same array.</para><para>The &quot;value&quot; argument should be the address of the array. So for integer, &quot;dbus_int32_t**&quot; is expected for example.</para><para><simplesect kind="warning"><para>in C, given &quot;int array[]&quot;, &quot;&amp;array == array&quot; (the comp.lang.c FAQ says otherwise, but gcc and the FAQ don&apos;t agree). So if you&apos;re using an array instead of a pointer you have to create a pointer variable, assign the array to it, then take the address of the pointer variable. <programlisting><codeline><highlight class="normal">const<sp/>dbus_int32_t<sp/>array[]<sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3<sp/>};</highlight></codeline>
<codeline><highlight class="normal">const<sp/>dbus_int32_t<sp/>*v_ARRAY<sp/>=<sp/>array;</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(!dbus_message_iter_append_fixed_array<sp/>(&amp;iter,<sp/>DBUS_TYPE_INT32,<sp/>&amp;v_ARRAY,<sp/>3))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fprintf<sp/>(stderr,<sp/>&quot;No<sp/>memory!\n&quot;);</highlight></codeline>
</programlisting> For strings it works to write const char *array = &quot;Hello&quot; and then use &amp;array though.</para></simplesect>
<xrefsect id="todo_1_todo000035"><xreftitle>Todo</xreftitle><xrefdescription><para>If this fails due to lack of memory, the message is hosed and you have to start over building the whole message.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the append iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the array elements </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the address of the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_elements</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of elements to append </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2791" column="1" bodyfile="dbus/dbus-message.c" bodystart="2791" bodyend="2825"/>
        <references refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" compoundref="dbus-marshal-basic_8c" startline="1173" endline="1210">_dbus_type_get_alignment</references>
        <references refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" compoundref="dbus-marshal-recursive_8c" startline="2356" endline="2392">_dbus_type_writer_write_fixed_multi</references>
        <references refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" compoundref="dbus-marshal-recursive_8h" startline="68">DBusTypeWriter::container_type</references>
        <references refid="group__DBusProtocol_1ga5265afa08a4c8d9f31b287a57e8cb217" compoundref="dbus-protocol_8h" startline="203">DBUS_MAXIMUM_ARRAY_LENGTH</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" compoundref="dbus-protocol_8h" startline="70">DBUS_TYPE_BOOLEAN</references>
        <references refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" compoundref="dbus-signature_8c" startline="349" endline="371">dbus_type_is_fixed</references>
        <references refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" compoundref="dbus-protocol_8h" startline="114">DBUS_TYPE_UNIX_FD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" compoundref="dbus-message_8c" startline="134">DBusMessageRealIter::writer</references>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_open_container</definition>
        <argsstring>(DBusMessageIter *iter, int type, const char *contained_signature, DBusMessageIter *sub)</argsstring>
        <name>dbus_message_iter_open_container</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>contained_signature</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Appends a container-typed value to the message; you are required to append the contents of the container using the returned sub-iterator, and then call <ref refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" kindref="member">dbus_message_iter_close_container()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Container types are for example struct, variant, and array. For variants, the contained_signature should be the type of the single value inside the variant. For structs and dict entries, contained_signature should be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>; it will be set to whatever types you write into the struct. For arrays, contained_signature should be the type of the array elements.</para><para><xrefsect id="todo_1_todo000036"><xreftitle>Todo</xreftitle><xrefdescription><para>If this fails due to lack of memory, the message is hosed and you have to start over building the whole message.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the append iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contained_signature</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of container contents </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>sub-iterator to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2849" column="1" bodyfile="dbus/dbus-message.c" bodystart="2849" bodyend="2901"/>
        <references refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" compoundref="dbus-string_8c" startline="190" endline="197">_dbus_string_init_const</references>
        <references refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" compoundref="dbus-marshal-recursive_8c" startline="2106" endline="2125">_dbus_type_writer_recurse</references>
        <references refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" compoundref="dbus-protocol_8h" startline="164">DBUS_DICT_ENTRY_BEGIN_CHAR</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" compoundref="dbus-protocol_8h" startline="143">DBUS_TYPE_DICT_ENTRY</references>
        <references refid="group__DBusSignature_1gaa0c4c8aa34fa266daa55bd37bdad39b8" compoundref="dbus-signature_8c" startline="294" endline="300">dbus_type_is_container</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" compoundref="dbus-message_8c" startline="134">DBusMessageRealIter::writer</references>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_iter_close_container</definition>
        <argsstring>(DBusMessageIter *iter, DBusMessageIter *sub)</argsstring>
        <name>dbus_message_iter_close_container</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Closes a container-typed value appended to the message; may write out more information to the message known only after the entire container is written, and may free resources created by <ref refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" kindref="member">dbus_message_iter_open_container()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000037"><xreftitle>Todo</xreftitle><xrefdescription><para>If this fails due to lack of memory, the message is hosed and you have to start over building the whole message.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the append iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>sub-iterator to close </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2918" column="1" bodyfile="dbus/dbus-message.c" bodystart="2918" bodyend="2937"/>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <references refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6">DBusMessageRealIter::u</references>
        <references refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" compoundref="dbus-message_8c" startline="134">DBusMessageRealIter::writer</references>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga6e62697ca11f0a57dbecc93d5721612c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_iter_abandon_container</definition>
        <argsstring>(DBusMessageIter *iter, DBusMessageIter *sub)</argsstring>
        <name>dbus_message_iter_abandon_container</name>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref> *</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
<para>Abandons creation of a contained-typed value and frees resources created by <ref refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" kindref="member">dbus_message_iter_open_container()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Once this returns, the message is hosed and you have to start over building the whole message.</para><para>This should only be used to abandon creation of a message when you have open containers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para>the append iterator </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sub</parametername>
</parameternamelist>
<parameterdescription>
<para>sub-iterator to close </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2951" column="1" bodyfile="dbus/dbus-message.c" bodystart="2951" bodyend="2965"/>
        <references refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" compoundref="dbus-message_8c" startline="130">DBusMessageRealIter::iter_type</references>
        <referencedby refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" compoundref="dbus-message_8c" startline="1824" endline="1933">dbus_message_append_args_valist</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_set_no_reply</definition>
        <argsstring>(DBusMessage *message, dbus_bool_t no_reply)</argsstring>
        <name>dbus_message_set_no_reply</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>no_reply</declname>
        </param>
        <briefdescription>
<para>Sets a flag indicating that the message does not want a reply; if this flag is set, the other end of the connection may (but is not required to) optimize by not sending method return or error replies. </para>        </briefdescription>
        <detaileddescription>
<para>If this flag is set, there is no way to know whether the message successfully arrived at the remote end. Normally you know a message was received when you receive the reply to it.</para><para>The flag is <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> by default, that is by default the other end is required to reply.</para><para>On the protocol level this toggles <ref refid="group__DBusProtocol_1ga0dcac038284250b3b0bff49cb4990626" kindref="member">DBUS_HEADER_FLAG_NO_REPLY_EXPECTED</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>no_reply</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if no reply is desired </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="2984" column="1" bodyfile="dbus/dbus-message.c" bodystart="2984" bodyend="2993"/>
        <references refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" compoundref="dbus-marshal-header_8c" startline="1457" endline="1469">_dbus_header_toggle_flag</references>
        <references refid="group__DBusProtocol_1ga0dcac038284250b3b0bff49cb4990626" compoundref="dbus-protocol_8h" startline="249">DBUS_HEADER_FLAG_NO_REPLY_EXPECTED</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
        <referencedby refid="group__DBusBus_1ga81d303bf29d7c97ad4690ce35071b090" compoundref="dbus-bus_8c" startline="1356" endline="1409">dbus_bus_start_service_by_name</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
        <referencedby refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" compoundref="dbus-message_8c" startline="1424" endline="1453">dbus_message_new_signal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga622d051a2e5f578814116a958b240aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_get_no_reply</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_no_reply</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message does not expect a reply. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message sender isn&apos;t waiting for a reply </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3003" column="1" bodyfile="dbus/dbus-message.c" bodystart="3003" bodyend="3009"/>
        <references refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" compoundref="dbus-marshal-header_8c" startline="1479" endline="1487">_dbus_header_get_flag</references>
        <references refid="group__DBusProtocol_1ga0dcac038284250b3b0bff49cb4990626" compoundref="dbus-protocol_8h" startline="249">DBUS_HEADER_FLAG_NO_REPLY_EXPECTED</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga1596d92a8d604f954b48c7410263d2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>DBUS_EXPORT void dbus_message_set_auto_start</definition>
        <argsstring>(DBusMessage *message, dbus_bool_t auto_start)</argsstring>
        <name>dbus_message_set_auto_start</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>auto_start</declname>
        </param>
        <briefdescription>
<para>Sets a flag indicating that an owner for the destination name will be automatically started before the message is delivered. </para>        </briefdescription>
        <detaileddescription>
<para>When this flag is set, the message is held until a name owner finishes starting up, or fails to start up. In case of failure, the reply will be an error.</para><para>The flag is set to <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> by default, i.e. auto starting is the default.</para><para>On the protocol level this toggles <ref refid="group__DBusProtocol_1ga8699fad5ce9ff93fe3f3471ba463dd40" kindref="member">DBUS_HEADER_FLAG_NO_AUTO_START</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auto_start</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if auto-starting is desired </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3026" column="1" bodyfile="dbus/dbus-message.c" bodystart="3026" bodyend="3035"/>
        <references refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" compoundref="dbus-marshal-header_8c" startline="1457" endline="1469">_dbus_header_toggle_flag</references>
        <references refid="group__DBusProtocol_1ga8699fad5ce9ff93fe3f3471ba463dd40" compoundref="dbus-protocol_8h" startline="256">DBUS_HEADER_FLAG_NO_AUTO_START</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga85d396a3a774e15c3dbb7704aa173384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_get_auto_start</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_auto_start</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message will cause an owner for destination name to be auto-started. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message will use auto-start </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3045" column="1" bodyfile="dbus/dbus-message.c" bodystart="3045" bodyend="3051"/>
        <references refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" compoundref="dbus-marshal-header_8c" startline="1479" endline="1487">_dbus_header_get_flag</references>
        <references refid="group__DBusProtocol_1ga8699fad5ce9ff93fe3f3471ba463dd40" compoundref="dbus-protocol_8h" startline="256">DBUS_HEADER_FLAG_NO_AUTO_START</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaaf25da0ba1482266293d329314c21786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_path</definition>
        <argsstring>(DBusMessage *message, const char *object_path)</argsstring>
        <name>dbus_message_set_path</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>object_path</declname>
        </param>
        <briefdescription>
<para>Sets the object path this message is being sent to (for DBUS_MESSAGE_TYPE_METHOD_CALL) or the one a signal is being emitted from (for DBUS_MESSAGE_TYPE_SIGNAL). </para>        </briefdescription>
        <detaileddescription>
<para>The path must contain only valid characters as defined in the D-Bus specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object_path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to unset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3067" column="1" bodyfile="dbus/dbus-message.c" bodystart="3067" bodyend="3080"/>
        <references refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" compoundref="dbus-protocol_8h" startline="270">DBUS_HEADER_FIELD_PATH</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_path</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_path</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the object path this message is being sent to (for DBUS_MESSAGE_TYPE_METHOD_CALL) or being emitted from (for DBUS_MESSAGE_TYPE_SIGNAL). </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none.</para><para>See also <ref refid="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" kindref="member">dbus_message_get_path_decomposed()</ref>.</para><para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the path (should not be freed) or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3096" column="1" bodyfile="dbus/dbus-message.c" bodystart="3096" bodyend="3108"/>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" compoundref="dbus-protocol_8h" startline="270">DBUS_HEADER_FIELD_PATH</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" compoundref="dbus-message_8c" startline="3164" endline="3182">dbus_message_get_path_decomposed</referencedby>
        <referencedby refid="group__DBusMessage_1gad2c87d3472bd3bfa8eca8a97f2db026b" compoundref="dbus-message_8c" startline="3120" endline="3141">dbus_message_has_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gad2c87d3472bd3bfa8eca8a97f2db026b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_has_path</definition>
        <argsstring>(DBusMessage *message, const char *path)</argsstring>
        <name>dbus_message_has_path</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Checks if the message has a particular object path. </para>        </briefdescription>
        <detaileddescription>
<para>The object path is the destination object for a method call or the emitting object for a signal.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there is a path field in the header </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3120" column="1" bodyfile="dbus/dbus-message.c" bodystart="3120" bodyend="3141"/>
        <references refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" compoundref="dbus-message_8c" startline="3096" endline="3108">dbus_message_get_path</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_get_path_decomposed</definition>
        <argsstring>(DBusMessage *message, char ***path)</argsstring>
        <name>dbus_message_get_path_decomposed</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Gets the object path this message is being sent to (for DBUS_MESSAGE_TYPE_METHOD_CALL) or being emitted from (for DBUS_MESSAGE_TYPE_SIGNAL) in a decomposed format (one array element per path component). </para>        </briefdescription>
        <detaileddescription>
<para>Free the returned array with <ref refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" kindref="member">dbus_free_string_array()</ref>.</para><para>An empty but non-NULL path array means the path &quot;/&quot;. So the path &quot;/foo/bar&quot; becomes { &quot;foo&quot;, &quot;bar&quot;, NULL } and the path &quot;/&quot; becomes { NULL }.</para><para>See also <ref refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" kindref="member">dbus_message_get_path()</ref>.</para><para><xrefsect id="todo_1_todo000038"><xreftitle>Todo</xreftitle><xrefdescription><para>this could be optimized by using the len from the message instead of calling strlen() again</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>place to store allocated array of path components; <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> set here if no path field exists </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory to allocate the array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3164" column="1" bodyfile="dbus/dbus-message.c" bodystart="3164" bodyend="3182"/>
        <references refid="group__DBusObjectTree_1gab282b916368cd512842d3aaae31e65c7" compoundref="dbus-object-tree_8c" startline="1242" endline="1325">_dbus_decompose_path</references>
        <references refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" compoundref="dbus-message_8c" startline="3096" endline="3108">dbus_message_get_path</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusObjectTree_1gad660d78a12fa207d891838863dfc6ba7" compoundref="dbus-object-tree_8c" startline="903" endline="1064">_dbus_object_tree_dispatch_and_unlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga02b754855e4d9a1cade8e4fc17a3f5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_interface</definition>
        <argsstring>(DBusMessage *message, const char *iface)</argsstring>
        <name>dbus_message_set_interface</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Sets the interface this message is being sent to (for DBUS_MESSAGE_TYPE_METHOD_CALL) or the interface a signal is being emitted from (for DBUS_MESSAGE_TYPE_SIGNAL). </para>        </briefdescription>
        <detaileddescription>
<para>The interface name must contain only valid characters as defined in the D-Bus specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>the interface or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to unset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3198" column="1" bodyfile="dbus/dbus-message.c" bodystart="3198" bodyend="3211"/>
        <references refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" compoundref="dbus-protocol_8h" startline="274">DBUS_HEADER_FIELD_INTERFACE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_interface</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_interface</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the interface this message is being sent to (for DBUS_MESSAGE_TYPE_METHOD_CALL) or being emitted from (for DBUS_MESSAGE_TYPE_SIGNAL). </para>        </briefdescription>
        <detaileddescription>
<para>The interface name is fully-qualified (namespaced). Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none.</para><para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the message interface (should not be freed) or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3227" column="1" bodyfile="dbus/dbus-message.c" bodystart="3227" bodyend="3239"/>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" compoundref="dbus-protocol_8h" startline="274">DBUS_HEADER_FIELD_INTERFACE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga2fea5f972d1bfe7bcde8c0ec65ca9e90" compoundref="dbus-connection_8c" startline="3217" endline="3251">dbus_connection_send_preallocated</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" compoundref="dbus-message_8c" startline="3543" endline="3553">dbus_message_get_signature</referencedby>
        <referencedby refid="group__DBusMessage_1ga0d1debd1c101a80c386d6ec92cdb1d93" compoundref="dbus-message_8c" startline="3249" endline="3271">dbus_message_has_interface</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga0d1debd1c101a80c386d6ec92cdb1d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_has_interface</definition>
        <argsstring>(DBusMessage *message, const char *iface)</argsstring>
        <name>dbus_message_has_interface</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <briefdescription>
<para>Checks if the message has an interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>the interface name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the interface field in the header matches </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3249" column="1" bodyfile="dbus/dbus-message.c" bodystart="3249" bodyend="3271"/>
        <references refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" compoundref="dbus-message_8c" startline="3227" endline="3239">dbus_message_get_interface</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4378" endline="4393">dbus_connection_get_dispatch_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga3afdda6016816cc70b451d8657065208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_member</definition>
        <argsstring>(DBusMessage *message, const char *member)</argsstring>
        <name>dbus_message_set_member</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Sets the interface member being invoked (DBUS_MESSAGE_TYPE_METHOD_CALL) or emitted (DBUS_MESSAGE_TYPE_SIGNAL). </para>        </briefdescription>
        <detaileddescription>
<para>The member name must contain only valid characters as defined in the D-Bus specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>the member or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to unset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3286" column="1" bodyfile="dbus/dbus-message.c" bodystart="3286" bodyend="3299"/>
        <references refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" compoundref="dbus-protocol_8h" startline="276">DBUS_HEADER_FIELD_MEMBER</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_member</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_member</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the interface member being invoked (DBUS_MESSAGE_TYPE_METHOD_CALL) or emitted (DBUS_MESSAGE_TYPE_SIGNAL). </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none.</para><para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the member name (should not be freed) or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3313" column="1" bodyfile="dbus/dbus-message.c" bodystart="3313" bodyend="3325"/>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" compoundref="dbus-protocol_8h" startline="276">DBUS_HEADER_FIELD_MEMBER</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga2fea5f972d1bfe7bcde8c0ec65ca9e90" compoundref="dbus-connection_8c" startline="3217" endline="3251">dbus_connection_send_preallocated</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" compoundref="dbus-message_8c" startline="3543" endline="3553">dbus_message_get_signature</referencedby>
        <referencedby refid="group__DBusMessage_1gad7021a30bf930f8090bc38f862f19adb" compoundref="dbus-message_8c" startline="3335" endline="3357">dbus_message_has_member</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gad7021a30bf930f8090bc38f862f19adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_has_member</definition>
        <argsstring>(DBusMessage *message, const char *member)</argsstring>
        <name>dbus_message_has_member</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>member</declname>
        </param>
        <briefdescription>
<para>Checks if the message has an interface member. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>the member name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there is a member field in the header </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3335" column="1" bodyfile="dbus/dbus-message.c" bodystart="3335" bodyend="3357"/>
        <references refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" compoundref="dbus-message_8c" startline="3313" endline="3325">dbus_message_get_member</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga892f9857707371c2a53cec6b54c843c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_error_name</definition>
        <argsstring>(DBusMessage *message, const char *error_name)</argsstring>
        <name>dbus_message_set_error_name</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_name</declname>
        </param>
        <briefdescription>
<para>Sets the name of the error (DBUS_MESSAGE_TYPE_ERROR). </para>        </briefdescription>
        <detaileddescription>
<para>The name is fully-qualified (namespaced).</para><para>The error name must contain only valid characters as defined in the D-Bus specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to unset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3371" column="1" bodyfile="dbus/dbus-message.c" bodystart="3371" bodyend="3384"/>
        <references refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" compoundref="dbus-protocol_8h" startline="280">DBUS_HEADER_FIELD_ERROR_NAME</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1ga9f9665902c763bd1ddf9d9bc57d7a7ba" compoundref="dbus-connection_8c" startline="2146" endline="2160">_dbus_connection_close_if_only_one_ref</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_error_name</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_error_name</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the error name (DBUS_MESSAGE_TYPE_ERROR only) or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none. </para>        </briefdescription>
        <detaileddescription>
<para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the error name (should not be freed) or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3397" column="1" bodyfile="dbus/dbus-message.c" bodystart="3397" bodyend="3409"/>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" compoundref="dbus-protocol_8h" startline="280">DBUS_HEADER_FIELD_ERROR_NAME</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusMessage_1ga70ef9d7fad409666a0b5f3a8d4f0dd92" compoundref="dbus-message_8c" startline="3657" endline="3677">dbus_message_is_error</referencedby>
        <referencedby refid="group__DBusMessage_1gaba5e49e956e6bbd1f857ffd21c289276" compoundref="dbus-message_8c" startline="3796" endline="3816">dbus_set_error_from_message</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gacc47c1af23addfc4198b70084ba068fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_destination</definition>
        <argsstring>(DBusMessage *message, const char *destination)</argsstring>
        <name>dbus_message_set_destination</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Sets the message&apos;s destination. </para>        </briefdescription>
        <detaileddescription>
<para>The destination is the name of another connection on the bus and may be either the unique name assigned by the bus to each connection, or a well-known name specified in advance.</para><para>The destination name must contain only valid characters as defined in the D-Bus specification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination name or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to unset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3425" column="1" bodyfile="dbus/dbus-message.c" bodystart="3425" bodyend="3438"/>
        <references refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" compoundref="dbus-protocol_8h" startline="288">DBUS_HEADER_FIELD_DESTINATION</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_destination</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_destination</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the destination of a message or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if there is none set. </para>        </briefdescription>
        <detaileddescription>
<para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the message destination (should not be freed) or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3450" column="1" bodyfile="dbus/dbus-message.c" bodystart="3450" bodyend="3462"/>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" compoundref="dbus-protocol_8h" startline="288">DBUS_HEADER_FIELD_DESTINATION</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4378" endline="4393">dbus_connection_get_dispatch_status</referencedby>
        <referencedby refid="group__DBusMessage_1ga017cb8d960d4c360cb6b30ded5292509" compoundref="dbus-message_8c" startline="3690" endline="3707">dbus_message_has_destination</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaa2170744c2c19217d9df02551f16bc92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_set_sender</definition>
        <argsstring>(DBusMessage *message, const char *sender)</argsstring>
        <name>dbus_message_set_sender</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sender</declname>
        </param>
        <briefdescription>
<para>Sets the message sender. </para>        </briefdescription>
        <detaileddescription>
<para>The sender must be a valid bus name as defined in the D-Bus specification.</para><para>Usually you don&apos;t want to call this. The message bus daemon will call it to set the origin of each message. If you aren&apos;t implementing a message bus daemon you shouldn&apos;t need to set the sender.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sender</parametername>
</parameternamelist>
<parameterdescription>
<para>the sender or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> to unset </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3479" column="1" bodyfile="dbus/dbus-message.c" bodystart="3479" bodyend="3492"/>
        <references refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" compoundref="dbus-protocol_8h" startline="293">DBUS_HEADER_FIELD_SENDER</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_sender</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_sender</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the unique name of the connection which originated this message, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if unknown or inapplicable. </para>        </briefdescription>
        <detaileddescription>
<para>The sender is filled in by the message bus.</para><para>Note, the returned sender is always the unique bus name. Connections may own multiple other bus names, but those are not found in the sender field.</para><para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the unique name of the sender or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3510" column="1" bodyfile="dbus/dbus-message.c" bodystart="3510" bodyend="3522"/>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" compoundref="dbus-protocol_8h" startline="293">DBUS_HEADER_FIELD_SENDER</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusMessage_1ga332fb0c71efcd1e9ef43ebdf2a25350c" compoundref="dbus-message_8c" startline="3725" endline="3742">dbus_message_has_sender</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>DBUS_EXPORT const char * dbus_message_get_signature</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_signature</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Gets the type signature of the message, i.e. </para>        </briefdescription>
        <detaileddescription>
<para>the arguments in the message payload. The signature includes only &quot;in&quot; arguments for <ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref> and only &quot;out&quot; arguments for <ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref>, so is slightly different from what you might expect (that is, it does not include the signature of the entire C++-style method).</para><para>The signature is a string made up of type codes such as <ref refid="group__DBusProtocol_1ga5943b497db2e1dec04fae60584a294bb" kindref="member">DBUS_TYPE_INT32</ref>. The string is terminated with nul (nul is also the value of <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>).</para><para>The returned string becomes invalid if the message is modified, since it points into the wire-marshaled message data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type signature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3543" column="1" bodyfile="dbus/dbus-message.c" bodystart="3543" bodyend="3553"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" compoundref="dbus-message_8c" startline="3227" endline="3239">dbus_message_get_interface</references>
        <references refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" compoundref="dbus-message_8c" startline="3313" endline="3325">dbus_message_get_member</references>
        <references refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" compoundref="dbus-message_8c" startline="1722" endline="1727">dbus_message_get_type</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
        <referencedby refid="group__DBusMessage_1ga8d563a936b6147f12dce7f24df3557b7" compoundref="dbus-message_8c" startline="3754" endline="3771">dbus_message_has_signature</referencedby>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga02209e9b3e1603808a593bf30b4e2e3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_message_has_type_interface_member</definition>
        <argsstring>(DBusMessage *message, int type, const char *iface, const char *member)</argsstring>
        <name>_dbus_message_has_type_interface_member</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>member</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3556" column="1" bodyfile="dbus/dbus-message.c" bodystart="3556" bodyend="3585"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gad8bd4730941af47d8d0f9c9b00562a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_is_method_call</definition>
        <argsstring>(DBusMessage *message, const char *iface, const char *method)</argsstring>
        <name>dbus_message_is_method_call</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>Checks whether the message is a method call with the given interface and member fields. </para>        </briefdescription>
        <detaileddescription>
<para>If the message is not <ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>, or has a different interface or member field, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>. If the interface field is missing, then it will be assumed equal to the provided interface. The D-Bus protocol allows method callers to leave out the interface name.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message is the specified method call </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3602" column="1" bodyfile="dbus/dbus-message.c" bodystart="3602" bodyend="3616"/>
        <references refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" compoundref="dbus-protocol_8h" startline="234">DBUS_MESSAGE_TYPE_METHOD_CALL</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusObjectTree_1ga1c51e43233ce0f3855c128f2555317eb" compoundref="dbus-object-tree_8c" startline="718" endline="724">_dbus_object_tree_free_all_unlocked</referencedby>
        <referencedby refid="group__DBusConnection_1ga893d18d8b36ffb371f16d13645071289" compoundref="dbus-connection_8c" startline="4378" endline="4393">dbus_connection_get_dispatch_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaed0e32329f142cc246662227c81d5d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_is_signal</definition>
        <argsstring>(DBusMessage *message, const char *iface, const char *signal_name)</argsstring>
        <name>dbus_message_is_signal</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>iface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>signal_name</declname>
        </param>
        <briefdescription>
<para>Checks whether the message is a signal with the given interface and member fields. </para>        </briefdescription>
        <detaileddescription>
<para>If the message is not <ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>, or has a different interface or member field, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iface</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message is the specified signal </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3630" column="1" bodyfile="dbus/dbus-message.c" bodystart="3630" bodyend="3644"/>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusConnection_1ga371163b4955a6e0bf0f1f70f38390c14" compoundref="dbus-connection_8c" startline="3801" endline="3807">dbus_connection_read_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga70ef9d7fad409666a0b5f3a8d4f0dd92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_is_error</definition>
        <argsstring>(DBusMessage *message, const char *error_name)</argsstring>
        <name>dbus_message_is_error</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_name</declname>
        </param>
        <briefdescription>
<para>Checks whether the message is an error reply with the given error name. </para>        </briefdescription>
        <detaileddescription>
<para>If the message is not <ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>, or has a different name, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message is the specified error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3657" column="1" bodyfile="dbus/dbus-message.c" bodystart="3657" bodyend="3677"/>
        <references refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" compoundref="dbus-message_8c" startline="3397" endline="3409">dbus_message_get_error_name</references>
        <references refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" compoundref="dbus-message_8c" startline="1722" endline="1727">dbus_message_get_type</references>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga017cb8d960d4c360cb6b30ded5292509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_has_destination</definition>
        <argsstring>(DBusMessage *message, const char *name)</argsstring>
        <name>dbus_message_has_destination</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks whether the message was sent to the given name. </para>        </briefdescription>
        <detaileddescription>
<para>If the message has no destination specified or has a different destination, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message has the given destination name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3690" column="1" bodyfile="dbus/dbus-message.c" bodystart="3690" bodyend="3707"/>
        <references refid="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" compoundref="dbus-message_8c" startline="3450" endline="3462">dbus_message_get_destination</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga332fb0c71efcd1e9ef43ebdf2a25350c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_has_sender</definition>
        <argsstring>(DBusMessage *message, const char *name)</argsstring>
        <name>dbus_message_has_sender</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks whether the message has the given unique name as its sender. </para>        </briefdescription>
        <detaileddescription>
<para>If the message has no sender specified or has a different sender, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>. Note that a peer application will always have the unique name of the connection as the sender. So you can&apos;t use this function to see whether a sender owned a well-known name.</para><para>Messages from the bus itself will have <ref refid="group__DBusShared_1ga9e017e829e575bdc5c554fd4d07d7355" kindref="member">DBUS_SERVICE_DBUS</ref> as the sender.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name to check (must not be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message has the given sender </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3725" column="1" bodyfile="dbus/dbus-message.c" bodystart="3725" bodyend="3742"/>
        <references refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" compoundref="dbus-message_8c" startline="3510" endline="3522">dbus_message_get_sender</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga8d563a936b6147f12dce7f24df3557b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_has_signature</definition>
        <argsstring>(DBusMessage *message, const char *signature)</argsstring>
        <name>dbus_message_has_signature</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
<para>Checks whether the message has the given signature; see <ref refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" kindref="member">dbus_message_get_signature()</ref> for more details on what the signature looks like. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>typecode array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if message has the given signature </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3754" column="1" bodyfile="dbus/dbus-message.c" bodystart="3754" bodyend="3771"/>
        <references refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" compoundref="dbus-message_8c" startline="3543" endline="3553">dbus_message_get_signature</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1gaba5e49e956e6bbd1f857ffd21c289276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_set_error_from_message</definition>
        <argsstring>(DBusError *error, DBusMessage *message)</argsstring>
        <name>dbus_set_error_from_message</name>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Sets a <ref refid="structDBusError" kindref="compound">DBusError</ref> based on the contents of the given message. </para>        </briefdescription>
        <detaileddescription>
<para>The error is only set if the message is an error message, as in <ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>. The name of the error is set to the name of the message, and the error message is set to the first argument if the argument exists and is a string.</para><para>The return value indicates whether the error was set (the error is set if and only if the message is an error message). So you can check for an error reply and convert it to <ref refid="structDBusError" kindref="compound">DBusError</ref> in one go: <programlisting><codeline><highlight class="normal">if<sp/>(dbus_set_error_from_message<sp/>(error,<sp/>reply))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>error;</highlight></codeline>
<codeline><highlight class="normal">else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>process<sp/>reply;</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the error to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to set it from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message had type <ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3796" column="1" bodyfile="dbus/dbus-message.c" bodystart="3796" bodyend="3816"/>
        <references refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" compoundref="dbus-message_8c" startline="1980" endline="1996">dbus_message_get_args</references>
        <references refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" compoundref="dbus-message_8c" startline="3397" endline="3409">dbus_message_get_error_name</references>
        <references refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" compoundref="dbus-message_8c" startline="1722" endline="1727">dbus_message_get_type</references>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusBus_1ga18314500e7f6890a79bddbeace5df5f9" compoundref="dbus-bus_8c" startline="948" endline="1007">dbus_bus_get_id</referencedby>
        <referencedby refid="group__DBusBus_1ga24d782c710f3d82caf1b1ed582dcf474" compoundref="dbus-bus_8c" startline="865" endline="927">dbus_bus_get_unix_user</referencedby>
        <referencedby refid="group__DBusBus_1ga0c21cf74d05c0bd8003846b56a588a4b" compoundref="dbus-bus_8c" startline="646" endline="728">dbus_bus_register</referencedby>
        <referencedby refid="group__DBusBus_1gaa4aa5ebe51cdbe8c0651609fc72e841a" compoundref="dbus-bus_8c" startline="1198" endline="1260">dbus_bus_release_name</referencedby>
        <referencedby refid="group__DBusBus_1ga8a9024c78c4ea89b6271f19dbc7861b2" compoundref="dbus-bus_8c" startline="1112" endline="1176">dbus_bus_request_name</referencedby>
        <referencedby refid="group__DBusBus_1ga81d303bf29d7c97ad4690ce35071b090" compoundref="dbus-bus_8c" startline="1356" endline="1409">dbus_bus_start_service_by_name</referencedby>
        <referencedby refid="group__DBusConnection_1ga8d6431f17a9e53c9446d87c2ba8409f0" compoundref="dbus-connection_8c" startline="3535" endline="3592">dbus_connection_send_with_reply_and_block</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessage_1ga7436b74471eb3642f81fd456f8f2b69c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>DBUS_EXPORT dbus_bool_t dbus_message_contains_unix_fds</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_contains_unix_fds</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Checks whether a message contains unix fds. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the message contains unix fds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3825" column="1" bodyfile="dbus/dbus-message.c" bodystart="3825" bodyend="3834"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga66f1c10cf909ba09ed732bc125ff8671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
        <definition>DBusMessageLoader* _dbus_message_loader_new</definition>
        <argsstring>(void)</argsstring>
        <name>_dbus_message_loader_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Creates a new message loader. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if memory can&apos;t be allocated.</para><para><simplesect kind="return"><para>new loader, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3863" column="1" bodyfile="dbus/dbus-message.c" bodystart="3863" bodyend="3902"/>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" compoundref="dbus-message-private_8h" startline="73">DBusMessageLoader::corrupted</references>
        <references refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" compoundref="dbus-message-private_8h" startline="71">DBusMessageLoader::corruption_reason</references>
        <references refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" compoundref="dbus-message-private_8h" startline="64">DBusMessageLoader::data</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" compoundref="dbus-protocol_8h" startline="210">DBUS_MAXIMUM_MESSAGE_LENGTH</references>
        <references refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" compoundref="dbus-memory_8h" startline="59">dbus_new0</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMessageInternals_1gacbe0bfe7a9551ab0489a0ec9aba6e94e" compoundref="dbus-message_8c" startline="3854">INITIAL_LOADER_DATA_LEN</references>
        <references refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" compoundref="dbus-message-private_8h" startline="68">DBusMessageLoader::max_message_size</references>
        <references refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" compoundref="dbus-message-private_8h" startline="69">DBusMessageLoader::max_message_unix_fds</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" compoundref="dbus-message-private_8h" startline="62">DBusMessageLoader::refcount</references>
        <referencedby refid="group__DBusTransport_1gaa5ece78ea671fe9d9ed17fc6920c9d09" compoundref="dbus-transport_8c" startline="102" endline="207">_dbus_transport_init_base</referencedby>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gad39efb9ff20c7538f12e164a6920edc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
        <definition>DBusMessageLoader* _dbus_message_loader_ref</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_ref</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Increments the reference count of the loader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the loader </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3911" column="1" bodyfile="dbus/dbus-message.c" bodystart="3911" bodyend="3916"/>
        <references refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" compoundref="dbus-message-private_8h" startline="62">DBusMessageLoader::refcount</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_unref</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_unref</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Decrements the reference count of the loader and finalizes the loader when the count reaches zero. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3925" column="1" bodyfile="dbus/dbus-message.c" bodystart="3925" bodyend="3941"/>
        <references refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" compoundref="dbus-list_8c" startline="542" endline="557">_dbus_list_clear</references>
        <references refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" compoundref="dbus-list_8c" startline="759" endline="774">_dbus_list_foreach</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" compoundref="dbus-message-private_8h" startline="64">DBusMessageLoader::data</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" compoundref="dbus-message-private_8h" startline="62">DBusMessageLoader::refcount</references>
        <referencedby refid="group__DBusTransport_1gaf27a2aceb062921f3915acb1491a646a" compoundref="dbus-transport_8c" startline="216" endline="236">_dbus_transport_finalize_base</referencedby>
        <referencedby refid="group__DBusTransport_1gaa5ece78ea671fe9d9ed17fc6920c9d09" compoundref="dbus-transport_8c" startline="102" endline="207">_dbus_transport_init_base</referencedby>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_get_buffer</definition>
        <argsstring>(DBusMessageLoader *loader, DBusString **buffer)</argsstring>
        <name>_dbus_message_loader_get_buffer</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Gets the buffer to use for reading data from the network. </para>        </briefdescription>
        <detaileddescription>
<para>Network data is read directly into an allocated buffer, which is then used in the <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, to avoid as many extra memcpy&apos;s as possible. The buffer must always be returned immediately using <ref refid="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" kindref="member">_dbus_message_loader_return_buffer()</ref>, even if no bytes are successfully read.</para><para><xrefsect id="todo_1_todo000040"><xreftitle>Todo</xreftitle><xrefdescription><para>this function can be a lot more clever. For example it can probably always return a buffer size to read exactly the body of the next message, thus avoiding any memory wastage or reallocs.</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000041"><xreftitle>Todo</xreftitle><xrefdescription><para>we need to enforce a max length on strings in header fields.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the message loader. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3962" column="1" bodyfile="dbus/dbus-message.c" bodystart="3962" bodyend="3970"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusMessageLoader_1a7fe926ecd87e9ddb37e7481195bc3d67" compoundref="dbus-message-private_8h" startline="75">DBusMessageLoader::buffer_outstanding</references>
        <references refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" compoundref="dbus-message-private_8h" startline="64">DBusMessageLoader::data</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusTransport_1gac5e6d7a01debcf852b8d5a2fbc666fde" compoundref="dbus-transport_8c" startline="984" endline="1006">_dbus_transport_do_iteration</referencedby>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_return_buffer</definition>
        <argsstring>(DBusMessageLoader *loader, DBusString *buffer)</argsstring>
        <name>_dbus_message_loader_return_buffer</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type><ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Returns a buffer obtained from <ref refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" kindref="member">_dbus_message_loader_get_buffer()</ref>, indicating to the loader how many bytes of the buffer were filled in. </para>        </briefdescription>
        <detaileddescription>
<para>This function must always be called, even if no bytes were successfully read.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="3982" column="1" bodyfile="dbus/dbus-message.c" bodystart="3982" bodyend="3989"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusMessageLoader_1a7fe926ecd87e9ddb37e7481195bc3d67" compoundref="dbus-message-private_8h" startline="75">DBusMessageLoader::buffer_outstanding</references>
        <references refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" compoundref="dbus-message-private_8h" startline="64">DBusMessageLoader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <referencedby refid="group__DBusTransport_1gac5e6d7a01debcf852b8d5a2fbc666fde" compoundref="dbus-transport_8c" startline="984" endline="1006">_dbus_transport_do_iteration</referencedby>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga4ed7327f9dee98711ebd7c9e5b74dec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_message_loader_get_unix_fds</definition>
        <argsstring>(DBusMessageLoader *loader, int **fds, unsigned *max_n_fds)</argsstring>
        <name>_dbus_message_loader_get_unix_fds</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>max_n_fds</declname>
        </param>
        <briefdescription>
<para>Gets the buffer to use for reading unix fds from the network. </para>        </briefdescription>
        <detaileddescription>
<para>This works similar to <ref refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" kindref="member">_dbus_message_loader_get_buffer()</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the message loader. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fds</parametername>
</parameternamelist>
<parameterdescription>
<para>the array to read fds into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_n_fds</parametername>
</parameternamelist>
<parameterdescription>
<para>how many fds to read at most </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE on success, FALSE on OOM </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4002" column="1" bodyfile="dbus/dbus-message.c" bodystart="4002" bodyend="4038"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" compoundref="dbus-memory_8c" startline="601" endline="692">dbus_realloc</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" compoundref="dbus-message-private_8h" startline="69">DBusMessageLoader::max_message_unix_fds</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_return_unix_fds</definition>
        <argsstring>(DBusMessageLoader *loader, int *fds, unsigned n_fds)</argsstring>
        <name>_dbus_message_loader_return_unix_fds</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fds</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n_fds</declname>
        </param>
        <briefdescription>
<para>Returns a buffer obtained from <ref refid="group__DBusMessageInternals_1ga4ed7327f9dee98711ebd7c9e5b74dec0" kindref="member">_dbus_message_loader_get_unix_fds()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This works similar to <ref refid="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" kindref="member">_dbus_message_loader_return_buffer()</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the message loader. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fds</parametername>
</parameternamelist>
<parameterdescription>
<para>the array fds were read into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_fds</parametername>
</parameternamelist>
<parameterdescription>
<para>how many fds were read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4051" column="1" bodyfile="dbus/dbus-message.c" bodystart="4051" bodyend="4068"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</references>
        <references refid="group__DBusList_1gad99045e79db46159babe69718f343053" compoundref="dbus-list_8c" startline="270" endline="280">_dbus_list_append</references>
        <references refid="group__DBusList_1ga5929ad5253d2f538158e513e9df3002b" compoundref="dbus-list_8c" startline="472" endline="488">_dbus_list_find_last</references>
        <references refid="group__DBusList_1gad93f1fc853914144e94fc7a7dc0945aa" compoundref="dbus-list_8c" startline="446" endline="459">_dbus_list_remove_last</references>
        <references refid="group__DBusInternalsUtils_1gaad95864dca5140b730bc143cb2d1b024" compoundref="dbus-internals_8c" startline="555" endline="567">_dbus_memdup</references>
        <references refid="group__DBusString_1gac49ec5782ca606029c096124b5e43ffc" compoundref="dbus-string_8c" startline="389" endline="395">_dbus_string_compact</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" compoundref="dbus-marshal-validate_8c" startline="703" endline="747">_dbus_validate_body_with_reason</references>
        <references refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" compoundref="dbus-marshal-basic_8c" startline="1360" endline="1388">_dbus_verbose_bytes_of_string</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" compoundref="dbus-message-private_8h" startline="73">DBusMessageLoader::corrupted</references>
        <references refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" compoundref="dbus-message-private_8h" startline="71">DBusMessageLoader::corruption_reason</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" compoundref="dbus-message-private_8h" startline="64">DBusMessageLoader::data</references>
        <references refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" compoundref="dbus-memory_8c" startline="701" endline="740">dbus_free</references>
        <references refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" compoundref="dbus-protocol_8h" startline="302">DBUS_HEADER_FIELD_UNIX_FDS</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" compoundref="dbus-marshal-validate_8h" startline="52">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga2eda143c3757597dcf96a7d44f7c69f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t load_message</definition>
        <argsstring>(DBusMessageLoader *loader, DBusMessage *message, int byte_order, int fields_array_len, int header_len, int body_len)</argsstring>
        <name>load_message</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fields_array_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>header_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>body_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4097" column="1" bodyfile="dbus/dbus-message.c" bodystart="4097" bodyend="4285"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_message_loader_queue_messages</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_queue_messages</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Converts buffered data into messages, if we have enough data. </para>        </briefdescription>
        <detaileddescription>
<para>If we don&apos;t have enough data, does nothing.</para><para><xrefsect id="todo_1_todo000042"><xreftitle>Todo</xreftitle><xrefdescription><para>we need to check that the proper named header fields exist for each message type.</para></xrefdescription></xrefsect></para><para><xrefsect id="todo_1_todo000043"><xreftitle>Todo</xreftitle><xrefdescription><para>If a message has unknown type, we should probably eat it right here rather than passing it out to applications. However it&apos;s not an error to see messages of unknown type.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if we had enough memory to finish. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4302" column="1" bodyfile="dbus/dbus-message.c" bodystart="4302" bodyend="4355"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</references>
        <references refid="group__DBusList_1ga5929ad5253d2f538158e513e9df3002b" compoundref="dbus-list_8c" startline="472" endline="488">_dbus_list_find_last</references>
        <references refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" compoundref="dbus-message-private_8h" startline="73">DBusMessageLoader::corrupted</references>
        <references refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" compoundref="dbus-message-private_8h" startline="71">DBusMessageLoader::corruption_reason</references>
        <references refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" compoundref="dbus-message-private_8h" startline="64">DBusMessageLoader::data</references>
        <references refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" compoundref="dbus-message_8c" startline="1690" endline="1709">dbus_message_unref</references>
        <references refid="group__DBusProtocol_1gaf8c13dd883c21b5dea179d77d8ac12e3" compoundref="dbus-protocol_8h" startline="346">DBUS_MINIMUM_HEADER_SIZE</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" compoundref="dbus-message-private_8h" startline="68">DBusMessageLoader::max_message_size</references>
        <references refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" compoundref="dbus-message_8c" startline="128">DBusMessageRealIter::message</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusTransport_1ga32153a834758b5a88d7bde8f7a205c71" compoundref="dbus-transport_8c" startline="1101" endline="1129">_dbus_transport_get_dispatch_status</referencedby>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga66674354acdd09ca6e11d600b34bdd5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBusMessage* _dbus_message_loader_peek_message</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_peek_message</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Peeks at first loaded message, returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no messages have been queued. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next message, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4365" column="1" bodyfile="dbus/dbus-message.c" bodystart="4365" bodyend="4371"/>
        <references refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" compoundref="dbus-list_8h" startline="38">DBusList::data</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <referencedby refid="group__DBusTransport_1ga32153a834758b5a88d7bde8f7a205c71" compoundref="dbus-transport_8c" startline="1101" endline="1129">_dbus_transport_get_dispatch_status</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga9e5e75716d7263d9908d45a60b1b6bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBusMessage* _dbus_message_loader_pop_message</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_pop_message</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Pops a loaded message (passing ownership of the message to the caller). </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no messages have been queued.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next message, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4382" column="1" bodyfile="dbus/dbus-message.c" bodystart="4382" bodyend="4385"/>
        <references refid="group__DBusList_1gacb96c9d3e9a869e63b8db4f8913a5a60" compoundref="dbus-list_8c" startline="649" endline="662">_dbus_list_pop_first</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga6ec3c1ad57340f717a47d79092122d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusList" kindref="compound">DBusList</ref> *</type>
        <definition>DBusList* _dbus_message_loader_pop_message_link</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_pop_message_link</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Pops a loaded message inside a list link (passing ownership of the message and link to the caller). </para>        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if no messages have been loaded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the next message link, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if none. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4396" column="1" bodyfile="dbus/dbus-message.c" bodystart="4396" bodyend="4399"/>
        <references refid="group__DBusList_1gaab9a957eca9bf5466bbf377a23b4b25c" compoundref="dbus-list_8c" startline="628" endline="639">_dbus_list_pop_first_link</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <referencedby refid="group__DBusTransport_1ga4046f36ecbdb75219f2b667f92e75a2b" compoundref="dbus-transport_8c" startline="1140" endline="1190">_dbus_transport_queue_messages</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga71b290eb470a55217971fcd6851fc40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_putback_message_link</definition>
        <argsstring>(DBusMessageLoader *loader, DBusList *link)</argsstring>
        <name>_dbus_message_loader_putback_message_link</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type><ref refid="structDBusList" kindref="compound">DBusList</ref> *</type>
          <declname>link</declname>
        </param>
        <briefdescription>
<para>Returns a popped message link, used to undo a pop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>link</parametername>
</parameternamelist>
<parameterdescription>
<para>the link with a message in it </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4408" column="1" bodyfile="dbus/dbus-message.c" bodystart="4408" bodyend="4412"/>
        <references refid="group__DBusList_1gab3dd068e3bd8a319c0d12150785050a7" compoundref="dbus-list_8c" startline="333" endline="337">_dbus_list_prepend_link</references>
        <references refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" compoundref="dbus-message-private_8h" startline="66">DBusMessageLoader::messages</references>
        <referencedby refid="group__DBusTransport_1ga4046f36ecbdb75219f2b667f92e75a2b" compoundref="dbus-transport_8c" startline="1140" endline="1190">_dbus_transport_queue_messages</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga38da52ac9344b00df530098bdd9a3842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_message_loader_get_is_corrupted</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_get_is_corrupted</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Checks whether the loader is confused due to bad data. </para>        </briefdescription>
        <detaileddescription>
<para>If messages are received that are invalid, the loader gets confused and gives up permanently. This state is called &quot;corrupted.&quot;</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the loader is hosed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4424" column="1" bodyfile="dbus/dbus-message.c" bodystart="4424" bodyend="4429"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" compoundref="dbus-message-private_8h" startline="73">DBusMessageLoader::corrupted</references>
        <references refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" compoundref="dbus-message-private_8h" startline="71">DBusMessageLoader::corruption_reason</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <referencedby refid="group__DBusTransport_1ga4046f36ecbdb75219f2b667f92e75a2b" compoundref="dbus-transport_8c" startline="1140" endline="1190">_dbus_transport_queue_messages</referencedby>
        <referencedby refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" compoundref="dbus-message_8c" startline="4783" endline="4826">dbus_message_demarshal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gafb8c42ed5242274586607812ff6fba10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>DBusValidity _dbus_message_loader_get_corruption_reason</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_get_corruption_reason</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Checks what kind of bad data confused the loader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>why the loader is hosed, or DBUS_VALID if it isn&apos;t. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4438" column="1" bodyfile="dbus/dbus-message.c" bodystart="4438" bodyend="4444"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" compoundref="dbus-message-private_8h" startline="73">DBusMessageLoader::corrupted</references>
        <references refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" compoundref="dbus-message-private_8h" startline="71">DBusMessageLoader::corruption_reason</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga031623c6235f98801cab3e53f0a5f757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_set_max_message_size</definition>
        <argsstring>(DBusMessageLoader *loader, long size)</argsstring>
        <name>_dbus_message_loader_set_max_message_size</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type>long</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the maximum size message we allow. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the max message size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4453" column="1" bodyfile="dbus/dbus-message.c" bodystart="4453" bodyend="4463"/>
        <references refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" compoundref="dbus-protocol_8h" startline="210">DBUS_MAXIMUM_MESSAGE_LENGTH</references>
        <references refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" compoundref="dbus-message-private_8h" startline="68">DBusMessageLoader::max_message_size</references>
        <referencedby refid="group__DBusTransport_1ga03ea875260e71f59af708146cabf95ab" compoundref="dbus-transport_8c" startline="1199" endline="1203">_dbus_transport_set_max_message_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gadd76a4b7191465f2dcb8e6b56b717961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long _dbus_message_loader_get_max_message_size</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_get_max_message_size</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Gets the maximum allowed message size in bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4472" column="1" bodyfile="dbus/dbus-message.c" bodystart="4472" bodyend="4475"/>
        <references refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" compoundref="dbus-message-private_8h" startline="68">DBusMessageLoader::max_message_size</references>
        <referencedby refid="group__DBusTransport_1gae36d2a90bad6ef13c0379fa9864ff68e" compoundref="dbus-transport_8c" startline="1225" endline="1228">_dbus_transport_get_max_message_size</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gadd6c0fa721b4340df936363fbde912dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_set_max_message_unix_fds</definition>
        <argsstring>(DBusMessageLoader *loader, long n)</argsstring>
        <name>_dbus_message_loader_set_max_message_unix_fds</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Sets the maximum unix fds per message we allow. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the max number of unix fds in a message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4484" column="1" bodyfile="dbus/dbus-message.c" bodystart="4484" bodyend="4494"/>
        <references refid="group__DBusProtocol_1ga2735432928240c083c72a5f5d23ec6a1" compoundref="dbus-protocol_8h" startline="218">DBUS_MAXIMUM_MESSAGE_UNIX_FDS</references>
        <references refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" compoundref="dbus-message-private_8h" startline="69">DBusMessageLoader::max_message_unix_fds</references>
        <referencedby refid="group__DBusTransport_1gad005fffd646202e74a789765ae82a40f" compoundref="dbus-transport_8c" startline="1212" endline="1216">_dbus_transport_set_max_message_unix_fds</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gaf65867d15c7d8adb91f430c483c180be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long _dbus_message_loader_get_max_message_unix_fds</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_get_max_message_unix_fds</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Gets the maximum allowed number of unix fds per message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>max unix fds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4503" column="1" bodyfile="dbus/dbus-message.c" bodystart="4503" bodyend="4506"/>
        <references refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" compoundref="dbus-message-private_8h" startline="69">DBusMessageLoader::max_message_unix_fds</references>
        <referencedby refid="group__DBusTransport_1gaa28e8edd4d849108b158d95eb7da812d" compoundref="dbus-transport_8c" startline="1237" endline="1240">_dbus_transport_get_max_message_unix_fds</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga8e01aad6af940ec4051703f59330da37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_message_loader_get_pending_fds_count</definition>
        <argsstring>(DBusMessageLoader *loader)</argsstring>
        <name>_dbus_message_loader_get_pending_fds_count</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Return how many file descriptors are pending in the loader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4514" column="1" bodyfile="dbus/dbus-message.c" bodystart="4514" bodyend="4521"/>
        <referencedby refid="group__DBusTransport_1ga3545c064545957f73f583bf63d07c40c" compoundref="dbus-transport_8c" startline="1521" endline="1524">_dbus_transport_get_pending_fds_count</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga658a91d8efc59934016fae6905bfc4bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_message_loader_set_pending_fds_function</definition>
        <argsstring>(DBusMessageLoader *loader, void(*callback)(void *), void *data)</argsstring>
        <name>_dbus_message_loader_set_pending_fds_function</name>
        <param>
          <type><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Register a function to be called whenever the number of pending file descriptors in the loader change. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>the loader </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data for the callback </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4532" column="1" bodyfile="dbus/dbus-message.c" bodystart="4532" bodyend="4540"/>
        <references refid="group__DBusInternalsUtils_1gade571435b55fae64217f5142aa78ee8d" compoundref="dbus-internals_8h" startline="328">_DBUS_LOCK_NAME</references>
        <referencedby refid="group__DBusTransport_1gad6dccbcdc149e3305101db4b2ebae6d6" compoundref="dbus-transport_8c" startline="1534" endline="1540">_dbus_transport_set_pending_fds_function</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga537b3456202fdd9f305666504bde98fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_message_allocate_data_slot</definition>
        <argsstring>(dbus_int32_t *slot_p)</argsstring>
        <name>dbus_message_allocate_data_slot</name>
        <param>
          <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref> *</type>
          <declname>slot_p</declname>
        </param>
        <briefdescription>
<para>Allocates an integer ID to be used for storing application-specific data on any <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The allocated ID may then be used with <ref refid="group__DBusMessageInternals_1ga69d0bc701f9ca935e6de8a3f3e376c0a" kindref="member">dbus_message_set_data()</ref> and <ref refid="group__DBusMessageInternals_1ga62769bfaf8f1b2edc7922c579bc0649d" kindref="member">dbus_message_get_data()</ref>. The passed-in slot must be initialized to -1, and is filled in with the slot ID. If the passed-in slot is not -1, it&apos;s assumed to be already allocated, and its refcount is incremented.</para><para>The allocated slot is global, i.e. all <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> objects will have a slot with the given integer ID reserved.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_p</parametername>
</parameternamelist>
<parameterdescription>
<para>address of a global variable storing the slot </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> on failure (no memory) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4560" column="1" bodyfile="dbus/dbus-message.c" bodystart="4560" bodyend="4564"/>
        <references refid="group__DBusDataSlot_1gaf61f2bd0148bace4f67a2d6d97b26ea9" compoundref="dbus-dataslot_8c" startline="69" endline="140">_dbus_data_slot_allocator_alloc</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gac7a5ba135e1aec4ad8c7b43752af02e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dbus_message_free_data_slot</definition>
        <argsstring>(dbus_int32_t *slot_p)</argsstring>
        <name>dbus_message_free_data_slot</name>
        <param>
          <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref> *</type>
          <declname>slot_p</declname>
        </param>
        <briefdescription>
<para>Deallocates a global ID for message data slots. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusMessageInternals_1ga62769bfaf8f1b2edc7922c579bc0649d" kindref="member">dbus_message_get_data()</ref> and <ref refid="group__DBusMessageInternals_1ga69d0bc701f9ca935e6de8a3f3e376c0a" kindref="member">dbus_message_set_data()</ref> may no longer be used with this slot. Existing data stored on existing <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> objects will be freed when the message is finalized, but may not be retrieved (and may only be replaced if someone else reallocates the slot). When the refcount on the passed-in slot reaches 0, it is set to -1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot_p</parametername>
</parameternamelist>
<parameterdescription>
<para>address storing the slot to deallocate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4578" column="1" bodyfile="dbus/dbus-message.c" bodystart="4578" bodyend="4583"/>
        <references refid="group__DBusDataSlot_1ga059c50a24cd9fc984e918e6159841633" compoundref="dbus-dataslot_8c" startline="154" endline="190">_dbus_data_slot_allocator_free</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga69d0bc701f9ca935e6de8a3f3e376c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_message_set_data</definition>
        <argsstring>(DBusMessage *message, dbus_int32_t slot, void *data, DBusFreeFunction free_data_func)</argsstring>
        <name>dbus_message_set_data</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref></type>
          <declname>free_data_func</declname>
        </param>
        <briefdescription>
<para>Stores a pointer on a <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>, along with an optional function to be used for freeing the data when the data is set again, or when the message is finalized. </para>        </briefdescription>
        <detaileddescription>
<para>The slot number must have been allocated with <ref refid="group__DBusMessageInternals_1ga537b3456202fdd9f305666504bde98fb" kindref="member">dbus_message_allocate_data_slot()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to store </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free_data_func</parametername>
</parameternamelist>
<parameterdescription>
<para>finalizer function for the data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there was enough memory to store the data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4599" column="1" bodyfile="dbus/dbus-message.c" bodystart="4599" bodyend="4624"/>
        <references refid="group__DBusDataSlot_1gad2952f9f686d96e7114fc49ab7452e1a" compoundref="dbus-dataslot_8c" startline="221" endline="273">_dbus_data_slot_list_set</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" compoundref="dbus-message-private_8h" startline="118">DBusMessage::slot_list</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga62769bfaf8f1b2edc7922c579bc0649d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* dbus_message_get_data</definition>
        <argsstring>(DBusMessage *message, dbus_int32_t slot)</argsstring>
        <name>dbus_message_get_data</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Retrieves data previously set with <ref refid="group__DBusMessageInternals_1ga69d0bc701f9ca935e6de8a3f3e376c0a" kindref="member">dbus_message_set_data()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The slot must still be allocated (must not have been freed).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>the slot to get data from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the data, or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4635" column="1" bodyfile="dbus/dbus-message.c" bodystart="4635" bodyend="4647"/>
        <references refid="group__DBusDataSlot_1ga43f741229f0c38788442601e2750ec66" compoundref="dbus-dataslot_8c" startline="285" endline="308">_dbus_data_slot_list_get</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" compoundref="dbus-message-private_8h" startline="118">DBusMessage::slot_list</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga40412bdfc6ba9cf9e167db4c23df0a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dbus_message_type_from_string</definition>
        <argsstring>(const char *type_str)</argsstring>
        <name>dbus_message_type_from_string</name>
        <param>
          <type>const char *</type>
          <declname>type_str</declname>
        </param>
        <briefdescription>
<para>Utility function to convert a machine-readable (not translated) string into a D-Bus message type. </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">&quot;method_call&quot;<sp/><sp/><sp/><sp/>-&gt;<sp/>DBUS_MESSAGE_TYPE_METHOD_CALL</highlight></codeline>
<codeline><highlight class="normal">&quot;method_return&quot;<sp/><sp/>-&gt;<sp/>DBUS_MESSAGE_TYPE_METHOD_RETURN</highlight></codeline>
<codeline><highlight class="normal">&quot;signal&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>DBUS_MESSAGE_TYPE_SIGNAL</highlight></codeline>
<codeline><highlight class="normal">&quot;error&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>DBUS_MESSAGE_TYPE_ERROR</highlight></codeline>
<codeline><highlight class="normal">anything<sp/>else<sp/><sp/><sp/><sp/>-&gt;<sp/>DBUS_MESSAGE_TYPE_INVALID</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4663" column="1" bodyfile="dbus/dbus-message.c" bodystart="4663" bodyend="4675"/>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" compoundref="dbus-protocol_8h" startline="234">DBUS_MESSAGE_TYPE_METHOD_CALL</references>
        <references refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" compoundref="dbus-protocol_8h" startline="236">DBUS_MESSAGE_TYPE_METHOD_RETURN</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga75bcb613a291eb7e427f77f2f3635b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dbus_message_type_to_string</definition>
        <argsstring>(int type)</argsstring>
        <name>dbus_message_type_to_string</name>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Utility function to convert a D-Bus message type into a machine-readable string (not translated). </para>        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">DBUS_MESSAGE_TYPE_METHOD_CALL<sp/><sp/><sp/><sp/>-&gt;<sp/>&quot;method_call&quot;</highlight></codeline>
<codeline><highlight class="normal">DBUS_MESSAGE_TYPE_METHOD_RETURN<sp/><sp/>-&gt;<sp/>&quot;method_return&quot;</highlight></codeline>
<codeline><highlight class="normal">DBUS_MESSAGE_TYPE_SIGNAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>&quot;signal&quot;</highlight></codeline>
<codeline><highlight class="normal">DBUS_MESSAGE_TYPE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>&quot;error&quot;</highlight></codeline>
<codeline><highlight class="normal">DBUS_MESSAGE_TYPE_INVALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>&quot;invalid&quot;</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4691" column="1" bodyfile="dbus/dbus-message.c" bodystart="4691" bodyend="4706"/>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" compoundref="dbus-protocol_8h" startline="234">DBUS_MESSAGE_TYPE_METHOD_CALL</references>
        <references refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" compoundref="dbus-protocol_8h" startline="236">DBUS_MESSAGE_TYPE_METHOD_RETURN</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <referencedby refid="group__DBusConnectionInternals_1gadc46f7abfe925f9860fc8c64aeb29ad2" compoundref="dbus-connection_8c" startline="1948" endline="1955">_dbus_connection_close_possibly_shared</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gab93fd3666217ee339c4d2e8d4d33e63c" compoundref="dbus-connection_8c" startline="625" endline="667">_dbus_connection_message_sent_unlocked</referencedby>
        <referencedby refid="group__DBusConnectionInternals_1gac1b92eba0aeee294dc28fcc260c9b749" compoundref="dbus-connection_8c" startline="480" endline="534">_dbus_connection_queue_received_message_link</referencedby>
        <referencedby refid="group__DBusConnection_1ga66ba7df50d75f4bda6b6e942430b81c7" compoundref="dbus-connection_8c" startline="4549" endline="4862">dbus_connection_dispatch</referencedby>
        <referencedby refid="group__DBusConnection_1ga7125d747575b2f596aceaf7be53eae68" compoundref="dbus-connection_8c" startline="3935" endline="3967">dbus_connection_steal_borrowed_message</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gad85c737f9e7d03005d6028d6bbae7e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_message_marshal</definition>
        <argsstring>(DBusMessage *msg, char **marshalled_data_p, int *len_p)</argsstring>
        <name>dbus_message_marshal</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>marshalled_data_p</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_p</declname>
        </param>
        <briefdescription>
<para>Turn a <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> into the marshalled form as described in the D-Bus specification. </para>        </briefdescription>
        <detaileddescription>
<para>Generally, this function is only useful for encapsulating D-Bus messages in a different protocol.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>marshalled_data_p</parametername>
</parameternamelist>
<parameterdescription>
<para>the location to save the marshalled form to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_p</parametername>
</parameternamelist>
<parameterdescription>
<para>the location to save the length of the marshalled form to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if there was not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4721" column="1" bodyfile="dbus/dbus-message.c" bodystart="4721" bodyend="4768"/>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" compoundref="dbus-string_8c" startline="175" endline="178">_dbus_string_init</references>
        <references refid="group__DBusString_1ga556cc30c3ab032dbc63e217119f0d1f5" compoundref="dbus-string_8c" startline="641" endline="662">_dbus_string_steal_data</references>
        <references refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" compoundref="dbus-message-private_8h" startline="105">DBusMessage::body</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMessageInternals_1ga3ecc9c24381af05289161f477ad6a578" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga776fe8b5cd935d642875efa1d13a31b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
        <definition>DBusMessage* dbus_message_demarshal</definition>
        <argsstring>(const char *str, int len, DBusError *error)</argsstring>
        <name>dbus_message_demarshal</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="structDBusError" kindref="compound">DBusError</ref> *</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Demarshal a D-Bus message from the format described in the D-Bus specification. </para>        </briefdescription>
        <detaileddescription>
<para>Generally, this function is only useful for encapsulating D-Bus messages in a different protocol.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the marshalled <ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of str </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para>the location to save errors to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> if there was an error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4783" column="1" bodyfile="dbus/dbus-message.c" bodystart="4783" bodyend="4826"/>
        <references refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" compoundref="dbus-message_8c" startline="3962" endline="3970">_dbus_message_loader_get_buffer</references>
        <references refid="group__DBusMessageInternals_1ga38da52ac9344b00df530098bdd9a3842" compoundref="dbus-message_8c" startline="4424" endline="4429">_dbus_message_loader_get_is_corrupted</references>
        <references refid="group__DBusMessageInternals_1ga66f1c10cf909ba09ed732bc125ff8671" compoundref="dbus-message_8c" startline="3863" endline="3902">_dbus_message_loader_new</references>
        <references refid="group__DBusMessageInternals_1ga9e5e75716d7263d9908d45a60b1b6bdc" compoundref="dbus-message_8c" startline="4382" endline="4385">_dbus_message_loader_pop_message</references>
        <references refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" compoundref="dbus-message_8c" startline="4302" endline="4355">_dbus_message_loader_queue_messages</references>
        <references refid="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" compoundref="dbus-message_8c" startline="3982" endline="3989">_dbus_message_loader_return_buffer</references>
        <references refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" compoundref="dbus-message_8c" startline="3925" endline="3941">_dbus_message_loader_unref</references>
        <references refid="group__DBusString_1ga724656b7091b910965bd1af42d0b7bab" compoundref="dbus-string_8c" startline="1136" endline="1145">_dbus_string_append_len</references>
        <references refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" compoundref="dbus-message-private_8h" startline="71">DBusMessageLoader::corruption_reason</references>
        <references refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" compoundref="dbus-protocol_8h" startline="391">DBUS_ERROR_INVALID_ARGS</references>
        <references refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" compoundref="dbus-errors_8c" startline="354" endline="419">dbus_set_error</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gab0f8d8a640413e7c9b6c8f154acfbd1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dbus_message_demarshal_bytes_needed</definition>
        <argsstring>(const char *buf, int len)</argsstring>
        <name>dbus_message_demarshal_bytes_needed</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the number of bytes required to be in the buffer to demarshal a D-Bus message. </para>        </briefdescription>
        <detaileddescription>
<para>Generally, this function is only useful for encapsulating D-Bus messages in a different protocol.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>data to be marshalled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of <computeroutput>buf</computeroutput> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 if there was no valid data to be demarshalled, 0 if there wasn&apos;t enough data to determine how much should be demarshalled. Otherwise returns the number of bytes to be demarshalled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4841" column="1" bodyfile="dbus/dbus-message.c" bodystart="4841" bodyend="4877"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" compoundref="dbus-protocol_8h" startline="210">DBUS_MAXIMUM_MESSAGE_LENGTH</references>
        <references refid="group__DBusProtocol_1gaf8c13dd883c21b5dea179d77d8ac12e3" compoundref="dbus-protocol_8h" startline="346">DBUS_MINIMUM_HEADER_SIZE</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1ga8955cc5a3fcc905230b9afc05e4b1470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dbus_message_set_allow_interactive_authorization</definition>
        <argsstring>(DBusMessage *message, dbus_bool_t allow)</argsstring>
        <name>dbus_message_set_allow_interactive_authorization</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>allow</declname>
        </param>
        <briefdescription>
<para>Sets a flag indicating that the caller of the method is prepared to wait for interactive authorization to take place (for instance via Polkit) before the actual method is processed. </para>        </briefdescription>
        <detaileddescription>
<para>The flag is <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> by default; that is, by default the other end is expected to make any authorization decisions non-interactively and promptly. It may use the error <ref refid="group__DBusProtocol_1gaf5ed34ef6339d3903d0c30c4a8221877" kindref="member">DBUS_ERROR_INTERACTIVE_AUTHORIZATION_REQUIRED</ref> to signal that authorization failed, but could have succeeded if this flag had been used.</para><para>For messages whose type is not <ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>, this flag is meaningless and should not be set.</para><para>On the protocol level this toggles <ref refid="group__DBusProtocol_1ga9e3539506c57a085ce40ca4dc919015b" kindref="member">DBUS_HEADER_FLAG_ALLOW_INTERACTIVE_AUTHORIZATION</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>allow</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if interactive authorization is acceptable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4901" column="1" bodyfile="dbus/dbus-message.c" bodystart="4901" bodyend="4910"/>
        <references refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" compoundref="dbus-marshal-header_8c" startline="1457" endline="1469">_dbus_header_toggle_flag</references>
        <references refid="group__DBusProtocol_1ga9e3539506c57a085ce40ca4dc919015b" compoundref="dbus-protocol_8h" startline="261">DBUS_HEADER_FLAG_ALLOW_INTERACTIVE_AUTHORIZATION</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" compoundref="dbus-message-private_8h" startline="107">DBusMessage::locked</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group__DBusMessageInternals_1gafc4b23ac32a763afa783b2a07143731b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t dbus_message_get_allow_interactive_authorization</definition>
        <argsstring>(DBusMessage *message)</argsstring>
        <name>dbus_message_get_allow_interactive_authorization</name>
        <param>
          <type><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref> *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Returns whether the flag controlled by <ref refid="group__DBusMessageInternals_1ga8955cc5a3fcc905230b9afc05e4b1470" kindref="member">dbus_message_set_allow_interactive_authorization()</ref> has been set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-message.c" line="4919" column="1" bodyfile="dbus/dbus-message.c" bodystart="4919" bodyend="4925"/>
        <references refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" compoundref="dbus-marshal-header_8c" startline="1479" endline="1487">_dbus_header_get_flag</references>
        <references refid="group__DBusProtocol_1ga9e3539506c57a085ce40ca4dc919015b" compoundref="dbus-protocol_8h" startline="261">DBUS_HEADER_FLAG_ALLOW_INTERACTIVE_AUTHORIZATION</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" compoundref="dbus-message-private_8h" startline="103">DBusMessage::header</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-message.c<sp/><sp/>DBusMessage<sp/>object</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003,<sp/>2004,<sp/>2005<sp/><sp/>Red<sp/>Hat<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/><sp/>CodeFactory<sp/>AB</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-recursive.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-validate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-byteswap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-header.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-signature.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-message-private.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-object-tree.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-memory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-list.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-threads-internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps-unix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DBUS_TYPE_IS_STRINGLIKE(type)<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>(type<sp/>==<sp/>DBUS_TYPE_STRING<sp/>||<sp/>type<sp/>==<sp/>DBUS_TYPE_SIGNATURE<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/>type<sp/>==<sp/>DBUS_TYPE_OBJECT_PATH)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dbus_message_finalize<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor">#ifdef<sp/>DBUS_ENABLE_EMBEDDED_TESTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">_dbus_enable_message_cache<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enabled<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enabled<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/><ref refid="group__DBusSysdeps_1gab846071a4de54cb7e518654f9375313a" kindref="member">_dbus_getenv</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DBUS_MESSAGE_CACHE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&amp;&amp;<sp/>*s)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>==<sp/></highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enabled<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;DBUS_MESSAGE_CACHE<sp/>should<sp/>be<sp/>0<sp/>or<sp/>1<sp/>if<sp/>set,<sp/>not<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>enabled;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>constant<sp/>expression,<sp/>should<sp/>be<sp/>optimized<sp/>away<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>_dbus_enable_message_cache()<sp/>(TRUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_dbus_message_trace_ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">_dbus_message_trace_ref<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_refcount,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_refcount,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*why)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enabled<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>_dbus_trace_ref<sp/>(</highlight><highlight class="stringliteral">&quot;DBusMessage&quot;</highlight><highlight class="normal">,<sp/>message,<sp/>old_refcount,<sp/>new_refcount,<sp/>why,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DBUS_MESSAGE_TRACE&quot;</highlight><highlight class="normal">,<sp/>&amp;enabled);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Not<sp/>thread<sp/>locked,<sp/>but<sp/>strictly<sp/>const/read-only<sp/>so<sp/>should<sp/>be<sp/>OK</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga47a86f36abae39fe43916681d3f16330" kindref="member">_DBUS_STRING_DEFINE_STATIC</ref>(_dbus_empty_signature_str,<sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>these<sp/>have<sp/>wacky<sp/>values<sp/>to<sp/>help<sp/>trap<sp/>uninitialized<sp/>iterators;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>but<sp/>has<sp/>to<sp/>fit<sp/>in<sp/>3<sp/>bits</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>DBUS_MESSAGE_ITER_TYPE_READER<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>DBUS_MESSAGE_ITER_TYPE_WRITER<sp/>=<sp/>7</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__DBusMessageInternals_1ga84c2bf86d0ab364b236814eafb85e512" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="structDBusMessageRealIter" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128" refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;<sp/></highlight></codeline>
<codeline lineno="129" refid="structDBusMessageRealIter_1ac10324f74497a5c2288eef8fbcd3ae42" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><ref refid="structDBusMessageRealIter_1ac10324f74497a5c2288eef8fbcd3ae42" kindref="member">changed_stamp</ref><sp/>:<sp/><ref refid="group__DBusMessageInternals_1ga660989658f3be5e403da430f63afd0b7" kindref="member">CHANGED_STAMP_BITS</ref>;<sp/></highlight></codeline>
<codeline lineno="130" refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>:<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>:<sp/>8;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="134" refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/><ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>;<sp/></highlight></codeline>
<codeline lineno="135" refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>;<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>;<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">get_const_signature<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>**type_str_p,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*type_pos_p)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" kindref="member">_dbus_header_get_field_raw</ref><sp/>(header,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_str_p,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos_p))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*type_pos_p<sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>the<sp/>signature<sp/>length<sp/>which<sp/>is<sp/>1<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*type_str_p<sp/>=<sp/>&amp;_dbus_empty_signature_str;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*type_pos_p<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">_dbus_message_byteswap<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_pos;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte_order;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>byte_order<sp/>=<sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte_order<sp/>==<sp/>DBUS_COMPILER_BYTE_ORDER)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Swapping<sp/>message<sp/>into<sp/>compiler<sp/>byte<sp/>order\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>get_const_signature<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>&amp;type_str,<sp/>&amp;type_pos);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" kindref="member">_dbus_marshal_byteswap</ref><sp/>(type_str,<sp/>type_pos,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" kindref="member">_dbus_header_byteswap</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>DBUS_COMPILER_BYTE_ORDER);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>)<sp/>==</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="group__DBusMessageInternals_1ga1dfae386ef0d4d808584abeafc44e8ca" refkind="member"><highlight class="preprocessor">#define<sp/>ensure_byte_order(message)<sp/>_dbus_message_byteswap<sp/>(message)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="group__DBusMessageInternals_1ga617811b117ac5eb31151ffb7dabea7a8" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga617811b117ac5eb31151ffb7dabea7a8" kindref="member">_dbus_message_get_network_data</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/>**header,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/>**body)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>*header<sp/>=<sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>.<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>*body<sp/>=<sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="group__DBusMessageInternals_1ga577e9d5224c56b9cf2ca2691be2e838c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DBusMessageInternals_1ga577e9d5224c56b9cf2ca2691be2e838c" kindref="member">_dbus_message_get_unix_fds</ref>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>**fds,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*n_fds)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>*fds<sp/>=<sp/>message-&gt;unix_fds;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>*n_fds<sp/>=<sp/>message-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>*fds<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>*n_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="254" refid="group__DBusMessage_1gaa35c17742d8fe091aa039cbd29961c52" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga3dd30a62c63eb9972cc0c564f2a89c3b" kindref="member">dbus_message_set_serial</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><sp/>serial)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" kindref="member">_dbus_header_set_serial</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>serial);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="group__DBusMessageInternals_1gafaed2adc00b2ec54b2827ecb778bbe7e" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gafaed2adc00b2ec54b2827ecb778bbe7e" kindref="member">_dbus_message_add_counter_link</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/>*link)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>now<sp/>we<sp/>don&apos;t<sp/>recompute<sp/>the<sp/>delta<sp/>when<sp/>message</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/>*<sp/>size<sp/>changes,<sp/>and<sp/>that&apos;s<sp/>OK<sp/>for<sp/>current<sp/>purposes</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/><sp/><sp/>*<sp/>I<sp/>think,<sp/>but<sp/>could<sp/>be<sp/>important<sp/>to<sp/>change<sp/>later.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Do<sp/>recompute<sp/>it<sp/>whenever<sp/>there<sp/>are<sp/>no<sp/>outstanding<sp/>counters,</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/>*<sp/>since<sp/>it&apos;s<sp/>basically<sp/>free.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" kindref="member">size_counter_delta</ref><sp/>=</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>.<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>+</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;unix_fd_counter_delta<sp/>=<sp/>message-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;message<sp/>has<sp/>size<sp/>%ld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" kindref="member">size_counter_delta</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1ga20e549175e2b8f450f907592dc39d953" kindref="member">_dbus_list_append_link</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>,<sp/>link);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1gae37410c196947675c2a222a7979e9dee" kindref="member">_dbus_counter_adjust_size</ref><sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>,<sp/>message-&gt;<ref refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" kindref="member">size_counter_delta</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1ga7d9411d27b337289ab5648beb148cde6" kindref="member">_dbus_counter_adjust_unix_fd</ref><sp/>(link-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>,<sp/>message-&gt;unix_fd_counter_delta);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="329" refid="group__DBusMessageInternals_1gad009d79879d654a009c83627726435d8" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gad009d79879d654a009c83627726435d8" kindref="member">_dbus_message_add_counter</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusCounter" kindref="compound">DBusCounter</ref><sp/>*counter)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>link<sp/>=<sp/><ref refid="group__DBusList_1gac20b9981531cef590d49a59240344cd8" kindref="member">_dbus_list_alloc_link</ref><sp/>(counter);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1gae93240c77bfb66642453518c9bb90bc4" kindref="member">_dbus_counter_ref</ref><sp/>(counter);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1gafaed2adc00b2ec54b2827ecb778bbe7e" kindref="member">_dbus_message_add_counter_link</ref><sp/>(message,<sp/>link);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="group__DBusMessageInternals_1gac84be3fd98e49409c1245a87c7de6f7d" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gac84be3fd98e49409c1245a87c7de6f7d" kindref="member">_dbus_message_remove_counter</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusCounter" kindref="compound">DBusCounter</ref><sp/><sp/>*counter)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/>*link;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>link<sp/>=<sp/><ref refid="group__DBusList_1ga5929ad5253d2f538158e513e9df3002b" kindref="member">_dbus_list_find_last</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(link<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1ga40abea762d9cb44e5ec6b31b1769dc2e" kindref="member">_dbus_list_remove_link</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>,<sp/>link);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1gae37410c196947675c2a222a7979e9dee" kindref="member">_dbus_counter_adjust_size</ref><sp/>(counter,<sp/>-<sp/>message-&gt;<ref refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" kindref="member">size_counter_delta</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1ga7d9411d27b337289ab5648beb148cde6" kindref="member">_dbus_counter_adjust_unix_fd</ref><sp/>(counter,<sp/>-<sp/>message-&gt;unix_fd_counter_delta);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1gab8c0e970e0c3b4696ba06723639d8239" kindref="member">_dbus_counter_notify</ref><sp/>(counter);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1ga48d9b53d1a395ab3c4f1846ca569ef3f" kindref="member">_dbus_counter_unref</ref><sp/>(counter);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga3ecc9c24381af05289161f477ad6a578" kindref="member">dbus_message_lock</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" kindref="member">_dbus_header_update_lengths</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>));</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>have<sp/>a<sp/>signature<sp/>if<sp/>you<sp/>have<sp/>a<sp/>body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" kindref="member">dbus_message_get_signature</ref><sp/>(message)<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="400"><highlight class="normal">set_or_delete_string_field<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typecode,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" kindref="member">_dbus_header_delete_field</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>field);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" kindref="member">_dbus_header_set_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typecode,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;value);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Probably<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>use<sp/>this<sp/>*/</highlight></codeline>
<codeline lineno="439"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="440"><highlight class="normal">_dbus_message_set_signature<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*signature)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(signature<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_signature<sp/>(signature));</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>delete<sp/>the<sp/>signature<sp/>if<sp/>you<sp/>have<sp/>a<sp/>message<sp/>body<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signature<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref>,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>signature);</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Message<sp/>Cache</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>We<sp/>cache<sp/>some<sp/>DBusMessage<sp/>to<sp/>reduce<sp/>the<sp/>overhead<sp/>of<sp/>allocating</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>them.<sp/><sp/>In<sp/>my<sp/>profiling<sp/>this<sp/>consistently<sp/>made<sp/>about<sp/>an<sp/>8%</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/>difference.<sp/><sp/>It<sp/>avoids<sp/>the<sp/>malloc<sp/>for<sp/>the<sp/>message,<sp/>the<sp/>malloc<sp/>for</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>the<sp/>slot<sp/>list,<sp/>the<sp/>malloc<sp/>for<sp/>the<sp/>header<sp/>string<sp/>and<sp/>body<sp/>string,</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/>and<sp/>the<sp/>associated<sp/>free()<sp/>calls.<sp/>It<sp/>does<sp/>introduce<sp/>another<sp/>global</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*<sp/>lock<sp/>which<sp/>could<sp/>be<sp/>a<sp/>performance<sp/>issue<sp/>in<sp/>certain<sp/>cases.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>echo<sp/>client/server<sp/>the<sp/>round<sp/>trip<sp/>time<sp/>goes<sp/>from<sp/>around</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>.000077<sp/>to<sp/>.000069<sp/>with<sp/>the<sp/>message<sp/>cache<sp/>on<sp/>my<sp/>laptop.<sp/>The<sp/>sysprof</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>change<sp/>is<sp/>as<sp/>follows<sp/>(numbers<sp/>are<sp/>cumulative<sp/>percentage):</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>message<sp/>cache<sp/>implemented<sp/>as<sp/>array<sp/>as<sp/>it<sp/>is<sp/>now<sp/>(0.000069<sp/>per):</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>new_empty_header<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.46</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>mutex_lock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.56<sp/><sp/><sp/><sp/>#<sp/>i.e.<sp/>_DBUS_LOCK(message_cache)</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>mutex_unlock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.25</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.41</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>unref<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.24</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>self<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.68</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>list_clear<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.43</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>mutex_lock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.33<sp/><sp/><sp/><sp/>#<sp/>i.e.<sp/>_DBUS_LOCK(message_cache)</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>mutex_unlock<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.25</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>message<sp/>cache<sp/>implemented<sp/>as<sp/>list<sp/>(0.000070<sp/>per<sp/>roundtrip):</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>new_empty_header<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.72</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>list_pop_first<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.88</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>unref<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3.3</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>list_prepend<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.63</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>without<sp/>cache<sp/>(0.000077<sp/>per<sp/>roundtrip):</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>new_empty_header<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6.7</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>string_init_preallocated<sp/>3.43</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_malloc<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.43</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>dbus_malloc0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2.59</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>unref<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4.02</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>string_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.82</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.63</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>dbus_free<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.71</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>implement<sp/>the<sp/>message_cache<sp/>with<sp/>a<sp/>list,<sp/>the<sp/>primary<sp/>reason</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>it&apos;s<sp/>slower<sp/>is<sp/>that<sp/>you<sp/>add<sp/>another<sp/>thread<sp/>lock<sp/>(on<sp/>the<sp/>DBusList</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>mempool).</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="group__DBusMessageInternals_1ga2c5c6aef45dd0b5cc10c800f986a7ce7" refkind="member"><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_SIZE_TO_CACHE<sp/>10<sp/>*<sp/>_DBUS_ONE_KILOBYTE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" refkind="member"><highlight class="preprocessor">#define<sp/>MAX_MESSAGE_CACHE_SIZE<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Protected<sp/>by<sp/>_DBUS_LOCK<sp/>(message_cache)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message_cache[<ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>];</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>message_cache_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>message_cache_shutdown_registered<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">dbus_message_cache_shutdown<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" kindref="member">_DBUS_LOCK</ref><sp/>(message_cache))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;we<sp/>would<sp/>have<sp/>initialized<sp/>global<sp/>locks<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;before<sp/>registering<sp/>a<sp/>shutdown<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message_cache[i])</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dbus_message_finalize<sp/>(message_cache[i]);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>message_cache_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>message_cache_shutdown_registered<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" kindref="member">_DBUS_UNLOCK</ref><sp/>(message_cache);</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="547"><highlight class="normal">dbus_message_get_cached<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" kindref="member">_DBUS_LOCK</ref><sp/>(message_cache))</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;d<sp/>have<sp/>initialized<sp/>global<sp/>locks<sp/>before<sp/>caching<sp/>anything,</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>there<sp/>can&apos;t<sp/>be<sp/>anything<sp/>in<sp/>the<sp/>cache<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message_cache_count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message_cache_count<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" kindref="member">_DBUS_UNLOCK</ref><sp/>(message_cache);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>not<sp/>necessarily<sp/>true<sp/>unless<sp/>count<sp/>&gt;<sp/>0,<sp/>and</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/>*<sp/>message_cache<sp/>is<sp/>uninitialized<sp/>until<sp/>the<sp/>shutdown<sp/>is</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/>*<sp/>registered</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message_cache_shutdown_registered);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message_cache[i])</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>message_cache[i];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message_cache[i]<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message_cache_count<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message_cache_count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(i<sp/>&lt;<sp/><ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member">_dbus_atomic_get</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref><sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" kindref="member">_DBUS_UNLOCK</ref><sp/>(message_cache);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">close_unix_fds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fds,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*n_fds)</highlight></codeline>
<codeline lineno="603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/>e;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*n_fds<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga8937f0b7cdf8554fa6305158ce453fbe" kindref="member">dbus_error_init</ref>(&amp;e);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>*n_fds;<sp/>i++)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member">_dbus_close</ref>(fds[i],<sp/>&amp;e))</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>close<sp/>file<sp/>descriptor:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>e.<ref refid="structDBusError_1afb559175326de5b6b340e26204e92d72" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1gaac6c14ead14829ee4e090f39de6a7568" kindref="member">dbus_error_free</ref>(&amp;e);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>*n_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>don&apos;t<sp/>free<sp/>the<sp/>array<sp/>here,<sp/>in<sp/>case<sp/>we<sp/>can<sp/>recycle<sp/>it<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal">free_counter<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*element,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><ref refid="structDBusCounter" kindref="compound">DBusCounter</ref><sp/>*counter<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1gae37410c196947675c2a222a7979e9dee" kindref="member">_dbus_counter_adjust_size</ref><sp/>(counter,<sp/>-<sp/>message-&gt;<ref refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" kindref="member">size_counter_delta</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1ga7d9411d27b337289ab5648beb148cde6" kindref="member">_dbus_counter_adjust_unix_fd</ref><sp/>(counter,<sp/>-<sp/>message-&gt;unix_fd_counter_delta);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1gab8c0e970e0c3b4696ba06723639d8239" kindref="member">_dbus_counter_notify</ref><sp/>(counter);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><ref refid="group__DBusResources_1ga48d9b53d1a395ab3c4f1846ca569ef3f" kindref="member">_dbus_counter_unref</ref><sp/>(counter);</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">dbus_message_cache_or_finalize<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>was_cached;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member">_dbus_atomic_get</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>calls<sp/>application<sp/>code<sp/>and<sp/>has<sp/>to<sp/>be<sp/>done<sp/>first<sp/>thing</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/>*<sp/>without<sp/>holding<sp/>the<sp/>lock</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><ref refid="group__DBusDataSlot_1ga3c96d2ca263ba397b4da2956a49ae282" kindref="member">_dbus_data_slot_list_clear</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" kindref="member">slot_list</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" kindref="member">_dbus_list_foreach</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_counter,<sp/>message);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" kindref="member">_dbus_list_clear</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>close_unix_fds(message-&gt;unix_fds,<sp/>&amp;message-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>was_cached<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusInternalsUtils_1ga3b56fdb9df58277ee69d9f56a73bf383" kindref="member">_DBUS_LOCK</ref><sp/>(message_cache))</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>only<sp/>way<sp/>to<sp/>get<sp/>a<sp/>non-null<sp/>message<sp/>goes<sp/>through</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dbus_message_get_cached()<sp/>which<sp/>takes<sp/>the<sp/>lock.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;we<sp/>would<sp/>have<sp/>initialized<sp/>global<sp/>locks<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;the<sp/>first<sp/>time<sp/>we<sp/>constructed<sp/>a<sp/>message&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!message_cache_shutdown_registered)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message_cache_count<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMemoryInternals_1ga8dc6d5dd0a0e7901ab793da7403ee734" kindref="member">_dbus_register_shutdown_func</ref><sp/>(dbus_message_cache_shutdown,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message_cache[i]<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message_cache_shutdown_registered<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message_cache_count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_enable_message_cache<sp/>())</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>.<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>+</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>))<sp/>&gt;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessageInternals_1ga2c5c6aef45dd0b5cc10c800f986a7ce7" kindref="member">MAX_MESSAGE_SIZE_TO_CACHE</ref>)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message_cache_count<sp/>&gt;=<sp/><ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>empty<sp/>slot<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(message_cache[i]<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(i<sp/>&lt;<sp/><ref refid="group__DBusMessageInternals_1gaeab2038ce58cd314dc1f23103abec5b0" kindref="member">MAX_MESSAGE_CACHE_SIZE</ref>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message_cache[i]<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>message_cache[i]<sp/>=<sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>message_cache_count<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>was_cached<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" kindref="member">in_cache</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member">_dbus_atomic_get</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga1b7db80a2ea11235768ec8aa698df0a5" kindref="member">_DBUS_UNLOCK</ref><sp/>(message_cache);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!was_cached)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>dbus_message_finalize<sp/>(message);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DBUS_ENABLE_CHECKS)<sp/>||<sp/>defined(DBUS_ENABLE_ASSERT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="735"><highlight class="normal">_dbus_message_iter_check<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte_order;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;dbus<sp/>message<sp/>iterator<sp/>is<sp/>NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>byte_order<sp/>=<sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(&amp;iter-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_READER)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>.<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref><sp/>!=<sp/>byte_order)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;dbus<sp/>message<sp/>changed<sp/>byte<sp/>order<sp/>since<sp/>iterator<sp/>was<sp/>created\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>because<sp/>we<sp/>swap<sp/>the<sp/>message<sp/>into<sp/>compiler<sp/>order<sp/>when<sp/>you<sp/>init<sp/>an<sp/>iter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>.<ref refid="structDBusTypeReader_1aeb0846d954066f420e1df98b81148702" kindref="member">byte_order</ref><sp/>==<sp/>DBUS_COMPILER_BYTE_ORDER);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref><sp/>!=<sp/>byte_order)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;dbus<sp/>message<sp/>changed<sp/>byte<sp/>order<sp/>since<sp/>append<sp/>iterator<sp/>was<sp/>created\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>because<sp/>we<sp/>swap<sp/>the<sp/>message<sp/>into<sp/>compiler<sp/>order<sp/>when<sp/>you<sp/>init<sp/>an<sp/>iter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a6c4baf0b7148cf3f76924b654dada148" kindref="member">byte_order</ref><sp/>==<sp/>DBUS_COMPILER_BYTE_ORDER);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;dbus<sp/>message<sp/>iterator<sp/>looks<sp/>uninitialized<sp/>or<sp/>corrupted\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1ac10324f74497a5c2288eef8fbcd3ae42" kindref="member">changed_stamp</ref><sp/>!=<sp/>iter-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;<ref refid="structDBusMessage_1a5d102e908f6ff96a5a0aa6a39b4963a8" kindref="member">changed_stamp</ref>)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;dbus<sp/>message<sp/>iterator<sp/>invalid<sp/>because<sp/>the<sp/>message<sp/>has<sp/>been<sp/>modified<sp/>(or<sp/>perhaps<sp/>the<sp/>iterator<sp/>is<sp/>just<sp/>uninitialized)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal">}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_ENABLE_CHECKS<sp/>||<sp/>DBUS_ENABLE_ASSERT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="796" refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" kindref="member">_dbus_message_iter_get_args_valist</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_arg_type,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_args)</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spec_type,<sp/>msg_type,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>va_list<sp/>copy_args;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_message_iter_check<sp/>(real));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>spec_type<sp/>=<sp/>first_arg_type;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>var_args<sp/>first,<sp/>then<sp/>we<sp/>can<sp/>do<sp/>another<sp/>iteration<sp/>over<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/><sp/><sp/>*<sp/>free<sp/>memory<sp/>and<sp/>close<sp/>unix<sp/>fds<sp/>if<sp/>parse<sp/>failed<sp/>at<sp/>some<sp/>point.</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>DBUS_VA_COPY<sp/>(copy_args,<sp/>var_args);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(spec_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg_type<sp/>=<sp/><ref refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" kindref="member">dbus_message_iter_get_arg_type</ref><sp/>(iter);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_type<sp/>!=<sp/>spec_type)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" kindref="member">DBUS_ERROR_INVALID_ARGS</ref>,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>%d<sp/>is<sp/>specified<sp/>to<sp/>be<sp/>of<sp/>type<sp/>\&quot;%s\&quot;,<sp/>but<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>actually<sp/>of<sp/>type<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,<sp/>i,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(spec_type),</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(msg_type));</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spec_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>idx;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pfd,<sp/>nfd;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfd<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(pfd);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;idx);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx.<ref refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" kindref="member">u32</ref><sp/>&gt;=<sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;n_unix_fds)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga2a23b986cd4cef832b8823b6b0d1bcb1" kindref="member">DBUS_ERROR_INCONSISTENT_MESSAGE</ref>,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>refers<sp/>to<sp/>file<sp/>descriptor<sp/>at<sp/>index<sp/>%i,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>has<sp/>only<sp/>%i<sp/>descriptors<sp/>attached.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx.<ref refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" kindref="member">u32</ref>,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nfd<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" kindref="member">_dbus_dup</ref>(real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;unix_fds[idx.<ref refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" kindref="member">u32</ref>],<sp/>error))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfd<sp/>=<sp/>nfd;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1ga33122bcaf8f5896ec222c755b6effb40" kindref="member">DBUS_ERROR_NOT_SUPPORTED</ref>,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Platform<sp/>does<sp/>not<sp/>support<sp/>file<sp/>desciptor<sp/>passing.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" kindref="member">dbus_type_is_basic</ref><sp/>(spec_type))</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>va_arg<sp/>(var_args,<sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>*);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(ptr<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spec_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>element_type;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spec_element_type;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>**ptr;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*n_elements_p;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>array;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_element_type<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type<sp/>=<sp/><ref refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" kindref="member">_dbus_type_reader_get_element_type</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spec_element_type<sp/>!=<sp/>element_type)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" kindref="member">DBUS_ERROR_INVALID_ARGS</ref>,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Argument<sp/>%d<sp/>is<sp/>specified<sp/>to<sp/>be<sp/>an<sp/>array<sp/>of<sp/>\&quot;%s\&quot;,<sp/>but<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;is<sp/>actually<sp/>an<sp/>array<sp/>of<sp/>\&quot;%s\&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(spec_element_type),</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(element_type));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(spec_element_type)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>**);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements_p<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(ptr<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(n_elements_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;array);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" kindref="member">_dbus_type_reader_read_fixed_multi</ref><sp/>(&amp;array,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>ptr,<sp/>n_elements_p);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_DBUS_TYPE_IS_STRINGLIKE<sp/>(spec_element_type))</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***str_array_p;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_elements;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**str_array;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_array_p<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements_p<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(str_array_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(n_elements_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>elements<sp/>in<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;array);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;array)<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n_elements;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;array);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_array<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/>n_elements<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_array<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>go<sp/>through<sp/>and<sp/>dup<sp/>each<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;array);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>n_elements)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;array,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;s);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_array[j]<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1ga9d00d77f6595b9d7ac1baf59d44bf58c" kindref="member">_dbus_strdup</ref><sp/>(s);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_array[j]<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" kindref="member">dbus_free_string_array</ref><sp/>(str_array);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;array))</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(j<sp/>==<sp/>n_elements);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;array)<sp/>==<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(j<sp/>==<sp/>n_elements);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(str_array[j]<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str_array_p<sp/>=<sp/>str_array;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_elements_p<sp/>=<sp/>n_elements;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;you<sp/>can&apos;t<sp/>read<sp/>arrays<sp/>of<sp/>container<sp/>types<sp/>(struct,<sp/>variant,<sp/>array)<sp/>with<sp/>%s<sp/>for<sp/>now\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_FUNCTION_NAME);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;you<sp/>can<sp/>only<sp/>read<sp/>arrays<sp/>and<sp/>basic<sp/>types<sp/>with<sp/>%s<sp/>for<sp/>now\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_FUNCTION_NAME);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>arguments<sp/>already<sp/>handled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spec_type<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>)<sp/>&amp;&amp;<sp/>spec_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" kindref="member">DBUS_ERROR_INVALID_ARGS</ref>,</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>has<sp/>only<sp/>%d<sp/>arguments,<sp/>but<sp/>more<sp/>were<sp/>expected&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>may<sp/>memory<sp/>or<sp/>unix<sp/>fd<sp/>leak<sp/>in<sp/>the<sp/>above<sp/>iteration<sp/>if<sp/>parse<sp/>failed.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/>*<sp/>so<sp/>we<sp/>have<sp/>another<sp/>iteration<sp/>over<sp/>copy_args<sp/>to<sp/>free<sp/>memory<sp/>and<sp/>close</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/>*<sp/>unix<sp/>fds.</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!retval)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spec_type<sp/>=<sp/>first_arg_type;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>i)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spec_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pfd;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfd<sp/>=<sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(pfd);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*pfd<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member">_dbus_close</ref><sp/>(*pfd,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" kindref="member">dbus_type_is_basic</ref><sp/>(spec_type))</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>the<sp/>index<sp/>forward<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_arg<sp/>(copy_args,<sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>*);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spec_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spec_element_type;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_element_type<sp/>=<sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(spec_element_type))</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>the<sp/>index<sp/>forward<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>**);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_DBUS_TYPE_IS_STRINGLIKE<sp/>(spec_element_type))</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***str_array_p;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_array_p<sp/>=<sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>the<sp/>index<sp/>forward<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(str_array_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1gac200b2dbc8b3f6ecac4d42426fb97b40" kindref="member">dbus_free_string_array</ref><sp/>(*str_array_p);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str_array_p<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_type<sp/>=<sp/>va_arg<sp/>(copy_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>va_end<sp/>(copy_args);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></highlight></codeline>
<codeline lineno="1127" refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" kindref="member">dbus_message_get_serial</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" kindref="member">_dbus_header_get_serial</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1143" refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" kindref="member">dbus_message_set_reply_serial</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><sp/>reply_serial)</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(reply_serial<sp/>!=<sp/>0,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" kindref="member">_dbus_header_set_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" kindref="member">DBUS_HEADER_FIELD_REPLY_SERIAL</ref>,</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reply_serial);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></highlight></codeline>
<codeline lineno="1163" refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" kindref="member">dbus_message_get_reply_serial</ref><sp/><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>v_UINT32;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" kindref="member">DBUS_HEADER_FIELD_REPLY_SERIAL</ref>,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_UINT32))</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v_UINT32;</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal">dbus_message_finalize<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member">_dbus_atomic_get</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>calls<sp/>application<sp/>callbacks!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><ref refid="group__DBusDataSlot_1gabc399733376c462c3010271a2d431e73" kindref="member">_dbus_data_slot_list_free</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" kindref="member">slot_list</ref>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" kindref="member">_dbus_list_foreach</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_counter,<sp/>message);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" kindref="member">_dbus_list_clear</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref>);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" kindref="member">_dbus_header_free</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/>close_unix_fds(message-&gt;unix_fds,<sp/>&amp;message-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref>(message-&gt;unix_fds);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusSysdeps_1ga626c810359ba0e362367ce2ec6691aca" kindref="member">_dbus_atomic_get</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">dbus_message_new_empty_header<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>from_cache;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>dbus_message_get_cached<sp/>();</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from_cache<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>from_cache<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" kindref="member">generation</ref><sp/>=<sp/><ref refid="group__DBusMemoryInternals_1ga7c224d82013e2bdc181c1d85dcb6f295" kindref="member">_dbus_current_generation</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;unix_fds<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;n_unix_fds_allocated<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member">_dbus_atomic_inc</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/>_dbus_message_trace_ref<sp/>(message,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;new_empty_header&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" kindref="member">in_cache</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ac6fc05ddffb11ac60b9da046abd2dc52" kindref="member">counters</ref><sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1ab8f43d40fa870f97f1126256568cec61" kindref="member">size_counter_delta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/>message-&gt;<ref refid="structDBusMessage_1a5d102e908f6ff96a5a0aa6a39b4963a8" kindref="member">changed_stamp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/>message-&gt;n_unix_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/>message-&gt;n_unix_fds_allocated<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/>message-&gt;unix_fd_counter_delta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from_cache)</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusDataSlot_1ga6de49b3a1210202215d40a5a19806992" kindref="member">_dbus_data_slot_list_init</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" kindref="member">slot_list</ref>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_cache)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" kindref="member">_dbus_header_reinit</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" kindref="member">_dbus_header_init</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" kindref="member">_dbus_string_init_preallocated</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,<sp/>32))</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" kindref="member">_dbus_header_free</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1289" refid="group__DBusMessage_1gab9e5bf8d87a95c5ca7026a791148ebd4" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gab9e5bf8d87a95c5ca7026a791148ebd4" kindref="member">dbus_message_new</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>message_type)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" kindref="member">DBUS_MESSAGE_TYPE_INVALID</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>dbus_message_new_empty_header<sp/>();</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER,</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message_type,</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1333" refid="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" kindref="member">dbus_message_new_method_call</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*destination,</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iface,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*method)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(path<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(method<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(destination<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_bus_name<sp/>(destination),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_path<sp/>(path),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(iface<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_interface<sp/>(iface),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_member<sp/>(method),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>dbus_message_new_empty_header<sp/>();</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER,</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>,</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination,<sp/>path,<sp/>iface,<sp/>method,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1373" refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" kindref="member">dbus_message_new_method_return</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*method_call)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sender;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(method_call<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>sender<sp/>=<sp/><ref refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" kindref="member">dbus_message_get_sender</ref><sp/>(method_call);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sender<sp/>is<sp/>allowed<sp/>to<sp/>be<sp/>null<sp/>here<sp/>in<sp/>peer-to-peer<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>dbus_message_new_empty_header<sp/>();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref>,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" kindref="member">dbus_message_set_no_reply</ref><sp/>(message,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" kindref="member">dbus_message_set_reply_serial</ref><sp/>(message,</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" kindref="member">dbus_message_get_serial</ref><sp/>(method_call)))</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1424" refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" kindref="member">dbus_message_new_signal</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iface,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(path<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(iface<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_path<sp/>(path),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_interface<sp/>(iface),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_member<sp/>(name),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>dbus_message_new_empty_header<sp/>();</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER,</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>path,<sp/>iface,<sp/>name,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" kindref="member">dbus_message_set_no_reply</ref><sp/>(message,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1470" refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" kindref="member">dbus_message_new_error</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*reply_to,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*error_name,</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*error_message)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sender;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>iter;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(reply_to<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(error_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_error_name<sp/>(error_name),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>sender<sp/>=<sp/><ref refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" kindref="member">dbus_message_get_sender</ref><sp/>(reply_to);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>sender<sp/>may<sp/>be<sp/>NULL<sp/>for<sp/>non-message-bus<sp/>case<sp/>or</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/><sp/>*<sp/>when<sp/>the<sp/>message<sp/>bus<sp/>is<sp/>dealing<sp/>with<sp/>an<sp/>unregistered</highlight></codeline>
<codeline lineno="1486"><highlight class="comment"><sp/><sp/><sp/>*<sp/>connection.</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/>message<sp/>=<sp/>dbus_message_new_empty_header<sp/>();</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_COMPILER_BYTE_ORDER,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>error_name))</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" kindref="member">dbus_message_set_no_reply</ref><sp/>(message,<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" kindref="member">dbus_message_set_reply_serial</ref><sp/>(message,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" kindref="member">dbus_message_get_serial</ref><sp/>(reply_to)))</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" kindref="member">dbus_message_iter_init_append</ref><sp/>(message,<sp/>&amp;iter);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" kindref="member">dbus_message_iter_append_basic</ref><sp/>(&amp;iter,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error_message))</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="1542" refid="group__DBusMessage_1ga707a27881820f964e3606bc906a47978" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga707a27881820f964e3606bc906a47978" kindref="member">dbus_message_new_error_printf</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*reply_to,</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*error_name,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*error_format,</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...)</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>va_list<sp/>args;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>str;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(reply_to<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(error_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_error_name<sp/>(error_name),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;str))</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/>va_start<sp/>(args,<sp/>error_format);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga8d794f292831d1a7edeb971b13a2c641" kindref="member">_dbus_string_append_printf_valist</ref><sp/>(&amp;str,<sp/>error_format,<sp/>args))</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/>message<sp/>=<sp/><ref refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" kindref="member">dbus_message_new_error</ref><sp/>(reply_to,<sp/>error_name,</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(&amp;str));</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>message<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;str);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>va_end<sp/>(args);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*</highlight></codeline>
<codeline lineno="1587" refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" kindref="member">dbus_message_copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*retval;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member">_dbus_atomic_inc</ref><sp/>(&amp;retval-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>retval-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>retval-&gt;<ref refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" kindref="member">generation</ref><sp/>=<sp/>message-&gt;<ref refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" kindref="member">generation</ref>;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" kindref="member">_dbus_header_copy</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>&amp;retval-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>))</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(retval);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" kindref="member">_dbus_string_init_preallocated</ref><sp/>(&amp;retval-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>)))</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" kindref="member">_dbus_header_free</ref><sp/>(&amp;retval-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(retval);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member">_dbus_string_copy</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;retval-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,<sp/>0))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed_copy;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>retval-&gt;unix_fds<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member">dbus_new</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>message-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval-&gt;unix_fds<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>message-&gt;n_unix_fds<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed_copy;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/>retval-&gt;n_unix_fds_allocated<sp/>=<sp/>message-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(retval-&gt;n_unix_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval-&gt;n_unix_fds<sp/>&lt;<sp/>message-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval-&gt;n_unix_fds++)</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>retval-&gt;unix_fds[retval-&gt;n_unix_fds]<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" kindref="member">_dbus_dup</ref>(message-&gt;unix_fds[retval-&gt;n_unix_fds],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval-&gt;unix_fds[retval-&gt;n_unix_fds]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed_copy;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/>_dbus_message_trace_ref<sp/>(retval,<sp/>0,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;copy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/>failed_copy:</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" kindref="member">_dbus_header_free</ref><sp/>(&amp;retval-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;retval-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/>close_unix_fds(retval-&gt;unix_fds,<sp/>&amp;retval-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref>(retval-&gt;unix_fds);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(retval);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*</highlight></codeline>
<codeline lineno="1667" refid="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga834035e4817acd64adc8ca584bdf3982" kindref="member">dbus_message_ref</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref><sp/>old_refcount;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message-&gt;<ref refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" kindref="member">generation</ref><sp/>==<sp/><ref refid="group__DBusMemoryInternals_1ga7c224d82013e2bdc181c1d85dcb6f295" kindref="member">_dbus_current_generation</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" kindref="member">in_cache</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>old_refcount<sp/>=<sp/><ref refid="group__DBusSysdeps_1gae74c3fcf12acaeccdb152ef907de951c" kindref="member">_dbus_atomic_inc</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(old_refcount<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>_dbus_message_trace_ref<sp/>(message,<sp/>old_refcount,<sp/>old_refcount<sp/>+<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;ref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690" refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref><sp/>old_refcount;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message-&gt;<ref refid="structDBusMessage_1a96263aa8a777c8c661d2596911c7d592" kindref="member">generation</ref><sp/>==<sp/><ref refid="group__DBusMemoryInternals_1ga7c224d82013e2bdc181c1d85dcb6f295" kindref="member">_dbus_current_generation</ref>);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac71fa5534264093e6af8bc41f15237c8" kindref="member">in_cache</ref>);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>old_refcount<sp/>=<sp/><ref refid="group__DBusSysdeps_1ga3c50a069f795dceeb9172fe2b517bbdc" kindref="member">_dbus_atomic_dec</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a324c5377e0be18dd84ac519ab2d23f0d" kindref="member">refcount</ref>);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(old_refcount<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/>_dbus_message_trace_ref<sp/>(message,<sp/>old_refcount,<sp/>old_refcount<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;unref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_refcount<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calls<sp/>application<sp/>callbacks!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dbus_message_cache_or_finalize<sp/>(message);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722" refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" kindref="member">dbus_message_get_type</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" kindref="member">DBUS_MESSAGE_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" kindref="member">_dbus_header_get_message_type</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1792" refid="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga591f3aab5dd2c87e56e05423c2a671d9" kindref="member">dbus_message_append_args</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_arg_type,</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...)</highlight></codeline>
<codeline lineno="1795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>va_list<sp/>var_args;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>va_start<sp/>(var_args,<sp/>first_arg_type);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" kindref="member">dbus_message_append_args_valist</ref><sp/>(message,</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_arg_type,</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_args);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>va_end<sp/>(var_args);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1824" refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga106e541001d6b884d1c3cea6044693ab" kindref="member">dbus_message_append_args_valist</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_arg_type,</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/>var_args)</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>iter;</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>first_arg_type;</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" kindref="member">dbus_message_iter_init_append</ref><sp/>(message,<sp/>&amp;iter);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" kindref="member">dbus_type_is_basic</ref><sp/>(type))</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>*value;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>*);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" kindref="member">dbus_message_iter_append_basic</ref><sp/>(&amp;iter,</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value))</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>)</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>element_type;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>array;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[2];</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[0]<sp/>=<sp/>element_type;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" kindref="member">dbus_message_iter_open_container</ref><sp/>(&amp;iter,</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>,</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf,</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;array))</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(element_type)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>)</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>**value;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_elements;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref>**);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" kindref="member">dbus_message_iter_append_fixed_array</ref><sp/>(&amp;array,</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type,</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements))<sp/>{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga6e62697ca11f0a57dbecc93d5721612c" kindref="member">dbus_message_iter_abandon_container</ref><sp/>(&amp;iter,<sp/>&amp;array);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_DBUS_TYPE_IS_STRINGLIKE<sp/>(element_type))</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***value_p;</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**value;</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_elements;</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_p<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">***);</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>*value_p;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>n_elements)</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" kindref="member">dbus_message_iter_append_basic</ref><sp/>(&amp;array,</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;value[i]))<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1ga6e62697ca11f0a57dbecc93d5721612c" kindref="member">dbus_message_iter_abandon_container</ref><sp/>(&amp;iter,<sp/>&amp;array);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;arrays<sp/>of<sp/>%s<sp/>can&apos;t<sp/>be<sp/>appended<sp/>with<sp/>%s<sp/>for<sp/>now\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(element_type),</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DBUS_FUNCTION_NAME);</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" kindref="member">dbus_message_iter_close_container</ref><sp/>(&amp;iter,<sp/>&amp;array))</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1gabea2c16d6d3fe7c4eb5b9496fc877f84" kindref="member">_dbus_warn</ref><sp/>(</highlight><highlight class="stringliteral">&quot;type<sp/>%s<sp/>isn&apos;t<sp/>supported<sp/>yet<sp/>in<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga48a595c2b26dce6e9c25ce040e5247e5" kindref="member">_dbus_type_to_string</ref><sp/>(type),<sp/>_DBUS_FUNCTION_NAME);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>=<sp/>va_arg<sp/>(var_args,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1980" refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" kindref="member">dbus_message_get_args</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error,</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_arg_type,</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>...)</highlight></codeline>
<codeline lineno="1984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/>va_list<sp/>var_args;</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_error_is_set<sp/>(error,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/>va_start<sp/>(var_args,<sp/>first_arg_type);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" kindref="member">dbus_message_get_args_valist</ref><sp/>(message,<sp/>error,<sp/>first_arg_type,<sp/>var_args);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/>va_end<sp/>(var_args);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2009" refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gab0f9bbe4f3d26bc9b5cf4f243c268aaa" kindref="member">dbus_message_get_args_valist</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*error,</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_arg_type,</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_args)</highlight></codeline>
<codeline lineno="2013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>iter;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_error_is_set<sp/>(error,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" kindref="member">dbus_message_iter_init</ref><sp/>(message,<sp/>&amp;iter);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMessageInternals_1ga1ae02a435d19c3363e11c74b08c43ab2" kindref="member">_dbus_message_iter_get_args_valist</ref><sp/>(&amp;iter,<sp/>error,<sp/>first_arg_type,<sp/>var_args);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal">_dbus_message_iter_init_common<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real,</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref>)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/>_DBUS_STATIC_ASSERT<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref>)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref>));</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>iterator<sp/>will<sp/>read<sp/>or<sp/>write<sp/>who-knows-what<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/><sp/><sp/>*<sp/>message,<sp/>we<sp/>need<sp/>to<sp/>get<sp/>in<sp/>the<sp/>right<sp/>byte<sp/>order</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1ga1dfae386ef0d4d808584abeafc44e8ca" kindref="member">ensure_byte_order</ref><sp/>(message);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref><sp/>=<sp/><ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1ac10324f74497a5c2288eef8fbcd3ae42" kindref="member">changed_stamp</ref><sp/>=<sp/>message-&gt;<ref refid="structDBusMessage_1a5d102e908f6ff96a5a0aa6a39b4963a8" kindref="member">changed_stamp</ref>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>=<sp/><ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref>;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2064" refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" kindref="member">dbus_message_iter_init</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2066"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str;</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_pos;</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(iter<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/>get_const_signature<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>&amp;type_str,<sp/>&amp;type_pos);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/>_dbus_message_iter_init_common<sp/>(message,<sp/>real,</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_MESSAGE_ITER_TYPE_READER);</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>),</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_str,<sp/>type_pos,</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0);</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>)<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>;</highlight></codeline>
<codeline lineno="2086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2095" refid="group__DBusMessage_1gaaffc75a699c96ff6197287f166df2149" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaaffc75a699c96ff6197287f166df2149" kindref="member">dbus_message_iter_has_next</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_READER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga97a59dbd1597ef1b267457e809f095de" kindref="member">_dbus_type_reader_has_next</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2114" refid="group__DBusMessage_1ga554e9fafd4dcc84cebe9da9344846a82" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga554e9fafd4dcc84cebe9da9344846a82" kindref="member">dbus_message_iter_next</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_READER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139" refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" kindref="member">dbus_message_iter_get_arg_type</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_check<sp/>(real),<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_READER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158" refid="group__DBusMessage_1ga868a7aeddb9b54b2805776b512f68cb4" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga868a7aeddb9b54b2805776b512f68cb4" kindref="member">dbus_message_iter_get_element_type</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_check<sp/>(real),<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_READER,<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(<ref refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" kindref="member">dbus_message_iter_get_arg_type</ref><sp/>(iter)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>,<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga6e5439f7ca5ee8a1ce943ddab7611d0d" kindref="member">_dbus_type_reader_get_element_type</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2195" refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga7652e1208743da5dd4ecc5aef07bf207" kindref="member">dbus_message_iter_recurse</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/><sp/>*iter,</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/><sp/>*sub)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real_sub<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)sub;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(_dbus_message_iter_check<sp/>(real));</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(sub<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/>*real_sub<sp/>=<sp/>*real;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;real_sub-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="2220" refid="group__DBusMessage_1gab4579a88a1a7eaf648350466f585ef8b" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gab4579a88a1a7eaf648350466f585ef8b" kindref="member">dbus_message_iter_get_signature</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*sig;</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>retstr;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ret;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/>len;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;retstr))</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga4578cc623c8b0978ca780ce0ab950fdb" kindref="member">_dbus_type_reader_get_signature</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;sig,</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;start,<sp/>&amp;len);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga724656b7091b910965bd1af42d0b7bab" kindref="member">_dbus_string_append_len</ref><sp/>(&amp;retstr,</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_const_data<sp/>(sig)<sp/>+<sp/>start,</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len))</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga556cc30c3ab032dbc63e217119f0d1f5" kindref="member">_dbus_string_steal_data</ref><sp/>(&amp;retstr,<sp/>&amp;ret))</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;retstr);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293" refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga41c23a05e552d0574d0444d4693d18ab" kindref="member">dbus_message_iter_get_basic</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/><sp/>*iter,</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(_dbus_message_iter_check<sp/>(real));</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(value<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMessage_1ga5aae3c882a75aed953d8b3d489e9b271" kindref="member">dbus_message_iter_get_arg_type</ref><sp/>(iter)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>)</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionDBusBasicValue" kindref="compound">DBusBasicValue</ref><sp/>idx;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,<sp/>&amp;idx);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx.<ref refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" kindref="member">u32</ref><sp/>&gt;=<sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;n_unix_fds)<sp/>{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hmm,<sp/>we<sp/>cannot<sp/>really<sp/>signal<sp/>an<sp/>error<sp/>here,<sp/>so<sp/>let&apos;s<sp/>make</highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sure<sp/>to<sp/>return<sp/>an<sp/>invalid<sp/>fd.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>value)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>value)<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" kindref="member">_dbus_dup</ref>(real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;unix_fds[idx.<ref refid="unionDBusBasicValue_1a2501e54560ae240442d9d841b96b086b" kindref="member">u32</ref>],<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>value)<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346" refid="group__DBusMessage_1gab8ff47649497b3e0b93a2289f5d3eb23" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gab8ff47649497b3e0b93a2289f5d3eb23" kindref="member">dbus_message_iter_get_array_len</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_check<sp/>(real),<sp/>0);</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga7def93d676d528c261aa274cea41c29d" kindref="member">_dbus_type_reader_get_array_length</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391" refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gae195a3312ae445e7ef0196854f3523f8" kindref="member">dbus_message_iter_get_fixed_array</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/><sp/>*iter,</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*n_elements)</highlight></codeline>
<codeline lineno="2394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtype<sp/>=<sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>);</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(_dbus_message_iter_check<sp/>(real));</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(value<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>((subtype<sp/>==<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(subtype)<sp/>&amp;&amp;<sp/>subtype<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>));</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gae9a65c05e58ace9c83352f65af2fe745" kindref="member">_dbus_type_reader_read_fixed_multi</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1ae5c4e45b0a5d6642850144f642d7db67" kindref="member">reader</ref>,</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>n_elements);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421" refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" kindref="member">dbus_message_iter_init_append</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(iter<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/>_dbus_message_iter_init_common<sp/>(message,<sp/>real,</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DBUS_MESSAGE_ITER_TYPE_WRITER);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>create<sp/>the<sp/>signature<sp/>string<sp/>and<sp/>point<sp/>iterators<sp/>at<sp/>it<sp/>&quot;on<sp/>demand&quot;</highlight></codeline>
<codeline lineno="2433"><highlight class="comment"><sp/><sp/><sp/>*<sp/>when<sp/>a<sp/>value<sp/>is<sp/>actually<sp/>appended.<sp/>That<sp/>means<sp/>that<sp/>init()<sp/>never<sp/>fails</highlight></codeline>
<codeline lineno="2434"><highlight class="comment"><sp/><sp/><sp/>*<sp/>due<sp/>to<sp/>OOM.</highlight></codeline>
<codeline lineno="2435"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa9ecf7e96d5323bc1da9cdf0c3f2c1e7" kindref="member">_dbus_type_writer_init_types_delayed</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>),</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>));</highlight></codeline>
<codeline lineno="2440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2451"><highlight class="normal">_dbus_message_iter_open_signature<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real)</highlight></codeline>
<codeline lineno="2452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*current_sig;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_sig_pos;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/><ref refid="group__DBusMemory_1ga54ccb556e7964112a825a7f46c156ca0" kindref="member">dbus_new</ref><sp/>(<ref refid="structDBusString" kindref="compound">DBusString</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" kindref="member">_dbus_header_get_field_raw</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>,</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;current_sig,<sp/>&amp;current_sig_pos))</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/>current_sig<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_sig)</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_len;</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_len<sp/>=<sp/>_dbus_string_get_byte<sp/>(current_sig,<sp/>current_sig_pos);</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_sig_pos<sp/>+=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>move<sp/>on<sp/>to<sp/>sig<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" kindref="member">_dbus_string_init_preallocated</ref><sp/>(str,<sp/>current_len<sp/>+<sp/>4))</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" kindref="member">_dbus_string_copy_len</ref><sp/>(current_sig,<sp/>current_sig_pos,<sp/>current_len,</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/>0))</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" kindref="member">_dbus_string_init_preallocated</ref><sp/>(str,<sp/>4))</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga863b2f232a21582f9e6fe1951b09da91" kindref="member">_dbus_type_writer_add_types</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/>_dbus_string_get_length<sp/>(str));</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2522"><highlight class="normal">_dbus_message_iter_close_signature<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real)</highlight></codeline>
<codeline lineno="2523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v_STRING;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/>v_STRING<sp/>=<sp/>_dbus_string_get_const_data<sp/>(str);</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" kindref="member">_dbus_header_set_field_basic</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>,</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref>,</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_STRING))</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" kindref="member">_dbus_type_writer_remove_types</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal">_dbus_message_iter_abandon_signature<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a93789e6f814d55b5952fee34d286f6d6" kindref="member">sig_refcount</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1a95204ef3a9cf29ee31687032b142b836" kindref="member">type_str</ref>;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga34d675b57c7e6569707d22ba76ae010c" kindref="member">_dbus_type_writer_remove_types</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2587"><highlight class="normal">_dbus_message_iter_append_check<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*iter)</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_message_iter_check<sp/>(iter))</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>)</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga63f2f8a068454b781f214ba596e313b4" kindref="member">_dbus_warn_check_failed</ref><sp/>(</highlight><highlight class="stringliteral">&quot;dbus<sp/>append<sp/>iterator<sp/>can&apos;t<sp/>be<sp/>used:<sp/>message<sp/>is<sp/>locked<sp/>(has<sp/>already<sp/>been<sp/>sent)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DBUS_DISABLE_CHECKS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="2604"><highlight class="normal">expand_fd_array(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*m,</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>n)</highlight></codeline>
<codeline lineno="2606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(m);</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>makes<sp/>space<sp/>for<sp/>adding<sp/>n<sp/>new<sp/>fds<sp/>to<sp/>the<sp/>array<sp/>and<sp/>returns<sp/>a</highlight></codeline>
<codeline lineno="2610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>pointer<sp/>to<sp/>the<sp/>place<sp/>were<sp/>the<sp/>first<sp/>fd<sp/>should<sp/>be<sp/>put.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m-&gt;n_unix_fds<sp/>+<sp/>n<sp/>&gt;<sp/>m-&gt;n_unix_fds_allocated)</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*p;</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>twice<sp/>as<sp/>much<sp/>space<sp/>as<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(m-&gt;n_unix_fds<sp/>+<sp/>n)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>at<sp/>least<sp/>four<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" kindref="member">dbus_realloc</ref>(m-&gt;unix_fds,<sp/>k<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;unix_fds<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m-&gt;n_unix_fds_allocated<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m-&gt;unix_fds<sp/>+<sp/>m-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="2633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2656" refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" kindref="member">dbus_message_iter_append_basic</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter,</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="2659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>ret;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(<ref refid="group__DBusSignature_1ga2d8afef7d754cf15d6b9733f00654c0e" kindref="member">dbus_type_is_basic</ref><sp/>(type),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(value<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*string_p;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>*bool_p;</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>:</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_p<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_utf8<sp/>(*string_p),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref>:</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_p<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_path<sp/>(*string_p),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref>:</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_p<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_check_is_valid_signature<sp/>(*string_p),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" kindref="member">DBUS_TYPE_BOOLEAN</ref>:</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool_p<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_return_val_if_fail<sp/>(*bool_p<sp/>==<sp/>0<sp/>||<sp/>*bool_p<sp/>==<sp/>1,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>to<sp/>check,<sp/>all<sp/>possible<sp/>values<sp/>are<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_message_iter_open_signature<sp/>(real))</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>)</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*fds;</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>step,<sp/>include<sp/>the<sp/>fd<sp/>in<sp/>the<sp/>fd<sp/>list<sp/>of<sp/>this<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(fds<sp/>=<sp/>expand_fd_array(real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>,<sp/>1)))</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*fds<sp/>=<sp/><ref refid="group__DBusSysdepsUnix_1gad79d20e59fb519233004208988851cf1" kindref="member">_dbus_dup</ref>(*(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)<sp/>value,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*fds<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Second<sp/>step,<sp/>write<sp/>the<sp/>index<sp/>to<sp/>the<sp/>fd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(ret<sp/>=<sp/><ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>,<sp/>&amp;u)))<sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusSysdepsUnix_1gac448479a1674e3b86cee9a4bdc7eba03" kindref="member">_dbus_close</ref>(*fds,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;n_unix_fds<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Final<sp/>step,<sp/>update<sp/>the<sp/>header<sp/>accordingly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" kindref="member">_dbus_header_set_field_basic</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" kindref="member">DBUS_HEADER_FIELD_UNIX_FDS</ref>,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;u);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>any<sp/>of<sp/>these<sp/>operations<sp/>fail<sp/>the<sp/>message<sp/>is</highlight></codeline>
<codeline lineno="2736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hosed.<sp/>However,<sp/>no<sp/>memory<sp/>or<sp/>fds<sp/>should<sp/>be<sp/>leaked<sp/>since<sp/>what</highlight></codeline>
<codeline lineno="2737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>been<sp/>added<sp/>to<sp/>message<sp/>has<sp/>been<sp/>added<sp/>to<sp/>the<sp/>message,<sp/>and</highlight></codeline>
<codeline lineno="2738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>hence<sp/>be<sp/>accounted<sp/>for<sp/>when<sp/>the<sp/>message<sp/>is<sp/>being</highlight></codeline>
<codeline lineno="2739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,<sp/>type,<sp/>value);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_message_iter_close_signature<sp/>(real))</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2791" refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga6e2d1e936c3c61fe00d80a3f22fd5e76" kindref="member">dbus_message_iter_append_fixed_array</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter,</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element_type,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_elements)</highlight></codeline>
<codeline lineno="2795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>ret;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(<ref refid="group__DBusSignature_1ga2f89962cbd33e4ad843824157bae2093" kindref="member">dbus_type_is_fixed</ref><sp/>(element_type)<sp/>&amp;&amp;<sp/>element_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga59f8acaeb207b182982dfb97174b7f16" kindref="member">DBUS_TYPE_UNIX_FD</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>.<ref refid="structDBusTypeWriter_1ad0953035070c7c7d21b044b7b2f0f491" kindref="member">container_type</ref><sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(value<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(n_elements<sp/>&gt;=<sp/>0,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(n_elements<sp/>&lt;=</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga5265afa08a4c8d9f31b287a57e8cb217" kindref="member">DBUS_MAXIMUM_ARRAY_LENGTH</ref><sp/>/<sp/><ref refid="group__DBusMarshal_1ga2ba80f227880e442c140bc67653b0abd" kindref="member">_dbus_type_get_alignment</ref><sp/>(element_type),</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(element_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga624ecee83984330ad89cbf064a2b28e6" kindref="member">DBUS_TYPE_BOOLEAN</ref>)</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*bools<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_elements;<sp/>i++)</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_return_val_if_fail<sp/>((*bools)[i]<sp/>==<sp/>0<sp/>||<sp/>(*bools)[i]<sp/>==<sp/>1,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMarshal_1gacf99495cbed7462992b6a231563b4528" kindref="member">_dbus_type_writer_write_fixed_multi</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,<sp/>element_type,<sp/>value,<sp/>n_elements);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2849" refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga943150f4e87fd8507da224d22c266100" kindref="member">dbus_message_iter_open_container</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter,</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*contained_signature,</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="2853"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real_sub<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)sub;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>contained_str;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(<ref refid="group__DBusSignature_1gaa0c4c8aa34fa266daa55bd37bdad39b8" kindref="member">dbus_type_is_container</ref><sp/>(type),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(sub<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>((type<sp/>==<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_signature<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(type<sp/>==<sp/><ref refid="group__DBusProtocol_1gad2fc8e6c50e0ad927f4249fb9e53ca97" kindref="member">DBUS_TYPE_DICT_ENTRY</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_signature<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_signature<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contained_signature<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>would<sp/>fail<sp/>if<sp/>the<sp/>contained_signature<sp/>is<sp/>a<sp/>dict<sp/>entry,<sp/>since</highlight></codeline>
<codeline lineno="2872"><highlight class="comment"><sp/><sp/><sp/>*<sp/>dict<sp/>entries<sp/>are<sp/>invalid<sp/>signatures<sp/>standalone<sp/>(they<sp/>must<sp/>be<sp/>in</highlight></codeline>
<codeline lineno="2873"><highlight class="comment"><sp/><sp/><sp/>*<sp/>an<sp/>array)</highlight></codeline>
<codeline lineno="2874"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>((type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref><sp/>&amp;&amp;<sp/>contained_signature<sp/>&amp;&amp;<sp/>*contained_signature<sp/>==<sp/><ref refid="group__DBusProtocol_1gad51b5f7a2e6d927295479dd371f6b353" kindref="member">DBUS_DICT_ENTRY_BEGIN_CHAR</ref>)<sp/>||</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(contained_signature<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_signature<sp/>(contained_signature)),</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_message_iter_open_signature<sp/>(real))</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/>*real_sub<sp/>=<sp/>*real;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contained_signature<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga374640ddfa2f0b27a8356e2379ba8043" kindref="member">_dbus_string_init_const</ref><sp/>(&amp;contained_str,<sp/>contained_signature);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;contained_str,<sp/>0,</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;real_sub-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;real_sub-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>);</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="2918" refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaf00482f63d4af88b7851621d1f24087a" kindref="member">dbus_message_iter_close_container</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter,</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="2920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real_sub<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)sub;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>ret;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real_sub),<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(real_sub-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(&amp;real-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>,</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;real_sub-&gt;<ref refid="structDBusMessageRealIter_1ac9c3ce5775bc9f5f0720b65093345ec6" kindref="member">u</ref>.<ref refid="structDBusMessageRealIter_1a93bc11bb1521743170b0b411b32140cf" kindref="member">writer</ref>);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_message_iter_close_signature<sp/>(real))</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951" refid="group__DBusMessage_1ga6e62697ca11f0a57dbecc93d5721612c" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga6e62697ca11f0a57dbecc93d5721612c" kindref="member">dbus_message_iter_abandon_container</ref><sp/>(<ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*iter,</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessageIter" kindref="compound">DBusMessageIter</ref><sp/>*sub)</highlight></codeline>
<codeline lineno="2953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)iter;</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*real_sub<sp/>=<sp/>(<ref refid="structDBusMessageRealIter" kindref="compound">DBusMessageRealIter</ref><sp/>*)sub;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real));</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(real-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER);</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(_dbus_message_iter_append_check<sp/>(real_sub));</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(real_sub-&gt;<ref refid="structDBusMessageRealIter_1a835b7990b2909beb06fc2dc38b76a089" kindref="member">iter_type</ref><sp/>==<sp/>DBUS_MESSAGE_ITER_TYPE_WRITER);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/>_dbus_message_iter_abandon_signature<sp/>(real);</highlight></codeline>
<codeline lineno="2965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984" refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" kindref="member">dbus_message_set_no_reply</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/>no_reply)</highlight></codeline>
<codeline lineno="2986"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" kindref="member">_dbus_header_toggle_flag</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga0dcac038284250b3b0bff49cb4990626" kindref="member">DBUS_HEADER_FLAG_NO_REPLY_EXPECTED</ref>,</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_reply);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3003" refid="group__DBusMessage_1ga622d051a2e5f578814116a958b240aa4" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga622d051a2e5f578814116a958b240aa4" kindref="member">dbus_message_get_no_reply</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" kindref="member">_dbus_header_get_flag</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga0dcac038284250b3b0bff49cb4990626" kindref="member">DBUS_HEADER_FLAG_NO_REPLY_EXPECTED</ref>);</highlight></codeline>
<codeline lineno="3009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026" refid="group__DBusMessage_1ga1596d92a8d604f954b48c7410263d2f0" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga1596d92a8d604f954b48c7410263d2f0" kindref="member">dbus_message_set_auto_start</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/>auto_start)</highlight></codeline>
<codeline lineno="3028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>);</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" kindref="member">_dbus_header_toggle_flag</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga8699fad5ce9ff93fe3f3471ba463dd40" kindref="member">DBUS_HEADER_FLAG_NO_AUTO_START</ref>,</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!auto_start);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3045" refid="group__DBusMessage_1ga85d396a3a774e15c3dbb7704aa173384" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga85d396a3a774e15c3dbb7704aa173384" kindref="member">dbus_message_get_auto_start</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3046"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" kindref="member">_dbus_header_get_flag</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga8699fad5ce9ff93fe3f3471ba463dd40" kindref="member">DBUS_HEADER_FLAG_NO_AUTO_START</ref>);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3067" refid="group__DBusMessage_1gaaf25da0ba1482266293d329314c21786" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaaf25da0ba1482266293d329314c21786" kindref="member">dbus_message_set_path</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*object_path)</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(object_path<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_path<sp/>(object_path),</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>,</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref>,</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_path);</highlight></codeline>
<codeline lineno="3080"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3096" refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" kindref="member">dbus_message_get_path</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message)</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>field<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>,</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref>,</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;v);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="3108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3120" refid="group__DBusMessage_1gad2c87d3472bd3bfa8eca8a97f2db026b" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gad2c87d3472bd3bfa8eca8a97f2db026b" kindref="member">dbus_message_has_path</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*path)</highlight></codeline>
<codeline lineno="3122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg_path;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/>msg_path<sp/>=<sp/><ref refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" kindref="member">dbus_message_get_path</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_path<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(msg_path,<sp/>path)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3164" refid="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaf2b5b3319da838b1f1b360c04a33f153" kindref="member">dbus_message_get_path_decomposed</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>***path)</highlight></codeline>
<codeline lineno="3166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(path<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/>*path<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" kindref="member">dbus_message_get_path</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusObjectTree_1gab282b916368cd512842d3aaae31e65c7" kindref="member">_dbus_decompose_path</ref><sp/>(v,<sp/>strlen<sp/>(v),</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3198" refid="group__DBusMessage_1ga02b754855e4d9a1cade8e4fc17a3f5c7" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga02b754855e4d9a1cade8e4fc17a3f5c7" kindref="member">dbus_message_set_interface</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*iface)</highlight></codeline>
<codeline lineno="3200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(iface<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_interface<sp/>(iface),</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>,</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iface);</highlight></codeline>
<codeline lineno="3211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3227" refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" kindref="member">dbus_message_get_interface</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>field<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>,</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;v);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3249" refid="group__DBusMessage_1ga0d1debd1c101a80c386d6ec92cdb1d93" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga0d1debd1c101a80c386d6ec92cdb1d93" kindref="member">dbus_message_has_interface</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*iface)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg_interface;</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/>msg_interface<sp/>=<sp/><ref refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" kindref="member">dbus_message_get_interface</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_interface<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iface<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iface<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(msg_interface,<sp/>iface)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3286" refid="group__DBusMessage_1ga3afdda6016816cc70b451d8657065208" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga3afdda6016816cc70b451d8657065208" kindref="member">dbus_message_set_member</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*member)</highlight></codeline>
<codeline lineno="3288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(member<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_member<sp/>(member),</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>,</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>member);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3313" refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" kindref="member">dbus_message_get_member</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>field<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>,</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;v);</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3335" refid="group__DBusMessage_1gad7021a30bf930f8090bc38f862f19adb" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gad7021a30bf930f8090bc38f862f19adb" kindref="member">dbus_message_has_member</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*member)</highlight></codeline>
<codeline lineno="3337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg_member;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/>msg_member<sp/>=<sp/><ref refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" kindref="member">dbus_message_get_member</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_member<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(msg_member,<sp/>member)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3371" refid="group__DBusMessage_1ga892f9857707371c2a53cec6b54c843c7" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga892f9857707371c2a53cec6b54c843c7" kindref="member">dbus_message_set_error_name</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*error_name)</highlight></codeline>
<codeline lineno="3373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(error_name<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_error_name<sp/>(error_name),</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>,</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_name);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3397" refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" kindref="member">dbus_message_get_error_name</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>field<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>,</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;v);</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="3409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3425" refid="group__DBusMessage_1gacc47c1af23addfc4198b70084ba068fc" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gacc47c1af23addfc4198b70084ba068fc" kindref="member">dbus_message_set_destination</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*destination)</highlight></codeline>
<codeline lineno="3427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(destination<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_bus_name<sp/>(destination),</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>,</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destination);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3450" refid="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" kindref="member">dbus_message_get_destination</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>field<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>,</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;v);</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="3462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3479" refid="group__DBusMessage_1gaa2170744c2c19217d9df02551f16bc92" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaa2170744c2c19217d9df02551f16bc92" kindref="member">dbus_message_set_sender</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*sender)</highlight></codeline>
<codeline lineno="3481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(sender<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_check_is_valid_bus_name<sp/>(sender),</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_or_delete_string_field<sp/>(message,</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" kindref="member">DBUS_HEADER_FIELD_SENDER</ref>,</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sender);</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3510" refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" kindref="member">dbus_message_get_sender</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>case<sp/>field<sp/>doesn&apos;t<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" kindref="member">DBUS_HEADER_FIELD_SENDER</ref>,</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>&amp;v);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="3543" refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" kindref="member">dbus_message_get_signature</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_pos;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/>get_const_signature<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>&amp;type_str,<sp/>&amp;type_pos);</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_string_get_const_data_len<sp/>(type_str,<sp/>type_pos,<sp/>0);</highlight></codeline>
<codeline lineno="3553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3556"><highlight class="normal">_dbus_message_has_type_interface_member<sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*iface,</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*member)</highlight></codeline>
<codeline lineno="3560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n;</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(iface<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(member<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" kindref="member">dbus_message_get_type</ref><sp/>(message)<sp/>!=<sp/>type)</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Optimize<sp/>by<sp/>checking<sp/>the<sp/>short<sp/>member<sp/>name<sp/>first</highlight></codeline>
<codeline lineno="3571"><highlight class="comment"><sp/><sp/><sp/>*<sp/>instead<sp/>of<sp/>the<sp/>longer<sp/>interface<sp/>name</highlight></codeline>
<codeline lineno="3572"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/><ref refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" kindref="member">dbus_message_get_member</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;&amp;<sp/>strcmp<sp/>(n,<sp/>member)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" kindref="member">dbus_message_get_interface</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>strcmp<sp/>(n,<sp/>iface)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3602" refid="group__DBusMessage_1gad8bd4730941af47d8d0f9c9b00562a44" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gad8bd4730941af47d8d0f9c9b00562a44" kindref="member">dbus_message_is_method_call</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*iface,</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*method)</highlight></codeline>
<codeline lineno="3605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(iface<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(method<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>check<sp/>that<sp/>interface/method<sp/>are<sp/>valid<sp/>since<sp/>it<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="3610"><highlight class="comment"><sp/><sp/><sp/>*<sp/>expensive,<sp/>and<sp/>not<sp/>catch<sp/>many<sp/>common<sp/>errors</highlight></codeline>
<codeline lineno="3611"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_message_has_type_interface_member<sp/>(message,</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>,</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iface,<sp/>method);</highlight></codeline>
<codeline lineno="3616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3630" refid="group__DBusMessage_1gaed0e32329f142cc246662227c81d5d1f" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaed0e32329f142cc246662227c81d5d1f" kindref="member">dbus_message_is_signal</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*iface,</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*signal_name)</highlight></codeline>
<codeline lineno="3633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(iface<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(signal_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>check<sp/>that<sp/>interface/name<sp/>are<sp/>valid<sp/>since<sp/>it<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="3638"><highlight class="comment"><sp/><sp/><sp/>*<sp/>expensive,<sp/>and<sp/>not<sp/>catch<sp/>many<sp/>common<sp/>errors</highlight></codeline>
<codeline lineno="3639"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dbus_message_has_type_interface_member<sp/>(message,</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>,</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iface,<sp/>signal_name);</highlight></codeline>
<codeline lineno="3644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3657" refid="group__DBusMessage_1ga70ef9d7fad409666a0b5f3a8d4f0dd92" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga70ef9d7fad409666a0b5f3a8d4f0dd92" kindref="member">dbus_message_is_error</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*error_name)</highlight></codeline>
<codeline lineno="3659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n;</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(error_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>check<sp/>that<sp/>error_name<sp/>is<sp/>valid<sp/>since<sp/>it<sp/>would<sp/>be<sp/>expensive,</highlight></codeline>
<codeline lineno="3665"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>not<sp/>catch<sp/>many<sp/>common<sp/>errors</highlight></codeline>
<codeline lineno="3666"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" kindref="member">dbus_message_get_type</ref><sp/>(message)<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>)</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/>n<sp/>=<sp/><ref refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" kindref="member">dbus_message_get_error_name</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;&amp;<sp/>strcmp<sp/>(n,<sp/>error_name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3690" refid="group__DBusMessage_1ga017cb8d960d4c360cb6b30ded5292509" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga017cb8d960d4c360cb6b30ded5292509" kindref="member">dbus_message_has_destination</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*name)</highlight></codeline>
<codeline lineno="3692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>check<sp/>that<sp/>name<sp/>is<sp/>valid<sp/>since<sp/>it<sp/>would<sp/>be<sp/>expensive,<sp/>and</highlight></codeline>
<codeline lineno="3698"><highlight class="comment"><sp/><sp/><sp/>*<sp/>not<sp/>catch<sp/>many<sp/>common<sp/>errors</highlight></codeline>
<codeline lineno="3699"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" kindref="member">dbus_message_get_destination</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&amp;&amp;<sp/>strcmp<sp/>(s,<sp/>name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3725" refid="group__DBusMessage_1ga332fb0c71efcd1e9ef43ebdf2a25350c" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga332fb0c71efcd1e9ef43ebdf2a25350c" kindref="member">dbus_message_has_sender</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*name)</highlight></codeline>
<codeline lineno="3727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>check<sp/>that<sp/>name<sp/>is<sp/>valid<sp/>since<sp/>it<sp/>would<sp/>be<sp/>expensive,<sp/>and</highlight></codeline>
<codeline lineno="3733"><highlight class="comment"><sp/><sp/><sp/>*<sp/>not<sp/>catch<sp/>many<sp/>common<sp/>errors</highlight></codeline>
<codeline lineno="3734"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" kindref="member">dbus_message_get_sender</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&amp;&amp;<sp/>strcmp<sp/>(s,<sp/>name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3754" refid="group__DBusMessage_1ga8d563a936b6147f12dce7f24df3557b7" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga8d563a936b6147f12dce7f24df3557b7" kindref="member">dbus_message_has_signature</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*signature)</highlight></codeline>
<codeline lineno="3756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(signature<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>check<sp/>that<sp/>signature<sp/>is<sp/>valid<sp/>since<sp/>it<sp/>would<sp/>be<sp/>expensive,</highlight></codeline>
<codeline lineno="3762"><highlight class="comment"><sp/><sp/><sp/>*<sp/>and<sp/>not<sp/>catch<sp/>many<sp/>common<sp/>errors</highlight></codeline>
<codeline lineno="3763"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/><ref refid="group__DBusMessage_1gaed63e4c2baaa50d782e8ebb7643def19" kindref="member">dbus_message_get_signature</ref><sp/>(message);</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&amp;&amp;<sp/>strcmp<sp/>(s,<sp/>signature)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3796" refid="group__DBusMessage_1gaba5e49e956e6bbd1f857ffd21c289276" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1gaba5e49e956e6bbd1f857ffd21c289276" kindref="member">dbus_set_error_from_message</ref><sp/>(<ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/><sp/>*error,</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_error_is_set<sp/>(error,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" kindref="member">dbus_message_get_type</ref><sp/>(message)<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>)</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessage_1gad8953f53ceea7de81cde792e3edd0230" kindref="member">dbus_message_get_args</ref><sp/>(message,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,<sp/>&amp;str,</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" kindref="member">dbus_message_get_error_name</ref><sp/>(message),</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal"><sp/>:<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="3825" refid="group__DBusMessage_1ga7436b74471eb3642f81fd456f8f2b69c" refkind="member"><highlight class="normal"><ref refid="group__DBusMessage_1ga7436b74471eb3642f81fd456f8f2b69c" kindref="member">dbus_message_contains_unix_fds</ref>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="3826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(message);</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message-&gt;n_unix_fds<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight></codeline>
<codeline lineno="3854" refid="group__DBusMessageInternals_1gacbe0bfe7a9551ab0489a0ec9aba6e94e" refkind="member"><highlight class="preprocessor">#define<sp/>INITIAL_LOADER_DATA_LEN<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref>*</highlight></codeline>
<codeline lineno="3863" refid="group__DBusMessageInternals_1ga66f1c10cf909ba09ed732bc125ff8671" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga66f1c10cf909ba09ed732bc125ff8671" kindref="member">_dbus_message_loader_new</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3864"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/>loader<sp/>=<sp/><ref refid="group__DBusMemory_1gaba9d823abda7f4cadbaf5177d3b8b793" kindref="member">dbus_new0</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loader<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" kindref="member">refcount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>can<sp/>be<sp/>configured<sp/>by<sp/>the<sp/>app,<sp/>but<sp/>defaults<sp/>to<sp/>the<sp/>protocol<sp/>max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" kindref="member">max_message_size</ref><sp/>=<sp/><ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>;</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>set<sp/>a<sp/>very<sp/>relatively<sp/>conservative<sp/>default<sp/>here<sp/>since<sp/>due<sp/>to<sp/>how</highlight></codeline>
<codeline lineno="3880"><highlight class="comment"><sp/><sp/>SCM_RIGHTS<sp/>works<sp/>we<sp/>need<sp/>to<sp/>preallocate<sp/>an<sp/>fd<sp/>array<sp/>of<sp/>the<sp/>maximum</highlight></codeline>
<codeline lineno="3881"><highlight class="comment"><sp/><sp/>number<sp/>of<sp/>unix<sp/>fds<sp/>we<sp/>want<sp/>to<sp/>receive<sp/>in<sp/>advance.<sp/>A</highlight></codeline>
<codeline lineno="3882"><highlight class="comment"><sp/><sp/>try-and-reallocate<sp/>loop<sp/>is<sp/>not<sp/>possible.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" kindref="member">max_message_unix_fds</ref><sp/>=<sp/>DBUS_DEFAULT_MESSAGE_UNIX_FDS;</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>))</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(loader);</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>preallocate<sp/>the<sp/>buffer<sp/>for<sp/>speed,<sp/>ignore<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/><ref refid="group__DBusMessageInternals_1gacbe0bfe7a9551ab0489a0ec9aba6e94e" kindref="member">INITIAL_LOADER_DATA_LEN</ref>);</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight></codeline>
<codeline lineno="3895"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/>loader-&gt;unix_fds<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/>loader-&gt;n_unix_fds<sp/>=<sp/>loader-&gt;n_unix_fds_allocated<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/>loader-&gt;unix_fds_outstanding<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader;</highlight></codeline>
<codeline lineno="3902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*</highlight></codeline>
<codeline lineno="3911" refid="group__DBusMessageInternals_1gad39efb9ff20c7538f12e164a6920edc4" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gad39efb9ff20c7538f12e164a6920edc4" kindref="member">_dbus_message_loader_ref</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="3912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" kindref="member">refcount</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader;</highlight></codeline>
<codeline lineno="3916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3925" refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" kindref="member">_dbus_message_loader_unref</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="3926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" kindref="member">refcount</ref><sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1af3372b7d574dab49a7435d8f29ea2258" kindref="member">refcount</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>close_unix_fds(loader-&gt;unix_fds,<sp/>&amp;loader-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref>(loader-&gt;unix_fds);</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1ga8dd69084b53361803a765e6d53d5b9d1" kindref="member">_dbus_list_foreach</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>,</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__DBusInternalsUtils_1ga692fe3070eecaffa172266d2f138fd69" kindref="member">DBusForeachFunction</ref>)<sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref>,</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusList_1gaa36d13444a050a923941c53650b72f9d" kindref="member">_dbus_list_clear</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>);</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(loader);</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962" refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" kindref="member">_dbus_message_loader_get_buffer</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**buffer)</highlight></codeline>
<codeline lineno="3964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!loader-&gt;<ref refid="structDBusMessageLoader_1a7fe926ecd87e9ddb37e7481195bc3d67" kindref="member">buffer_outstanding</ref>);</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"></highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/>*buffer<sp/>=<sp/>&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7fe926ecd87e9ddb37e7481195bc3d67" kindref="member">buffer_outstanding</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3982" refid="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" kindref="member">_dbus_message_loader_return_buffer</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buffer)</highlight></codeline>
<codeline lineno="3984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1a7fe926ecd87e9ddb37e7481195bc3d67" kindref="member">buffer_outstanding</ref>);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(buffer<sp/>==<sp/>&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7fe926ecd87e9ddb37e7481195bc3d67" kindref="member">buffer_outstanding</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4002" refid="group__DBusMessageInternals_1ga4ed7327f9dee98711ebd7c9e5b74dec0" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga4ed7327f9dee98711ebd7c9e5b74dec0" kindref="member">_dbus_message_loader_get_unix_fds</ref>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**fds,</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*max_n_fds)</highlight></codeline>
<codeline lineno="4005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!loader-&gt;unix_fds_outstanding);</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>where<sp/>we<sp/>can<sp/>put<sp/>the<sp/>fds<sp/>we<sp/>read.<sp/>We<sp/>allocate</highlight></codeline>
<codeline lineno="4010"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>space<sp/>for<sp/>max_message_unix_fds<sp/>since<sp/>this<sp/>is<sp/>an</highlight></codeline>
<codeline lineno="4011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>upper<sp/>limit<sp/>how<sp/>many<sp/>fds<sp/>can<sp/>be<sp/>received<sp/>within<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="4012"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>message.<sp/>Since<sp/>SCM_RIGHTS<sp/>doesn&apos;t<sp/>allow<sp/>a<sp/>reallocate+retry<sp/>logic</highlight></codeline>
<codeline lineno="4013"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>we<sp/>are<sp/>allocating<sp/>the<sp/>maximum<sp/>possible<sp/>array<sp/>size<sp/>right<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="4014"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>beginning.<sp/>This<sp/>sucks<sp/>a<sp/>bit,<sp/>however<sp/>unless<sp/>SCM_RIGHTS<sp/>is<sp/>fixed</highlight></codeline>
<codeline lineno="4015"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>there<sp/>is<sp/>no<sp/>better<sp/>way.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loader-&gt;n_unix_fds_allocated<sp/>&lt;<sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" kindref="member">max_message_unix_fds</ref>)</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/><ref refid="group__DBusMemory_1ga2d505f2960ccf343042d363170b27f9c" kindref="member">dbus_realloc</ref>(loader-&gt;unix_fds,</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" kindref="member">max_message_unix_fds</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(loader-&gt;unix_fds[0]));</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a)</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;unix_fds<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;n_unix_fds_allocated<sp/>=<sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" kindref="member">max_message_unix_fds</ref>;</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/>*fds<sp/>=<sp/>loader-&gt;unix_fds<sp/>+<sp/>loader-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/>*max_n_fds<sp/>=<sp/>loader-&gt;n_unix_fds_allocated<sp/>-<sp/>loader-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/>loader-&gt;unix_fds_outstanding<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref>(</highlight><highlight class="stringliteral">&quot;Platform<sp/>doesn&apos;t<sp/>support<sp/>unix<sp/>fd<sp/>passing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4051" refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" kindref="member">_dbus_message_loader_return_unix_fds</ref>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fds,</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_fds)</highlight></codeline>
<codeline lineno="4054"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(loader-&gt;unix_fds_outstanding);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(loader-&gt;unix_fds<sp/>+<sp/>loader-&gt;n_unix_fds<sp/>==<sp/>fds);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref>(loader-&gt;n_unix_fds<sp/>+<sp/>n_fds<sp/>&lt;=<sp/>loader-&gt;n_unix_fds_allocated);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/>loader-&gt;n_unix_fds<sp/>+=<sp/>n_fds;</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/>loader-&gt;unix_fds_outstanding<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_fds<sp/>&amp;&amp;<sp/>loader-&gt;unix_fds_change)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/>loader-&gt;unix_fds_change<sp/>(loader-&gt;unix_fds_change_data);</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref>(</highlight><highlight class="stringliteral">&quot;Platform<sp/>doesn&apos;t<sp/>support<sp/>unix<sp/>fd<sp/>passing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4071"><highlight class="comment"><sp/>*<sp/>FIXME<sp/>when<sp/>we<sp/>move<sp/>the<sp/>header<sp/>out<sp/>of<sp/>the<sp/>buffer,<sp/>that<sp/>memmoves<sp/>all</highlight></codeline>
<codeline lineno="4072"><highlight class="comment"><sp/>*<sp/>buffered<sp/>messages.<sp/>Kind<sp/>of<sp/>crappy.</highlight></codeline>
<codeline lineno="4073"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4074"><highlight class="comment"><sp/>*<sp/>Also<sp/>we<sp/>copy<sp/>the<sp/>header<sp/>and<sp/>body,<sp/>which<sp/>is<sp/>kind<sp/>of<sp/>crappy.<sp/><sp/>To</highlight></codeline>
<codeline lineno="4075"><highlight class="comment"><sp/>*<sp/>avoid<sp/>this,<sp/>we<sp/>have<sp/>to<sp/>allow<sp/>header<sp/>and<sp/>body<sp/>to<sp/>be<sp/>in<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="4076"><highlight class="comment"><sp/>*<sp/>memory<sp/>block,<sp/>which<sp/>is<sp/>good<sp/>for<sp/>messages<sp/>we<sp/>read<sp/>and<sp/>bad<sp/>for</highlight></codeline>
<codeline lineno="4077"><highlight class="comment"><sp/>*<sp/>messages<sp/>we<sp/>are<sp/>creating.<sp/>But<sp/>we<sp/>could<sp/>move_len()<sp/>the<sp/>buffer<sp/>into</highlight></codeline>
<codeline lineno="4078"><highlight class="comment"><sp/>*<sp/>this<sp/>single<sp/>memory<sp/>block,<sp/>and<sp/>move_len()<sp/>will<sp/>just<sp/>swap<sp/>the<sp/>buffers</highlight></codeline>
<codeline lineno="4079"><highlight class="comment"><sp/>*<sp/>if<sp/>you&apos;re<sp/>moving<sp/>the<sp/>entire<sp/>buffer<sp/>replacing<sp/>the<sp/>dest<sp/>string.</highlight></codeline>
<codeline lineno="4080"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4081"><highlight class="comment"><sp/>*<sp/>We<sp/>could<sp/>also<sp/>have<sp/>the<sp/>message<sp/>loader<sp/>tell<sp/>the<sp/>transport<sp/>how<sp/>many</highlight></codeline>
<codeline lineno="4082"><highlight class="comment"><sp/>*<sp/>bytes<sp/>to<sp/>read;<sp/>so<sp/>it<sp/>would<sp/>first<sp/>ask<sp/>for<sp/>some<sp/>arbitrary<sp/>number<sp/>like</highlight></codeline>
<codeline lineno="4083"><highlight class="comment"><sp/>*<sp/>256,<sp/>then<sp/>if<sp/>the<sp/>message<sp/>was<sp/>incomplete<sp/>it<sp/>would<sp/>use<sp/>the</highlight></codeline>
<codeline lineno="4084"><highlight class="comment"><sp/>*<sp/>header/body<sp/>len<sp/>to<sp/>ask<sp/>for<sp/>exactly<sp/>the<sp/>size<sp/>of<sp/>the<sp/>message<sp/>(or</highlight></codeline>
<codeline lineno="4085"><highlight class="comment"><sp/>*<sp/>blocks<sp/>the<sp/>size<sp/>of<sp/>a<sp/>typical<sp/>kernel<sp/>buffer<sp/>for<sp/>the<sp/>socket).<sp/>That</highlight></codeline>
<codeline lineno="4086"><highlight class="comment"><sp/>*<sp/>way<sp/>we<sp/>don&apos;t<sp/>get<sp/>trailing<sp/>bytes<sp/>in<sp/>the<sp/>buffer<sp/>that<sp/>have<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="4087"><highlight class="comment"><sp/>*<sp/>memmoved.<sp/>Though<sp/>I<sp/>suppose<sp/>we<sp/>also<sp/>don&apos;t<sp/>have<sp/>a<sp/>chance<sp/>of<sp/>reading<sp/>a</highlight></codeline>
<codeline lineno="4088"><highlight class="comment"><sp/>*<sp/>bunch<sp/>of<sp/>small<sp/>messages<sp/>at<sp/>once,<sp/>so<sp/>the<sp/>optimization<sp/>may<sp/>be<sp/>stupid.</highlight></codeline>
<codeline lineno="4089"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4090"><highlight class="comment"><sp/>*<sp/>Another<sp/>approach<sp/>would<sp/>be<sp/>to<sp/>keep<sp/>a<sp/>&quot;start&quot;<sp/>index<sp/>into</highlight></codeline>
<codeline lineno="4091"><highlight class="comment"><sp/>*<sp/>loader-&gt;data<sp/>and<sp/>only<sp/>delete<sp/>it<sp/>occasionally,<sp/>instead<sp/>of<sp/>after</highlight></codeline>
<codeline lineno="4092"><highlight class="comment"><sp/>*<sp/>each<sp/>message<sp/>is<sp/>loaded.</highlight></codeline>
<codeline lineno="4093"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4094"><highlight class="comment"><sp/>*<sp/>load_message()<sp/>returns<sp/>FALSE<sp/>if<sp/>not<sp/>enough<sp/>memory<sp/>OR<sp/>the<sp/>loader<sp/>was<sp/>corrupted</highlight></codeline>
<codeline lineno="4095"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4097"><highlight class="normal">load_message<sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader,</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fields_array_len,</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_len,</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len)</highlight></codeline>
<codeline lineno="4103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>oom;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref><sp/>validity;</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*type_str;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type_pos;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" kindref="member">DBusValidationMode</ref><sp/>mode;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>n_unix_fds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/>mode<sp/>=<sp/>DBUS_VALIDATION_MODE_DATA_IS_UNTRUSTED;</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/>oom<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>0,<sp/>header_len<sp/></highlight><highlight class="comment">/*<sp/>+<sp/>body_len<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.<sp/>VALIDATE<sp/>AND<sp/>COPY<sp/>OVER<sp/>HEADER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>.<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((header_len<sp/>+<sp/>body_len)<sp/>&lt;=<sp/>_dbus_string_get_length<sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>));</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" kindref="member">_dbus_header_load</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;validity,</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fields_array_len,</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_len,</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len,</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>)))</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>header<sp/>for<sp/>new<sp/>message<sp/>code<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>validity);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assert<sp/>here<sp/>so<sp/>we<sp/>can<sp/>catch<sp/>any<sp/>code<sp/>that<sp/>still<sp/>uses<sp/>DBUS_VALID<sp/>to<sp/>indicate</highlight></codeline>
<codeline lineno="4136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oom<sp/>errors.<sp/><sp/>They<sp/>should<sp/>use<sp/>DBUS_VALIDITY_UNKNOWN_OOM_ERROR<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(validity<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>);</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validity<sp/>==<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" kindref="member">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</ref>)</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oom<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>=<sp/>validity;</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(validity<sp/>==<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>);</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>2.<sp/>VALIDATE<sp/>BODY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY)</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>get_const_signature<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,<sp/>&amp;type_str,<sp/>&amp;type_pos);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Because<sp/>the<sp/>bytes_remaining<sp/>arg<sp/>is<sp/>NULL,<sp/>this<sp/>validates<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="4157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>body<sp/>is<sp/>the<sp/>right<sp/>length</highlight></codeline>
<codeline lineno="4158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" kindref="member">_dbus_validate_body_with_reason</ref><sp/>(type_str,</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_pos,</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_len,</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len);</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validity<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>validate<sp/>message<sp/>body<sp/>code<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>validity);</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"></highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>=<sp/>validity;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>3.<sp/>COPY<sp/>OVER<sp/>UNIX<sp/>FDS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" kindref="member">DBUS_HEADER_FIELD_UNIX_FDS</ref>,</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;n_unix_fds);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"></highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_unix_fds<sp/>&gt;<sp/>loader-&gt;n_unix_fds)</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose(</highlight><highlight class="stringliteral">&quot;Message<sp/>contains<sp/>references<sp/>to<sp/>more<sp/>unix<sp/>fds<sp/>than<sp/>were<sp/>sent<sp/>%u<sp/>!=<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_unix_fds,<sp/>loader-&gt;n_unix_fds);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>=<sp/>DBUS_INVALID_MISSING_UNIX_FDS;</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>this<sp/>was<sp/>a<sp/>recycled<sp/>message<sp/>there<sp/>might<sp/>still<sp/>be</highlight></codeline>
<codeline lineno="4196"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>some<sp/>memory<sp/>allocated<sp/>for<sp/>the<sp/>fds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref>(message-&gt;unix_fds);</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_unix_fds<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;unix_fds<sp/>=<sp/><ref refid="group__DBusInternalsUtils_1gaad95864dca5140b730bc143cb2d1b024" kindref="member">_dbus_memdup</ref>(loader-&gt;unix_fds,<sp/>n_unix_fds<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message-&gt;unix_fds[0]));</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message-&gt;unix_fds<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>file<sp/>descriptor<sp/>array\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oom<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message-&gt;n_unix_fds_allocated<sp/>=<sp/>message-&gt;n_unix_fds<sp/>=<sp/>n_unix_fds;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;n_unix_fds<sp/>-=<sp/>n_unix_fds;</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove<sp/>(loader-&gt;unix_fds,<sp/>loader-&gt;unix_fds<sp/>+<sp/>n_unix_fds,<sp/>loader-&gt;n_unix_fds<sp/>*<sp/>sizeof<sp/>(loader-&gt;unix_fds[0]));</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loader-&gt;unix_fds_change)</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;unix_fds_change<sp/>(loader-&gt;unix_fds_change_data);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/>message-&gt;unix_fds<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_unix_fds<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Hmm,<sp/>message<sp/>claims<sp/>to<sp/>come<sp/>with<sp/>file<sp/>descriptors<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;but<sp/>that&apos;s<sp/>not<sp/>supported<sp/>on<sp/>our<sp/>platform,<sp/>disconnecting.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>=<sp/>DBUS_INVALID_MISSING_UNIX_FDS;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"></highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>3.<sp/>COPY<sp/>OVER<sp/>BODY<sp/>AND<sp/>QUEUE<sp/>MESSAGE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusList_1gad99045e79db46159babe69718f343053" kindref="member">_dbus_list_append</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>,<sp/>message))</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>append<sp/>new<sp/>message<sp/>to<sp/>loader<sp/>queue\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oom<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>)<sp/>&gt;=</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(header_len<sp/>+<sp/>body_len));</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" kindref="member">_dbus_string_copy_len</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>header_len,<sp/>body_len,<sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>,<sp/>0))</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>move<sp/>body<sp/>into<sp/>new<sp/>message\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oom<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>failed;</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" kindref="member">_dbus_string_delete</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>0,<sp/>header_len<sp/>+<sp/>body_len);</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>waste<sp/>more<sp/>than<sp/>2k<sp/>of<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1gac49ec5782ca606029c096124b5e43ffc" kindref="member">_dbus_string_compact</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>2048);</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>.<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>==<sp/>header_len);</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>)<sp/>==<sp/>body_len);</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Loaded<sp/>message<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!oom);</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref>);</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusList_1ga5929ad5253d2f538158e513e9df3002b" kindref="member">_dbus_list_find_last</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>,<sp/>message)<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/>failed:</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clean<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>does<sp/>nothing<sp/>if<sp/>the<sp/>message<sp/>isn&apos;t<sp/>in<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1gad93f1fc853914144e94fc7a7dc0945aa" kindref="member">_dbus_list_remove_last</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>,<sp/>message);</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oom)</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref>);</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref>);</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga3926bb35edf78d114cf0c341fe3258e0" kindref="member">_dbus_verbose_bytes_of_string</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>0,<sp/>_dbus_string_get_length<sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>));</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4302" refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" kindref="member">_dbus_message_loader_queue_messages</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>)<sp/>&gt;=<sp/><ref refid="group__DBusProtocol_1gaf8c13dd883c21b5dea179d77d8ac12e3" kindref="member">DBUS_MINIMUM_HEADER_SIZE</ref>)</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref><sp/>validity;</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byte_order,<sp/>fields_array_len,<sp/>header_len,<sp/>body_len;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted</ref><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" kindref="member">max_message_size</ref>,</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;validity,</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;byte_order,</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fields_array_len,</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header_len,</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;body_len,</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a33c22d4f64a32a72faefb1df94fcfed1" kindref="member">data</ref>)))</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*<ref refid="structDBusMessageRealIter_1a552cb582c65645ed46d9d1ad38ece3c7" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(validity<sp/>==<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>dbus_message_new_empty_header<sp/>();</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"></highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!load_message<sp/>(loader,<sp/>message,</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,<sp/>fields_array_len,</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_len,<sp/>body_len))</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMessage_1gab69441efe683918f6a82469c8763f464" kindref="member">dbus_message_unref</ref><sp/>(message);</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>load_message()<sp/>returns<sp/>false<sp/>if<sp/>corrupted<sp/>or<sp/>OOM;<sp/>if</highlight></codeline>
<codeline lineno="4333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>corrupted<sp/>then<sp/>return<sp/>TRUE<sp/>for<sp/>not<sp/>OOM</highlight></codeline>
<codeline lineno="4334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref>;</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref><sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusList_1ga5929ad5253d2f538158e513e9df3002b" kindref="member">_dbus_list_find_last</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>,<sp/>message)<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Initial<sp/>peek<sp/>at<sp/>header<sp/>says<sp/>we<sp/>don&apos;t<sp/>have<sp/>a<sp/>whole<sp/>message<sp/>yet,<sp/>or<sp/>data<sp/>broken<sp/>with<sp/>invalid<sp/>code<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validity);</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validity<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>=<sp/>validity;</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="4365" refid="group__DBusMessageInternals_1ga66674354acdd09ca6e11d600b34bdd5f" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga66674354acdd09ca6e11d600b34bdd5f" kindref="member">_dbus_message_loader_peek_message</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>)</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>-&gt;<ref refid="structDBusList_1a29ab457bcf9092252bb0c4282c727055" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref>*</highlight></codeline>
<codeline lineno="4382" refid="group__DBusMessageInternals_1ga9e5e75716d7263d9908d45a60b1b6bdc" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga9e5e75716d7263d9908d45a60b1b6bdc" kindref="member">_dbus_message_loader_pop_message</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusList_1gacb96c9d3e9a869e63b8db4f8913a5a60" kindref="member">_dbus_list_pop_first</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>);</highlight></codeline>
<codeline lineno="4385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><ref refid="structDBusList" kindref="compound">DBusList</ref>*</highlight></codeline>
<codeline lineno="4396" refid="group__DBusMessageInternals_1ga6ec3c1ad57340f717a47d79092122d04" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga6ec3c1ad57340f717a47d79092122d04" kindref="member">_dbus_message_loader_pop_message_link</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusList_1gaab9a957eca9bf5466bbf377a23b4b25c" kindref="member">_dbus_list_pop_first_link</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>);</highlight></codeline>
<codeline lineno="4399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"></highlight></codeline>
<codeline lineno="4407"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4408" refid="group__DBusMessageInternals_1ga71b290eb470a55217971fcd6851fc40c" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga71b290eb470a55217971fcd6851fc40c" kindref="member">_dbus_message_loader_putback_message_link</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusList" kindref="compound">DBusList</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*link)</highlight></codeline>
<codeline lineno="4410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><ref refid="group__DBusList_1gab3dd068e3bd8a319c0d12150785050a7" kindref="member">_dbus_list_prepend_link</ref><sp/>(&amp;loader-&gt;<ref refid="structDBusMessageLoader_1a5ad667f9a5b58d23f2089e7cea58f6cc" kindref="member">messages</ref>,<sp/>link);</highlight></codeline>
<codeline lineno="4412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4424" refid="group__DBusMessageInternals_1ga38da52ac9344b00df530098bdd9a3842" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga38da52ac9344b00df530098bdd9a3842" kindref="member">_dbus_message_loader_get_is_corrupted</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>&amp;&amp;<sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)<sp/>||</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>&amp;&amp;<sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>==<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>));</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref>;</highlight></codeline>
<codeline lineno="4429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></highlight></codeline>
<codeline lineno="4438" refid="group__DBusMessageInternals_1gafb8c42ed5242274586607812ff6fba10" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gafb8c42ed5242274586607812ff6fba10" kindref="member">_dbus_message_loader_get_corruption_reason</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>((loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>&amp;&amp;<sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)<sp/>||</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!loader-&gt;<ref refid="structDBusMessageLoader_1a7af27694794dc471ed3b251da8d7c62e" kindref="member">corrupted</ref><sp/>&amp;&amp;<sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref><sp/>==<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>));</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref>;</highlight></codeline>
<codeline lineno="4444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4453" refid="group__DBusMessageInternals_1ga031623c6235f98801cab3e53f0a5f757" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga031623c6235f98801cab3e53f0a5f757" kindref="member">_dbus_message_loader_set_max_message_size</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size)</highlight></codeline>
<codeline lineno="4455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/><ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>)</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;clamping<sp/>requested<sp/>max<sp/>message<sp/>size<sp/>%ld<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,<sp/><ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/><ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" kindref="member">max_message_size</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472" refid="group__DBusMessageInternals_1gadd76a4b7191465f2dcb8e6b56b717961" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gadd76a4b7191465f2dcb8e6b56b717961" kindref="member">_dbus_message_loader_get_max_message_size</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a174d67695b3aca6ee3bb8e1e5e033334" kindref="member">max_message_size</ref>;</highlight></codeline>
<codeline lineno="4475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4484" refid="group__DBusMessageInternals_1gadd6c0fa721b4340df936363fbde912dc" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gadd6c0fa721b4340df936363fbde912dc" kindref="member">_dbus_message_loader_set_max_message_unix_fds</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader,</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n)</highlight></codeline>
<codeline lineno="4486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/><ref refid="group__DBusProtocol_1ga2735432928240c083c72a5f5d23ec6a1" kindref="member">DBUS_MAXIMUM_MESSAGE_UNIX_FDS</ref>)</highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;clamping<sp/>requested<sp/>max<sp/>message<sp/>unix_fds<sp/>%ld<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,<sp/><ref refid="group__DBusProtocol_1ga2735432928240c083c72a5f5d23ec6a1" kindref="member">DBUS_MAXIMUM_MESSAGE_UNIX_FDS</ref>);</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="group__DBusProtocol_1ga2735432928240c083c72a5f5d23ec6a1" kindref="member">DBUS_MAXIMUM_MESSAGE_UNIX_FDS</ref>;</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" kindref="member">max_message_unix_fds</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="4494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4503" refid="group__DBusMessageInternals_1gaf65867d15c7d8adb91f430c483c180be" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gaf65867d15c7d8adb91f430c483c180be" kindref="member">_dbus_message_loader_get_max_message_unix_fds</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/><sp/>*loader)</highlight></codeline>
<codeline lineno="4504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;<ref refid="structDBusMessageLoader_1a2134a617c0d631d946adee1f08443851" kindref="member">max_message_unix_fds</ref>;</highlight></codeline>
<codeline lineno="4506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"></highlight></codeline>
<codeline lineno="4513"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4514" refid="group__DBusMessageInternals_1ga8e01aad6af940ec4051703f59330da37" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga8e01aad6af940ec4051703f59330da37" kindref="member">_dbus_message_loader_get_pending_fds_count</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader)</highlight></codeline>
<codeline lineno="4515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loader-&gt;n_unix_fds;</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4532" refid="group__DBusMessageInternals_1ga658a91d8efc59934016fae6905bfc4bf" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga658a91d8efc59934016fae6905bfc4bf" kindref="member">_dbus_message_loader_set_pending_fds_function</ref><sp/>(<ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader,</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<sp/>callback)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="4535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_UNIX_FD_PASSING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/>loader-&gt;unix_fds_change<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/>loader-&gt;unix_fds_change_data<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight></codeline>
<codeline lineno="4542"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDBusDataSlotAllocator" kindref="compound">DBusDataSlotAllocator</ref><sp/>slot_allocator<sp/>=</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/>_DBUS_DATA_SLOT_ALLOCATOR_INIT<sp/>(<ref refid="group__DBusInternalsUtils_1gade571435b55fae64217f5142aa78ee8d" kindref="member">_DBUS_LOCK_NAME</ref><sp/>(message_slots));</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4560" refid="group__DBusMessage_1gafdde8db1152649d37c9f7e316ca59e56" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga537b3456202fdd9f305666504bde98fb" kindref="member">dbus_message_allocate_data_slot</ref><sp/>(<ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref><sp/>*slot_p)</highlight></codeline>
<codeline lineno="4561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusDataSlot_1gaf61f2bd0148bace4f67a2d6d97b26ea9" kindref="member">_dbus_data_slot_allocator_alloc</ref><sp/>(&amp;slot_allocator,</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot_p);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4578" refid="group__DBusMessage_1ga23227ce2bd5c52d05581d3fe1232ae66" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gac7a5ba135e1aec4ad8c7b43752af02e1" kindref="member">dbus_message_free_data_slot</ref><sp/>(<ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref><sp/>*slot_p)</highlight></codeline>
<codeline lineno="4579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(*slot_p<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="4581"><highlight class="normal"></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><sp/><sp/><ref refid="group__DBusDataSlot_1ga059c50a24cd9fc984e918e6159841633" kindref="member">_dbus_data_slot_allocator_free</ref><sp/>(&amp;slot_allocator,<sp/>slot_p);</highlight></codeline>
<codeline lineno="4583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4599" refid="group__DBusMessage_1ga29331c4e9c2d53cbe60382056f6495a1" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga69d0bc701f9ca935e6de8a3f3e376c0a" kindref="member">dbus_message_set_data</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref><sp/><sp/><sp/><sp/><sp/>slot,</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data,</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/>free_data_func)</highlight></codeline>
<codeline lineno="4603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga061bcded226d76c7d7de35beaa165cb5" kindref="member">DBusFreeFunction</ref><sp/>old_free_func;</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*old_data;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(slot<sp/>&gt;=<sp/>0,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusDataSlot_1gad2952f9f686d96e7114fc49ab7452e1a" kindref="member">_dbus_data_slot_list_set</ref><sp/>(&amp;slot_allocator,</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" kindref="member">slot_list</ref>,</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot,<sp/>data,<sp/>free_data_func,</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;old_free_func,<sp/>&amp;old_data);</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval)</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>the<sp/>actual<sp/>free<sp/>outside<sp/>the<sp/>message<sp/>lock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old_free_func)</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<sp/>old_free_func)<sp/>(old_data);</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4622"><highlight class="normal"></highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="4624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"></highlight></codeline>
<codeline lineno="4634"><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="4635" refid="group__DBusMessage_1gabbde522fe2321618ee39df1a028a2ec6" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga62769bfaf8f1b2edc7922c579bc0649d" kindref="member">dbus_message_get_data</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/><sp/>*message,</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gab18afa60e9b17b6e322735bda3d863d8" kindref="member">dbus_int32_t</ref><sp/><sp/><sp/>slot)</highlight></codeline>
<codeline lineno="4637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*res;</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/><ref refid="group__DBusDataSlot_1ga43f741229f0c38788442601e2750ec66" kindref="member">_dbus_data_slot_list_get</ref><sp/>(&amp;slot_allocator,</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;message-&gt;<ref refid="structDBusMessage_1a179c446523c6321e04f88a671363be19" kindref="member">slot_list</ref>,</highlight></codeline>
<codeline lineno="4644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slot);</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="4647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4663" refid="group__DBusMessage_1gabc69747028f1e5adedc68f5ffd538c74" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga40412bdfc6ba9cf9e167db4c23df0a7e" kindref="member">dbus_message_type_from_string</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*type_str)</highlight></codeline>
<codeline lineno="4664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(type_str,<sp/></highlight><highlight class="stringliteral">&quot;method_call&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>;</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(type_str,<sp/></highlight><highlight class="stringliteral">&quot;method_return&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref>;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(type_str,<sp/></highlight><highlight class="stringliteral">&quot;signal&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(type_str,<sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" kindref="member">DBUS_MESSAGE_TYPE_INVALID</ref>;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"></highlight></codeline>
<codeline lineno="4690"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="4691" refid="group__DBusMessage_1ga13f28b9d8b321baa4536f820a359c092" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga75bcb613a291eb7e427f77f2f3635b8f" kindref="member">dbus_message_type_to_string</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="4692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>:</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;method_call&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref>:</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;method_return&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>:</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;signal&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>:</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invalid&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4721" refid="group__DBusMessage_1ga3f90a918ada328450fcfe9ac403b8807" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gad85c737f9e7d03005d6028d6bbae7e87" kindref="member">dbus_message_marshal</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/><sp/>*msg,</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**marshalled_data_p,</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*len_p)</highlight></codeline>
<codeline lineno="4724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>was_locked;</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(msg<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(marshalled_data_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(len_p<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga348252317f7bb8ac43529972945830ae" kindref="member">_dbus_string_init</ref><sp/>(&amp;tmp))</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"></highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>message<sp/>is<sp/>locked,<sp/>to<sp/>ensure<sp/>the<sp/>length<sp/>header<sp/>is<sp/>filled<sp/>in.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/>was_locked<sp/>=<sp/>msg-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>;</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!was_locked)</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMessageInternals_1ga3ecc9c24381af05289161f477ad6a578" kindref="member">dbus_message_lock</ref><sp/>(msg);</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"></highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member">_dbus_string_copy</ref><sp/>(&amp;(msg-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>.<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>),<sp/>0,<sp/>&amp;tmp,<sp/>0))</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"></highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/>*len_p<sp/>=<sp/>_dbus_string_get_length<sp/>(&amp;tmp);</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member">_dbus_string_copy</ref><sp/>(&amp;(msg-&gt;<ref refid="structDBusMessage_1a0b9d14d6e0529f0ec2e3c0087fe62a9e" kindref="member">body</ref>),<sp/>0,<sp/>&amp;tmp,<sp/>*len_p))</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"></highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/>*len_p<sp/>=<sp/>_dbus_string_get_length<sp/>(&amp;tmp);</highlight></codeline>
<codeline lineno="4750"><highlight class="normal"></highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga556cc30c3ab032dbc63e217119f0d1f5" kindref="member">_dbus_string_steal_data</ref><sp/>(&amp;tmp,<sp/>marshalled_data_p))</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;tmp);</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"></highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!was_locked)</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/>msg-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/>fail:</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;tmp);</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"></highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!was_locked)</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/>msg-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref><sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*</highlight></codeline>
<codeline lineno="4783" refid="group__DBusMessage_1ga54242692a860bc712bda120ccee3535f" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga776fe8b5cd935d642875efa1d13a31b3" kindref="member">dbus_message_demarshal</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusError" kindref="compound">DBusError</ref><sp/><sp/>*error)</highlight></codeline>
<codeline lineno="4786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessageLoader" kindref="compound">DBusMessageLoader</ref><sp/>*loader;</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*buffer;</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*msg;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(str<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/>loader<sp/>=<sp/><ref refid="group__DBusMessageInternals_1ga66f1c10cf909ba09ed732bc125ff8671" kindref="member">_dbus_message_loader_new</ref><sp/>();</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"></highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loader<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1gae77f064b8034189a955d5be982d2fbdb" kindref="member">_dbus_message_loader_get_buffer</ref><sp/>(loader,<sp/>&amp;buffer);</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga724656b7091b910965bd1af42d0b7bab" kindref="member">_dbus_string_append_len</ref><sp/>(buffer,<sp/>str,<sp/>len);</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1gaf5cb6398adb9fe39560fe6aef69ebb09" kindref="member">_dbus_message_loader_return_buffer</ref><sp/>(loader,<sp/>buffer);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" kindref="member">_dbus_message_loader_queue_messages</ref><sp/>(loader))</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail_oom;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMessageInternals_1ga38da52ac9344b00df530098bdd9a3842" kindref="member">_dbus_message_loader_get_is_corrupted</ref><sp/>(loader))</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail_corrupt;</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"></highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/>msg<sp/>=<sp/><ref refid="group__DBusMessageInternals_1ga9e5e75716d7263d9908d45a60b1b6bdc" kindref="member">_dbus_message_loader_pop_message</ref><sp/>(loader);</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"></highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg)</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>fail_oom;</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"></highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" kindref="member">_dbus_message_loader_unref</ref><sp/>(loader);</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/>fail_corrupt:</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><ref refid="group__DBusErrors_1ga89d2ad4bde21f9e0057fac07a79885e3" kindref="member">dbus_set_error</ref><sp/>(error,<sp/><ref refid="group__DBusProtocol_1gacf5321b161193ad66d5bdf5c910a9792" kindref="member">DBUS_ERROR_INVALID_ARGS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Message<sp/>is<sp/>corrupted<sp/>(%s)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_validity_to_error_message<sp/>(loader-&gt;<ref refid="structDBusMessageLoader_1ac6116f8620094b8ce348b103483c0035" kindref="member">corruption_reason</ref>));</highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" kindref="member">_dbus_message_loader_unref</ref><sp/>(loader);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/>fail_oom:</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/>_DBUS_SET_OOM<sp/>(error);</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMessageInternals_1ga51299aab1f5e0b2408ab858d3377b20c" kindref="member">_dbus_message_loader_unref</ref><sp/>(loader);</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4827"><highlight class="normal"></highlight></codeline>
<codeline lineno="4840"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="4841" refid="group__DBusMessage_1ga67b26fd2c8e3305f3a467a5f3e36b24a" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gab0f8d8a640413e7c9b6c8f154acfbd1a" kindref="member">dbus_message_demarshal_bytes_needed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)</highlight></codeline>
<codeline lineno="4843"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>str;</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>byte_order,<sp/>fields_array_len,<sp/>header_len,<sp/>body_len;</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref><sp/>validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>have_message;</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf<sp/>||<sp/>len<sp/>&lt;<sp/><ref refid="group__DBusProtocol_1gaf8c13dd883c21b5dea179d77d8ac12e3" kindref="member">DBUS_MINIMUM_HEADER_SIZE</ref>)</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"></highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>)</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>;</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" kindref="member">_dbus_string_init_const_len</ref><sp/>(&amp;str,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/>validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/>have_message</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted</ref>(<ref refid="group__DBusProtocol_1ga2874c299e1c87fe745ef09bf231264e9" kindref="member">DBUS_MAXIMUM_MESSAGE_LENGTH</ref>,</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;validity,<sp/>&amp;byte_order,</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fields_array_len,</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header_len,</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;body_len,</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;str,<sp/>0,</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;str);</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validity<sp/>==<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(have_message<sp/>||<sp/>(header_len<sp/>+<sp/>body_len)<sp/>&gt;<sp/>len);</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>have_message;<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>unless<sp/>asserting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header_len<sp/>+<sp/>body_len;</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/></highlight><highlight class="comment">/*<sp/>broken!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4901" refid="group__DBusMessage_1gae734e7f4079375a0256d9e7f855ec4e4" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1ga8955cc5a3fcc905230b9afc05e4b1470" kindref="member">dbus_message_set_allow_interactive_authorization</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message,</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/>allow)</highlight></codeline>
<codeline lineno="4903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/>_dbus_return_if_fail<sp/>(!message-&gt;<ref refid="structDBusMessage_1ac926e7027f22608d75a6dfe18680b9e7" kindref="member">locked</ref>);</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"></highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" kindref="member">_dbus_header_toggle_flag</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga9e3539506c57a085ce40ca4dc919015b" kindref="member">DBUS_HEADER_FLAG_ALLOW_INTERACTIVE_AUTHORIZATION</ref>,</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"></highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="4919" refid="group__DBusMessage_1gae9daa615b732c27d690399cc32e1f5b9" refkind="member"><highlight class="normal"><ref refid="group__DBusMessageInternals_1gafc4b23ac32a763afa783b2a07143731b" kindref="member">dbus_message_get_allow_interactive_authorization</ref><sp/>(<ref refid="structDBusMessage" kindref="compound">DBusMessage</ref><sp/>*message)</highlight></codeline>
<codeline lineno="4920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/>_dbus_return_val_if_fail<sp/>(message<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"></highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" kindref="member">_dbus_header_get_flag</ref><sp/>(&amp;message-&gt;<ref refid="structDBusMessage_1a00cf6910d9f3bee5d5a82137c8c64a42" kindref="member">header</ref>,</highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga9e3539506c57a085ce40ca4dc919015b" kindref="member">DBUS_HEADER_FLAG_ALLOW_INTERACTIVE_AUTHORIZATION</ref>);</highlight></codeline>
<codeline lineno="4925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="comment">/*<sp/>tests<sp/>in<sp/>dbus-message-util.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-message.c"/>
  </compounddef>
</doxygen>
