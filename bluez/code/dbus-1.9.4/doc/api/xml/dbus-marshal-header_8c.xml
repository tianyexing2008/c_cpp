<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-marshal-header_8c" kind="file" language="C++">
    <compoundname>dbus-marshal-header.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-shared_8h" local="yes">dbus/dbus-shared.h</includes>
    <includes refid="dbus-marshal-header_8h" local="yes">dbus-marshal-header.h</includes>
    <includes refid="dbus-marshal-recursive_8h" local="yes">dbus-marshal-recursive.h</includes>
    <includes refid="dbus-marshal-byteswap_8h" local="yes">dbus-marshal-byteswap.h</includes>
    <incdepgraph>
      <node id="1596">
        <label>stdarg.h</label>
      </node>
      <node id="1599">
        <label>dbus/dbus-list.h</label>
        <link refid="dbus-list_8h_source"/>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
      </node>
      <node id="1589">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="1593">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="1603">
        <label>stdint.h</label>
      </node>
      <node id="1586">
        <label>dbus/dbus-shared.h</label>
        <link refid="dbus-shared_8h_source"/>
      </node>
      <node id="1607">
        <label>sys/poll.h</label>
      </node>
      <node id="1588">
        <label>dbus/dbus-marshal-basic.h</label>
        <link refid="dbus-marshal-basic_8h_source"/>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
      </node>
      <node id="1602">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
      </node>
      <node id="1600">
        <label>dbus/dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
      </node>
      <node id="1591">
        <label>stddef.h</label>
      </node>
      <node id="1594">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
      </node>
      <node id="1584">
        <label>dbus-marshal-header.c</label>
        <link refid="dbus-marshal-header.c"/>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1610" relation="include">
        </childnode>
      </node>
      <node id="1587">
        <label>dbus-marshal-header.h</label>
        <link refid="dbus-marshal-header_8h_source"/>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1597" relation="include">
        </childnode>
      </node>
      <node id="1592">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="1593" relation="include">
        </childnode>
      </node>
      <node id="1606">
        <label>string.h</label>
      </node>
      <node id="1609">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
      </node>
      <node id="1597">
        <label>dbus/dbus-marshal-validate.h</label>
        <link refid="dbus-marshal-validate_8h_source"/>
      </node>
      <node id="1610">
        <label>dbus-marshal-byteswap.h</label>
        <link refid="dbus-marshal-byteswap_8h_source"/>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
      </node>
      <node id="1608">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1598">
        <label>dbus-marshal-recursive.h</label>
        <link refid="dbus-marshal-recursive_8h_source"/>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
      </node>
      <node id="1585">
        <label>config.h</label>
      </node>
      <node id="1605">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1601">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
      </node>
      <node id="1590">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1604">
        <label>inttypes.h</label>
      </node>
      <node id="1595">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1591" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structHeaderFieldType" prot="public">HeaderFieldType</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" prot="public" static="no">
        <name>FIELDS_ARRAY_SIGNATURE_OFFSET</name>
        <initializer>6</initializer>
        <briefdescription>
<para>Offset from start of _dbus_header_signature_str to the signature of the fields array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="47" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaca36ac2e9b37067279d1bc967793e071" prot="public" static="no">
        <name>FIELDS_ARRAY_ELEMENT_SIGNATURE_OFFSET</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Offset from start of _dbus_header_signature_str to the signature of an element of the fields array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="49" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" prot="public" static="no">
        <name>BYTE_ORDER_OFFSET</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Offset to byte order from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="53" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="53" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" compoundref="dbus-marshal-header_8c" startline="1496" endline="1512">_dbus_header_byteswap</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" prot="public" static="no">
        <name>TYPE_OFFSET</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Offset to type from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="55" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="55" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" compoundref="dbus-marshal-header_8c" startline="386" endline="394">_dbus_header_get_message_type</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" prot="public" static="no">
        <name>FLAGS_OFFSET</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Offset to flags from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="57" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="57" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" compoundref="dbus-marshal-header_8c" startline="1457" endline="1469">_dbus_header_toggle_flag</referencedby>
        <referencedby refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" compoundref="dbus-marshal-header_8c" startline="1479" endline="1487">_dbus_header_get_flag</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga4f04ecce1223b00d263c0accdea144ad" prot="public" static="no">
        <name>VERSION_OFFSET</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Offset to version from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="59" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="59" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" prot="public" static="no">
        <name>BODY_LENGTH_OFFSET</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Offset to body length from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="61" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="61" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" prot="public" static="no">
        <name>SERIAL_OFFSET</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Offset to client serial from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="63" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="63" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" prot="public" static="no">
        <name>FIELDS_ARRAY_LENGTH_OFFSET</name>
        <initializer>12</initializer>
        <briefdescription>
<para>Offset to fields array length from start of header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="65" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="65" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" prot="public" static="no">
        <name>FIRST_FIELD_OFFSET</name>
        <initializer>16</initializer>
        <briefdescription>
<para>Offset to first field in header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="67" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="67" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" compoundref="dbus-marshal-header_8c" startline="970" endline="1187">_dbus_header_load</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" prot="public" static="no">
        <name>EXPECTED_TYPE_OF_FIELD</name>
        <param><defname>field</defname></param>
        <initializer>(_dbus_header_field_types[field].type)</initializer>
        <briefdescription>
<para>Macro to look up the correct type for a field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="90" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="90" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaa10402f90ea6e004e3b9f04eea34f73c" prot="public" static="no">
        <name>MAX_POSSIBLE_HEADER_PADDING</name>
        <initializer>7</initializer>
        <briefdescription>
<para>The most padding we could ever need for a header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="93" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" prot="public" static="no">
        <name>HEADER_END_BEFORE_PADDING</name>
        <param><defname>header</defname></param>
        <initializer>(_dbus_string_get_length (&amp;(header)-&gt;data) - (header)-&gt;padding)</initializer>
        <briefdescription>
<para>Compute the end of the header, ignoring padding. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="123" column="9" bodyfile="dbus/dbus-marshal-header.c" bodystart="123" bodyend="-1"/>
        <referencedby refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" compoundref="dbus-marshal-header_8c" startline="528" endline="653">_dbus_header_create</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
      </memberdef>
      <memberdef kind="define" id="dbus-marshal-header_8c_1a8addfbfea529e98707793f781490a309" prot="public" static="no">
        <name>REQUIRE_FIELD</name>
        <param><defname>name</defname></param>
        <initializer>do { if (header-&gt;fields[DBUS_HEADER_FIELD_##name].value_pos &lt; 0) return DBUS_INVALID_MISSING_##name; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="755" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DBusMarshal_1ga99428767c59132314c86bb096c768ab5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="structHeaderFieldType" kindref="compound">HeaderFieldType</ref></type>
        <definition>const HeaderFieldType _dbus_header_field_types[DBUS_HEADER_FIELD_LAST+1]</definition>
        <argsstring>[DBUS_HEADER_FIELD_LAST+1]</argsstring>
        <name>_dbus_header_field_types</name>
        <initializer>= {
  { <ref refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" kindref="member">DBUS_HEADER_FIELD_INVALID</ref>, <ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref> },
  { <ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>, <ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref> },
  { <ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" kindref="member">DBUS_HEADER_FIELD_REPLY_SERIAL</ref>, <ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref> },
  { <ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" kindref="member">DBUS_HEADER_FIELD_SENDER</ref>, <ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref> },
  { <ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>, <ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref> },
  { <ref refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" kindref="member">DBUS_HEADER_FIELD_UNIX_FDS</ref>, <ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref> }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="76" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DBusMarshal_1gab49ca4819ef45b26463427bb09060844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_header_signature_str, DBUS_HEADER_SIGNATURE)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_header_signature_str</type>
        </param>
        <param>
          <type><ref refid="group__DBusProtocol_1ga82e39a6508e551fb14c7bdbb17590cc6" kindref="member">DBUS_HEADER_SIGNATURE</ref></type>
        </param>
        <briefdescription>
<para>Static <ref refid="structDBusString" kindref="compound">DBusString</ref> containing the signature of a message header. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4d454446fbca28c07187eb8bb627f70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_local_interface_str, DBUS_INTERFACE_LOCAL)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_local_interface_str</type>
        </param>
        <param>
          <type><ref refid="group__DBusShared_1ga9ef6478aae637449ec0c5de1679f75ce" kindref="member">DBUS_INTERFACE_LOCAL</ref></type>
        </param>
        <briefdescription>
<para>Static <ref refid="structDBusString" kindref="compound">DBusString</ref> containing the local interface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga991dd170f3d84b4bf195caf3a1046d28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_DBUS_STRING_DEFINE_STATIC</definition>
        <argsstring>(_dbus_local_path_str, DBUS_PATH_LOCAL)</argsstring>
        <name>_DBUS_STRING_DEFINE_STATIC</name>
        <param>
          <type>_dbus_local_path_str</type>
        </param>
        <param>
          <type><ref refid="group__DBusShared_1ga850990a54a46142ee7c5f8174cc932c1" kindref="member">DBUS_PATH_LOCAL</ref></type>
        </param>
        <briefdescription>
<para>Static <ref refid="structDBusString" kindref="compound">DBusString</ref> containing the local path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga860198eda0de070c6b55caf96fbb8e0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t reserve_header_padding</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>reserve_header_padding</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="95" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="95" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaa7cbccae5b5cbf7d23ceb6bc59067dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void correct_header_padding</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>correct_header_padding</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="107" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="107" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaaaed809fda9ceea16eb4f6195370484f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_header_cache_invalidate_all</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_cache_invalidate_all</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Invalidates all fields in the cache. </para>        </briefdescription>
        <detaileddescription>
<para>This may be used when the cache is totally uninitialized (contains junk) so should not look at what&apos;s in there now.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="134" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="134" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga57c710edcec5384706bc0317946a6c39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_header_cache_one</definition>
        <argsstring>(DBusHeader *header, int field_code, DBusTypeReader *variant_reader)</argsstring>
        <name>_dbus_header_cache_one</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field_code</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>variant_reader</declname>
        </param>
        <briefdescription>
<para>Caches one field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field_code</parametername>
</parameternamelist>
<parameterdescription>
<para>the field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>variant_reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader for the variant in the field </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="154" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="154" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char _dbus_header_get_byte_order</definition>
        <argsstring>(const DBusHeader *header)</argsstring>
        <name>_dbus_header_get_byte_order</name>
        <param>
          <type>const <ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Returns the header&apos;s byte order. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the byte order </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="174" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="174" bodyend="179"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" compoundref="dbus-string_8c" startline="210" endline="234">_dbus_string_init_const_len</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" compoundref="dbus-marshal-recursive_8c" startline="1360" endline="1397">_dbus_type_reader_set_basic</references>
        <references refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" compoundref="dbus-marshal-recursive_8c" startline="2106" endline="2125">_dbus_type_writer_recurse</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <references refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" compoundref="dbus-marshal-recursive_8h" startline="76">DBusTypeWriter::value_str</references>
        <referencedby refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" compoundref="dbus-marshal-header_8c" startline="1496" endline="1512">_dbus_header_byteswap</referencedby>
        <referencedby refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</referencedby>
        <referencedby refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" compoundref="dbus-marshal-header_8c" startline="1273" endline="1338">_dbus_header_set_field_basic</referencedby>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" compoundref="dbus-marshal-header_8c" startline="1196" endline="1203">_dbus_header_update_lengths</referencedby>
        <referencedby refid="group__DBusMessage_1ga9f98b47c84f0e401ea985e681de4e963" compoundref="dbus-message_8c" startline="2064" endline="2086">dbus_message_iter_init</referencedby>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf3fcd0dfa5ae490e1167904841688bdb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _dbus_header_cache_revalidate</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_cache_revalidate</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Revalidates the fields cache. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="187" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="187" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga76e6bf50b92dfa528582b345afd06412" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_header_cache_check</definition>
        <argsstring>(DBusHeader *header, int field)</argsstring>
        <name>_dbus_header_cache_check</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks for a field, updating the cache if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="244" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="244" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga12bd94c7355f51c1edaa1967138b834b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t _dbus_header_cache_known_nonexistent</definition>
        <argsstring>(DBusHeader *header, int field)</argsstring>
        <name>_dbus_header_cache_known_nonexistent</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Checks whether a field is known not to exist. </para>        </briefdescription>
        <detaileddescription>
<para>It may exist even if it&apos;s not known to exist.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field definitely doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="267" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="267" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gadd50caee4818c3c7983a343b3c049a38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t write_basic_field</definition>
        <argsstring>(DBusTypeWriter *writer, int field, int type, const void *value)</argsstring>
        <name>write_basic_field</name>
        <param>
          <type><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a struct of { byte, variant } with the given basic type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writer</parametername>
</parameternamelist>
<parameterdescription>
<para>the writer (should be ready to write a struct) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the header field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="285" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="285" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab283e01a2feaef729fb6144ee344f98b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t set_basic_field</definition>
        <argsstring>(DBusTypeReader *reader, int field, int type, const void *value, const DBusTypeReader *realign_root)</argsstring>
        <name>set_basic_field</name>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Sets a struct of { byte, variant } with the given basic type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>the reader (should be iterating over the array pointing at the field to set) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the header field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>where to realign from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="347" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="347" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _dbus_header_get_message_type</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_get_message_type</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Gets the type of the message. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="386" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="386" bodyend="394"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" compoundref="dbus-marshal-header_8c" startline="55">TYPE_OFFSET</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMessage_1ga41cace31999105137772b6257ea540f9" compoundref="dbus-message_8c" startline="1722" endline="1727">dbus_message_get_type</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_set_serial</definition>
        <argsstring>(DBusHeader *header, dbus_uint32_t serial)</argsstring>
        <name>_dbus_header_set_serial</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>serial</declname>
        </param>
        <briefdescription>
<para>Sets the serial number of a header. </para>        </briefdescription>
        <detaileddescription>
<para>This can only be done once on a header.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>serial</parametername>
</parameternamelist>
<parameterdescription>
<para>the serial </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="404" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="404" bodyend="418"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" compoundref="dbus-marshal-header_8c" startline="427" endline="433">_dbus_header_get_serial</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" compoundref="dbus-marshal-header_8c" startline="63">SERIAL_OFFSET</references>
        <referencedby refid="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" compoundref="dbus-marshal-header_8c" startline="490" endline="509">_dbus_header_copy</referencedby>
        <referencedby refid="group__DBusMessage_1gaa35c17742d8fe091aa039cbd29961c52" compoundref="dbus-message_8c" startline="254" endline="261">dbus_message_set_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
        <definition>dbus_uint32_t _dbus_header_get_serial</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_get_serial</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" kindref="member">dbus_message_get_serial()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the client serial </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="427" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="427" bodyend="433"/>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" compoundref="dbus-marshal-header_8c" startline="63">SERIAL_OFFSET</references>
        <referencedby refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</referencedby>
        <referencedby refid="group__DBusMessage_1ga390710c25564c80025a006c376da2030" compoundref="dbus-message_8c" startline="1127" endline="1132">dbus_message_get_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_reinit</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_reinit</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Re-initializes a header that was previously initialized and never freed. </para>        </briefdescription>
        <detaileddescription>
<para>After this, to make the header valid you have to call <ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>header to re-initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="443" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="443" bodyend="450"/>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" compoundref="dbus-marshal-header_8h" startline="58">DBusHeader::padding</references>
        <referencedby refid="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" compoundref="dbus-marshal-header_8c" startline="460" endline="468">_dbus_header_init</referencedby>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_init</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_init</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Initializes a header, but doesn&apos;t prepare it for use; to make the header valid, you have to call <ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>header to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="460" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="460" bodyend="468"/>
        <references refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" compoundref="dbus-marshal-header_8c" startline="443" endline="450">_dbus_header_reinit</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_free</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>_dbus_header_free</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Frees a header. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="476" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="476" bodyend="479"/>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <referencedby refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" compoundref="dbus-message_8c" startline="1587" endline="1656">dbus_message_copy</referencedby>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_copy</definition>
        <argsstring>(const DBusHeader *header, DBusHeader *dest)</argsstring>
        <name>_dbus_header_copy</name>
        <param>
          <type>const <ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
<para>Initializes dest with a copy of the given header. </para>        </briefdescription>
        <detaileddescription>
<para>Resets the message serial to 0 on the copy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>header to copy </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>destination for copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="490" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="490" bodyend="509"/>
        <references refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" compoundref="dbus-marshal-header_8c" startline="404" endline="418">_dbus_header_set_serial</references>
        <references refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" compoundref="dbus-string_8c" startline="1282" endline="1293">_dbus_string_copy</references>
        <references refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" compoundref="dbus-string_8c" startline="259" endline="277">_dbus_string_free</references>
        <references refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" compoundref="dbus-string_8c" startline="132" endline="165">_dbus_string_init_preallocated</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1ga4bed3858b3b48ec7c86d9fc56a6ce372" compoundref="dbus-message_8c" startline="1587" endline="1656">dbus_message_copy</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_create</definition>
        <argsstring>(DBusHeader *header, int byte_order, int message_type, const char *destination, const char *path, const char *interface, const char *member, const char *error_name)</argsstring>
        <name>_dbus_header_create</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>message_type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>interface</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>member</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>error_name</declname>
        </param>
        <briefdescription>
<para>Fills in the primary fields of the header, so the header is ready for use. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> may be specified for some or all of the fields to avoid adding those fields. Some combinations of fields don&apos;t make sense, and passing them in will trigger an assertion failure.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order of the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_type</parametername>
</parameternamelist>
<parameterdescription>
<para>the message type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>destination field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interface</parametername>
</parameternamelist>
<parameterdescription>
<para>interface field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>member</parametername>
</parameternamelist>
<parameterdescription>
<para>member field or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_name</parametername>
</parameternamelist>
<parameterdescription>
<para>error name or <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if not enough memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="528" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="528" bodyend="653"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" compoundref="dbus-string_8c" startline="1192" endline="1203">_dbus_string_delete</references>
        <references refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</references>
        <references refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" compoundref="dbus-marshal-recursive_8c" startline="2106" endline="2125">_dbus_type_writer_recurse</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" compoundref="dbus-marshal-recursive_8c" startline="2308" endline="2339">_dbus_type_writer_write_basic</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" compoundref="dbus-protocol_8h" startline="288">DBUS_HEADER_FIELD_DESTINATION</references>
        <references refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" compoundref="dbus-protocol_8h" startline="280">DBUS_HEADER_FIELD_ERROR_NAME</references>
        <references refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" compoundref="dbus-protocol_8h" startline="274">DBUS_HEADER_FIELD_INTERFACE</references>
        <references refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" compoundref="dbus-protocol_8h" startline="276">DBUS_HEADER_FIELD_MEMBER</references>
        <references refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" compoundref="dbus-protocol_8h" startline="270">DBUS_HEADER_FIELD_PATH</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusProtocol_1gae1ab70067a616d852e5fc264abb66608" compoundref="dbus-protocol_8h" startline="57">DBUS_MAJOR_PROTOCOL_VERSION</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" compoundref="dbus-marshal-header_8c" startline="123">HEADER_END_BEFORE_PADDING</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" compoundref="dbus-marshal-header_8h" startline="58">DBusHeader::padding</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1gab9e5bf8d87a95c5ca7026a791148ebd4" compoundref="dbus-message_8c" startline="1289" endline="1309">dbus_message_new</referencedby>
        <referencedby refid="group__DBusMessage_1ga2ab896965aec97fb21293affeed36232" compoundref="dbus-message_8c" startline="1470" endline="1523">dbus_message_new_error</referencedby>
        <referencedby refid="group__DBusMessage_1ga98ddc82450d818138ef326a284201ee0" compoundref="dbus-message_8c" startline="1333" endline="1363">dbus_message_new_method_call</referencedby>
        <referencedby refid="group__DBusMessage_1ga95142bd8288f397194ee0eefb1d27125" compoundref="dbus-message_8c" startline="1373" endline="1407">dbus_message_new_method_return</referencedby>
        <referencedby refid="group__DBusMessage_1ga6ce3213dfb17be7956affba40207a5a0" compoundref="dbus-message_8c" startline="1424" endline="1453">dbus_message_new_signal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_have_message_untrusted</definition>
        <argsstring>(int max_message_length, DBusValidity *validity, int *byte_order, int *fields_array_len, int *header_len, int *body_len, const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_header_have_message_untrusted</name>
        <param>
          <type>int</type>
          <declname>max_message_length</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref> *</type>
          <declname>validity</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fields_array_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>header_len</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>body_len</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Given data long enough to contain the length of the message body and the fields array, check whether the data is long enough to contain the entire message (assuming the claimed lengths are accurate). </para>        </briefdescription>
        <detaileddescription>
<para>Also checks that the lengths are in sanity parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_message_length</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum length of a valid message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validity</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for why the data is invalid if it is </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for byte order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields_array_len</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for claimed fields array length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header_len</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for claimed header length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_len</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for claimed body length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>start of data, 8-aligned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the data is long enough for the claimed length, and the lengths were valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="673" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="673" bodyend="750"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" compoundref="dbus-marshal-header_8c" startline="1351" endline="1376">_dbus_header_get_field_basic</references>
        <references refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" compoundref="dbus-marshal-header_8c" startline="1392" endline="1406">_dbus_header_get_field_raw</references>
        <references refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" compoundref="dbus-marshal-header_8c" startline="386" endline="394">_dbus_header_get_message_type</references>
        <references refid="group__DBusInternalsUtils_1gafe869e3145b7e32c4fb6a6741c9fc78e" compoundref="dbus-internals_8h" startline="227">_DBUS_INT32_MAX</references>
        <references refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" compoundref="dbus-marshal-basic_8c" startline="454" endline="468">_dbus_marshal_read_uint32</references>
        <references refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" compoundref="dbus-string_8c" startline="2103" endline="2141">_dbus_string_equal_substring</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" compoundref="dbus-marshal-validate_8c" startline="1187" endline="1192">_dbus_validate_bus_name</references>
        <references refid="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" compoundref="dbus-marshal-validate_8c" startline="1058" endline="1064">_dbus_validate_error_name</references>
        <references refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" compoundref="dbus-marshal-validate_8c" startline="921" endline="981">_dbus_validate_interface</references>
        <references refid="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" compoundref="dbus-marshal-validate_8c" startline="997" endline="1042">_dbus_validate_member</references>
        <references refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" compoundref="dbus-marshal-header_8c" startline="61">BODY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" compoundref="dbus-protocol_8h" startline="54">DBUS_BIG_ENDIAN</references>
        <references refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" compoundref="dbus-protocol_8h" startline="288">DBUS_HEADER_FIELD_DESTINATION</references>
        <references refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" compoundref="dbus-protocol_8h" startline="280">DBUS_HEADER_FIELD_ERROR_NAME</references>
        <references refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" compoundref="dbus-protocol_8h" startline="274">DBUS_HEADER_FIELD_INTERFACE</references>
        <references refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" compoundref="dbus-protocol_8h" startline="266">DBUS_HEADER_FIELD_INVALID</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" compoundref="dbus-protocol_8h" startline="276">DBUS_HEADER_FIELD_MEMBER</references>
        <references refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" compoundref="dbus-protocol_8h" startline="270">DBUS_HEADER_FIELD_PATH</references>
        <references refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" compoundref="dbus-protocol_8h" startline="284">DBUS_HEADER_FIELD_REPLY_SERIAL</references>
        <references refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" compoundref="dbus-protocol_8h" startline="293">DBUS_HEADER_FIELD_SENDER</references>
        <references refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" compoundref="dbus-protocol_8h" startline="297">DBUS_HEADER_FIELD_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" compoundref="dbus-protocol_8h" startline="302">DBUS_HEADER_FIELD_UNIX_FDS</references>
        <references refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" compoundref="dbus-protocol_8h" startline="53">DBUS_LITTLE_ENDIAN</references>
        <references refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" compoundref="dbus-protocol_8h" startline="238">DBUS_MESSAGE_TYPE_ERROR</references>
        <references refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" compoundref="dbus-protocol_8h" startline="234">DBUS_MESSAGE_TYPE_METHOD_CALL</references>
        <references refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" compoundref="dbus-protocol_8h" startline="236">DBUS_MESSAGE_TYPE_METHOD_RETURN</references>
        <references refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" compoundref="dbus-protocol_8h" startline="240">DBUS_MESSAGE_TYPE_SIGNAL</references>
        <references refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" compoundref="dbus-protocol_8h" startline="106">DBUS_TYPE_OBJECT_PATH</references>
        <references refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" compoundref="dbus-protocol_8h" startline="110">DBUS_TYPE_SIGNATURE</references>
        <references refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" compoundref="dbus-protocol_8h" startline="102">DBUS_TYPE_STRING</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" compoundref="dbus-marshal-header_8c" startline="90">EXPECTED_TYPE_OF_FIELD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" compoundref="dbus-marshal-header_8c" startline="67">FIRST_FIELD_OFFSET</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <referencedby refid="group__DBusMessageInternals_1gaf55885371a6d022ec94c79bd7138923f" compoundref="dbus-message_8c" startline="4302" endline="4355">_dbus_message_loader_queue_messages</referencedby>
        <referencedby refid="group__DBusMessage_1ga67b26fd2c8e3305f3a467a5f3e36b24a" compoundref="dbus-message_8c" startline="4841" endline="4877">dbus_message_demarshal_bytes_needed</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga9ed6eea1ad74fd85722035e404598717" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>static DBusValidity check_mandatory_fields</definition>
        <argsstring>(DBusHeader *header)</argsstring>
        <name>check_mandatory_fields</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="753" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="753" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0a608256d717c57d910dd4ed402b957c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></type>
        <definition>static DBusValidity load_and_validate_field</definition>
        <argsstring>(DBusHeader *header, int field, DBusTypeReader *variant_reader)</argsstring>
        <name>load_and_validate_field</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>variant_reader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="782" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="782" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_load</definition>
        <argsstring>(DBusHeader *header, DBusValidationMode mode, DBusValidity *validity, int byte_order, int fields_array_len, int header_len, int body_len, const DBusString *str, int start, int len)</argsstring>
        <name>_dbus_header_load</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" kindref="member">DBusValidationMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref> *</type>
          <declname>validity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byte_order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fields_array_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>header_len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>body_len</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Creates a message header from potentially-untrusted data. </para>        </briefdescription>
        <detaileddescription>
<para>The return value is <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if there was enough memory and the data was valid. If it returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>, the header will be created. If it returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and *validity == <ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" kindref="member">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</ref>, then there wasn&apos;t enough memory. If it returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> and *validity != <ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" kindref="member">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</ref> then the data was invalid.</para><para>The byte_order, fields_array_len, and body_len args should be from <ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted()</ref>. Validation performed in <ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted()</ref> is assumed to have been already done.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header (must be initialized) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to do validation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validity</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for invalidity reason </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte_order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order from header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fields_array_len</parametername>
</parameternamelist>
<parameterdescription>
<para>claimed length of fields array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_len</parametername>
</parameternamelist>
<parameterdescription>
<para>claimed length of body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>header_len</parametername>
</parameternamelist>
<parameterdescription>
<para>claimed length of header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>a string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>start of header, 8-aligned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of string to look at </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory or data was invalid, <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="970" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="970" bodyend="1187"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" compoundref="dbus-string_8c" startline="1374" endline="1388">_dbus_string_copy_len</references>
        <references refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" compoundref="dbus-string_8c" startline="802" endline="809">_dbus_string_set_length</references>
        <references refid="group__DBusString_1ga199d0fc00ee3cd0300a1b3870d7986a3" compoundref="dbus-string_8c" startline="2652" endline="2676">_dbus_string_validate_nul</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" compoundref="dbus-marshal-recursive_8c" startline="837" endline="840">_dbus_type_reader_get_value_pos</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" compoundref="dbus-marshal-validate_8c" startline="703" endline="747">_dbus_validate_body_with_reason</references>
        <references refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" compoundref="dbus-marshal-header_8c" startline="61">BODY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" compoundref="dbus-protocol_8h" startline="266">DBUS_HEADER_FIELD_INVALID</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusProtocol_1gae1ab70067a616d852e5fc264abb66608" compoundref="dbus-protocol_8h" startline="57">DBUS_MAJOR_PROTOCOL_VERSION</references>
        <references refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" compoundref="dbus-protocol_8h" startline="232">DBUS_MESSAGE_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" compoundref="dbus-protocol_8h" startline="120">DBUS_TYPE_ARRAY</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" compoundref="dbus-protocol_8h" startline="86">DBUS_TYPE_UINT32</references>
        <references refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" compoundref="dbus-protocol_8h" startline="124">DBUS_TYPE_VARIANT</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" compoundref="dbus-marshal-validate_8h" startline="56">DBUS_VALID</references>
        <references refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" compoundref="dbus-marshal-validate_8h" startline="52">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" compoundref="dbus-marshal-header_8c" startline="67">FIRST_FIELD_OFFSET</references>
        <references refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" compoundref="dbus-marshal-header_8c" startline="57">FLAGS_OFFSET</references>
        <references refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" compoundref="dbus-marshal-header_8h" startline="58">DBusHeader::padding</references>
        <references refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" compoundref="dbus-marshal-header_8c" startline="63">SERIAL_OFFSET</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" compoundref="dbus-marshal-header_8c" startline="55">TYPE_OFFSET</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <references refid="group__DBusMarshal_1ga4f04ecce1223b00d263c0accdea144ad" compoundref="dbus-marshal-header_8c" startline="59">VERSION_OFFSET</references>
        <referencedby refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" compoundref="dbus-message_8c" startline="4051" endline="4068">_dbus_message_loader_return_unix_fds</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_update_lengths</definition>
        <argsstring>(DBusHeader *header, int body_len)</argsstring>
        <name>_dbus_header_update_lengths</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>body_len</declname>
        </param>
        <briefdescription>
<para>Fills in the correct body length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>body_len</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the body </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1196" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1196" bodyend="1203"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" compoundref="dbus-marshal-basic_8c" startline="253" endline="259">_dbus_marshal_set_uint32</references>
        <references refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" compoundref="dbus-marshal-recursive_8c" startline="785" endline="809">_dbus_type_reader_get_current_type</references>
        <references refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" compoundref="dbus-marshal-recursive_8c" startline="732" endline="749">_dbus_type_reader_init</references>
        <references refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" compoundref="dbus-marshal-recursive_8c" startline="1051" endline="1077">_dbus_type_reader_next</references>
        <references refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" compoundref="dbus-marshal-recursive_8c" startline="869" endline="890">_dbus_type_reader_read_basic</references>
        <references refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" compoundref="dbus-marshal-recursive_8c" startline="988" endline="1040">_dbus_type_reader_recurse</references>
        <references refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" compoundref="dbus-marshal-header_8c" startline="61">BODY_LENGTH_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" compoundref="dbus-protocol_8h" startline="66">DBUS_TYPE_BYTE</references>
        <references refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" compoundref="dbus-protocol_8h" startline="60">DBUS_TYPE_INVALID</references>
        <references refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" compoundref="dbus-protocol_8h" startline="136">DBUS_TYPE_STRUCT</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga8d41e8c49e54b93828e6ae432e905cca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>static dbus_bool_t find_field_for_modification</definition>
        <argsstring>(DBusHeader *header, int field, DBusTypeReader *reader, DBusTypeReader *realign_root)</argsstring>
        <name>find_field_for_modification</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref> *</type>
          <declname>realign_root</declname>
        </param>
        <briefdescription>
<para>Try to find the given field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>a type reader; on success this is left pointing at the struct (uv) for the field, while on failure it is left pointing into empty space at the end of the header fields </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>realign_root</parametername>
</parameternamelist>
<parameterdescription>
<para>another type reader; on success or failure it is left pointing to the beginning of the array of fields (i.e. the thing that might need realigning) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1219" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1219" bodyend="1259"/>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_set_field_basic</definition>
        <argsstring>(DBusHeader *header, int field, int type, const void *value)</argsstring>
        <name>_dbus_header_set_field_basic</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value of a field with basic type. </para>        </briefdescription>
        <detaileddescription>
<para>If the value is a string value, it isn&apos;t allowed to be <ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>. If the field doesn&apos;t exist, it will be created.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1ga854526bdf221a5e82b2e14581ac17d8f" kindref="member">_dbus_marshal_set_basic()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1273" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1273" bodyend="1338"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" compoundref="dbus-internals_8h" startline="145">_dbus_assert_not_reached</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" compoundref="dbus-marshal-recursive_8c" startline="2140" endline="2158">_dbus_type_writer_append_array</references>
        <references refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" compoundref="dbus-marshal-recursive_8c" startline="1581" endline="1593">_dbus_type_writer_init_values_only</references>
        <references refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" compoundref="dbus-marshal-recursive_8c" startline="2176" endline="2297">_dbus_type_writer_unrecurse</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMarshal_1gaca36ac2e9b37067279d1bc967793e071" compoundref="dbus-marshal-header_8c" startline="49">FIELDS_ARRAY_ELEMENT_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" compoundref="dbus-marshal-header_8c" startline="65">FIELDS_ARRAY_LENGTH_OFFSET</references>
        <references refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" compoundref="dbus-marshal-header_8c" startline="47">FIELDS_ARRAY_SIGNATURE_OFFSET</references>
        <references refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" compoundref="dbus-marshal-header_8c" startline="67">FIRST_FIELD_OFFSET</references>
        <references refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" compoundref="dbus-marshal-header_8c" startline="123">HEADER_END_BEFORE_PADDING</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a">DBusTypeWriter::u</references>
        <references refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" compoundref="dbus-marshal-recursive_8h" startline="77">DBusTypeWriter::value_pos</references>
        <referencedby refid="group__DBusMessage_1ga17491f3b75b3203f6fc47dcc2e3b221b" compoundref="dbus-message_8c" startline="2656" endline="2753">dbus_message_iter_append_basic</referencedby>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
        <referencedby refid="group__DBusMessage_1gaec08603ff3d49bbcded67d25188a23f1" compoundref="dbus-message_8c" startline="1143" endline="1154">dbus_message_set_reply_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_get_field_basic</definition>
        <argsstring>(DBusHeader *header, int field, int type, void *value)</argsstring>
        <name>_dbus_header_get_field_basic</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Gets the value of a field with basic type. </para>        </briefdescription>
        <detaileddescription>
<para>If the field doesn&apos;t exist, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>, otherwise returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value as for <ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1351" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1351" bodyend="1376"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" compoundref="dbus-marshal-basic_8c" startline="492" endline="590">_dbus_marshal_read_basic</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" compoundref="dbus-protocol_8h" startline="266">DBUS_HEADER_FIELD_INVALID</references>
        <references refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" compoundref="dbus-protocol_8h" startline="311">DBUS_HEADER_FIELD_LAST</references>
        <references refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" compoundref="dbus-marshal-header_8c" startline="90">EXPECTED_TYPE_OF_FIELD</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMessageInternals_1ga2bf4dd7eda1a539454486e127b75d7c3" compoundref="dbus-message_8c" startline="4051" endline="4068">_dbus_message_loader_return_unix_fds</referencedby>
        <referencedby refid="group__DBusMessage_1gaac65c926e6253e49aa689b4f032fad45" compoundref="dbus-message_8c" startline="3450" endline="3462">dbus_message_get_destination</referencedby>
        <referencedby refid="group__DBusMessage_1ga4e98b2283707a8e0313fc7c6fe3b1b5f" compoundref="dbus-message_8c" startline="3397" endline="3409">dbus_message_get_error_name</referencedby>
        <referencedby refid="group__DBusMessage_1ga1ad192bd4538cae556121a71b4e09d42" compoundref="dbus-message_8c" startline="3227" endline="3239">dbus_message_get_interface</referencedby>
        <referencedby refid="group__DBusMessage_1gaf5c6b705c53db07a5ae2c6b76f230cf9" compoundref="dbus-message_8c" startline="3313" endline="3325">dbus_message_get_member</referencedby>
        <referencedby refid="group__DBusMessage_1ga18adf731bb42d324fe2624407319e4af" compoundref="dbus-message_8c" startline="3096" endline="3108">dbus_message_get_path</referencedby>
        <referencedby refid="group__DBusMessage_1ga94c43b2b237d842a6b91da6f94818d47" compoundref="dbus-message_8c" startline="1163" endline="1176">dbus_message_get_reply_serial</referencedby>
        <referencedby refid="group__DBusMessage_1ga13ce514ceb2d1598751f3a7760cf1375" compoundref="dbus-message_8c" startline="3510" endline="3522">dbus_message_get_sender</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_get_field_raw</definition>
        <argsstring>(DBusHeader *header, int field, const DBusString **str, int *pos)</argsstring>
        <name>_dbus_header_get_field_raw</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <param>
          <type>const <ref refid="structDBusString" kindref="compound">DBusString</ref> **</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Gets the raw marshaled data for a field. </para>        </briefdescription>
        <detaileddescription>
<para>If the field doesn&apos;t exist, returns <ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>, otherwise returns <ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>. Returns the start of the marshaled data, i.e. usually the byte where the length starts (for strings and arrays) or for basic types just the value itself.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for the data string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>return location for start of field value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if the field doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1392" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1392" bodyend="1406"/>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" compoundref="dbus-marshal-header_8h" startline="54">DBusHeader::fields</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" compoundref="dbus-marshal-header_8h" startline="41">DBusHeaderField::value_pos</references>
        <referencedby refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" compoundref="dbus-marshal-header_8c" startline="673" endline="750">_dbus_header_have_message_untrusted</referencedby>
        <referencedby refid="group__DBusMessage_1gaf733047c467ce21f4a53b65a388f1e9d" compoundref="dbus-message_8c" startline="2421" endline="2440">dbus_message_iter_init_append</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_delete_field</definition>
        <argsstring>(DBusHeader *header, int field)</argsstring>
        <name>_dbus_header_delete_field</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Deletes a field, if it exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>the field to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref> if no memory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1416" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1416" bodyend="1446"/>
        <references refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" compoundref="dbus-internals_8h" startline="135">_dbus_assert</references>
        <references refid="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" compoundref="dbus-marshal-recursive_8c" startline="1417" endline="1441">_dbus_type_reader_delete</references>
        <references refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="group__DBusMessage_1gad3d6b8ec4745ec19f57cae07621f3a47" compoundref="dbus-message_8c" startline="384" endline="397">dbus_message_lock</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_toggle_flag</definition>
        <argsstring>(DBusHeader *header, dbus_uint32_t flag, dbus_bool_t value)</argsstring>
        <name>_dbus_header_toggle_flag</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Toggles a message flag bit, turning on the bit if value = TRUE and flipping it off if value = FALSE. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>the message flag to toggle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>toggle on or off </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1457" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1457" bodyend="1469"/>
        <references refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" compoundref="dbus-string_8c" startline="490" endline="501">_dbus_string_get_data_len</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" compoundref="dbus-marshal-header_8c" startline="57">FLAGS_OFFSET</references>
        <referencedby refid="group__DBusMessage_1gae734e7f4079375a0256d9e7f855ec4e4" compoundref="dbus-message_8c" startline="4901" endline="4910">dbus_message_set_allow_interactive_authorization</referencedby>
        <referencedby refid="group__DBusMessage_1ga1596d92a8d604f954b48c7410263d2f0" compoundref="dbus-message_8c" startline="3026" endline="3035">dbus_message_set_auto_start</referencedby>
        <referencedby refid="group__DBusMessage_1ga0e86aeb2dc6831ccc9a21fcbf8cc16f7" compoundref="dbus-message_8c" startline="2984" endline="2993">dbus_message_set_no_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_header_get_flag</definition>
        <argsstring>(DBusHeader *header, dbus_uint32_t flag)</argsstring>
        <name>_dbus_header_get_flag</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Gets a message flag bit, returning TRUE if the bit is set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>the message flag to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref> if the flag is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1479" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1479" bodyend="1487"/>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
        <references refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" compoundref="dbus-marshal-header_8c" startline="57">FLAGS_OFFSET</references>
        <referencedby refid="group__DBusMessage_1gae9daa615b732c27d690399cc32e1f5b9" compoundref="dbus-message_8c" startline="4919" endline="4925">dbus_message_get_allow_interactive_authorization</referencedby>
        <referencedby refid="group__DBusMessage_1ga85d396a3a774e15c3dbb7704aa173384" compoundref="dbus-message_8c" startline="3045" endline="3051">dbus_message_get_auto_start</referencedby>
        <referencedby refid="group__DBusMessage_1ga622d051a2e5f578814116a958b240aa4" compoundref="dbus-message_8c" startline="3003" endline="3009">dbus_message_get_no_reply</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _dbus_header_byteswap</definition>
        <argsstring>(DBusHeader *header, int new_order)</argsstring>
        <name>_dbus_header_byteswap</name>
        <param>
          <type><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_order</declname>
        </param>
        <briefdescription>
<para>Swaps the header into the given order if required. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>the header </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_order</parametername>
</parameternamelist>
<parameterdescription>
<para>the new byte order </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-marshal-header.c" line="1496" column="1" bodyfile="dbus/dbus-marshal-header.c" bodystart="1496" bodyend="1512"/>
        <references refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" compoundref="dbus-marshal-header_8c" startline="174" endline="179">_dbus_header_get_byte_order</references>
        <references refid="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" compoundref="dbus-marshal-byteswap_8c" startline="222" endline="244">_dbus_marshal_byteswap</references>
        <references refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" compoundref="dbus-marshal-header_8c" startline="53">BYTE_ORDER_OFFSET</references>
        <references refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" compoundref="dbus-marshal-header_8h" startline="49">DBusHeader::data</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-marshal-header.c<sp/><sp/>Managing<sp/>marshaling/demarshaling<sp/>of<sp/>message<sp/>headers</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2005<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus/dbus-shared.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-header.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-recursive.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-marshal-byteswap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/*<sp/>Not<sp/>thread<sp/>locked,<sp/>but<sp/>strictly<sp/>const/read-only<sp/>so<sp/>should<sp/>be<sp/>OK</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="group__DBusMarshal_1gab49ca4819ef45b26463427bb09060844" kindref="member">_DBUS_STRING_DEFINE_STATIC</ref>(_dbus_header_signature_str,<sp/><ref refid="group__DBusProtocol_1ga82e39a6508e551fb14c7bdbb17590cc6" kindref="member">DBUS_HEADER_SIGNATURE</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="group__DBusMarshal_1gab49ca4819ef45b26463427bb09060844" kindref="member">_DBUS_STRING_DEFINE_STATIC</ref>(_dbus_local_interface_str,<sp/><sp/><ref refid="group__DBusShared_1ga9ef6478aae637449ec0c5de1679f75ce" kindref="member">DBUS_INTERFACE_LOCAL</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="group__DBusMarshal_1gab49ca4819ef45b26463427bb09060844" kindref="member">_DBUS_STRING_DEFINE_STATIC</ref>(_dbus_local_path_str,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusShared_1ga850990a54a46142ee7c5f8174cc932c1" kindref="member">DBUS_PATH_LOCAL</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" refkind="member"><highlight class="preprocessor">#define<sp/>FIELDS_ARRAY_SIGNATURE_OFFSET<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__DBusMarshal_1gaca36ac2e9b37067279d1bc967793e071" refkind="member"><highlight class="preprocessor">#define<sp/>FIELDS_ARRAY_ELEMENT_SIGNATURE_OFFSET<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" refkind="member"><highlight class="preprocessor">#define<sp/>BYTE_ORDER_OFFSET<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" refkind="member"><highlight class="preprocessor">#define<sp/>TYPE_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" refkind="member"><highlight class="preprocessor">#define<sp/>FLAGS_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="group__DBusMarshal_1ga4f04ecce1223b00d263c0accdea144ad" refkind="member"><highlight class="preprocessor">#define<sp/>VERSION_OFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" refkind="member"><highlight class="preprocessor">#define<sp/>BODY_LENGTH_OFFSET<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" refkind="member"><highlight class="preprocessor">#define<sp/>SERIAL_OFFSET<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" refkind="member"><highlight class="preprocessor">#define<sp/>FIELDS_ARRAY_LENGTH_OFFSET<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" refkind="member"><highlight class="preprocessor">#define<sp/>FIRST_FIELD_OFFSET<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structHeaderFieldType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71" refid="structHeaderFieldType_1aa9431b99ba54853099db8d7a7882b437" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structHeaderFieldType_1aa9431b99ba54853099db8d7a7882b437" kindref="member">code</ref>;<sp/></highlight></codeline>
<codeline lineno="72" refid="structHeaderFieldType_1a904875b9ce744f8103a55aae312521bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structHeaderFieldType_1a904875b9ce744f8103a55aae312521bb" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/><ref refid="structHeaderFieldType" kindref="compound">HeaderFieldType</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structHeaderFieldType" kindref="compound">HeaderFieldType</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">_dbus_header_field_types[<ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>+1]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" kindref="member">DBUS_HEADER_FIELD_INVALID</ref>,<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref><sp/>},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>,<sp/><ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref><sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>,<sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref><sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>,<sp/>DBUS_TYPE_STRING<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>,<sp/>DBUS_TYPE_STRING<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" kindref="member">DBUS_HEADER_FIELD_REPLY_SERIAL</ref>,<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref><sp/>},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>,<sp/>DBUS_TYPE_STRING<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" kindref="member">DBUS_HEADER_FIELD_SENDER</ref>,<sp/>DBUS_TYPE_STRING<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>,<sp/><ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref><sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{<sp/><ref refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" kindref="member">DBUS_HEADER_FIELD_UNIX_FDS</ref>,<sp/>DBUS_TYPE_UINT32<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" refkind="member"><highlight class="preprocessor">#define<sp/>EXPECTED_TYPE_OF_FIELD(field)<sp/>(_dbus_header_field_types[field].type)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="group__DBusMarshal_1gaa10402f90ea6e004e3b9f04eea34f73c" refkind="member"><highlight class="preprocessor">#define<sp/>MAX_POSSIBLE_HEADER_PADDING<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal">reserve_header_padding<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref><sp/>&lt;=<sp/><ref refid="group__DBusMarshal_1gaa10402f90ea6e004e3b9f04eea34f73c" kindref="member">MAX_POSSIBLE_HEADER_PADDING</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga8f13997d90ceed2f437706e6b7804d9b" kindref="member">_dbus_string_lengthen</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa10402f90ea6e004e3b9f04eea34f73c" kindref="member">MAX_POSSIBLE_HEADER_PADDING</ref><sp/>-<sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref>))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref><sp/>=<sp/><ref refid="group__DBusMarshal_1gaa10402f90ea6e004e3b9f04eea34f73c" kindref="member">MAX_POSSIBLE_HEADER_PADDING</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">correct_header_padding<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unpadded_len;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref><sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga7af1cbfa905f26d972ab644d890548b8" kindref="member">_dbus_string_shorten</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>unpadded_len<sp/>=<sp/>_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaeadfb67c4e796131610499c91d0d7813" kindref="member">_dbus_string_align_length</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>8))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;couldn&apos;t<sp/>pad<sp/>header<sp/>though<sp/>enough<sp/>padding<sp/>was<sp/>preallocated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref><sp/>=<sp/>_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>-<sp/>unpadded_len;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" refkind="member"><highlight class="preprocessor">#define<sp/>HEADER_END_BEFORE_PADDING(header)<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/>(_dbus_string_get_length<sp/>(&amp;(header)-&gt;data)<sp/>-<sp/>(header)-&gt;padding)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">_dbus_header_cache_invalidate_all<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[i].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_HEADER_FIELD_VALUE_UNKNOWN;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">_dbus_header_cache_one<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field_code,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*variant_reader)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field_code].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>=</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(variant_reader);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;cached<sp/>value_pos<sp/>%d<sp/>for<sp/>field<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field_code].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref>,<sp/>field_code)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="keywordtype">char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>&gt;<sp/><ref refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" kindref="member">BYTE_ORDER_OFFSET</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>_dbus_string_get_byte<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/><ref refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" kindref="member">BYTE_ORDER_OFFSET</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">_dbus_header_cache_revalidate<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>array;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[i].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_HEADER_FIELD_VALUE_NONEXISTENT;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init</ref><sp/>(&amp;reader,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header),</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" kindref="member">FIELDS_ARRAY_SIGNATURE_OFFSET</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;reader,<sp/>&amp;array);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;array)<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>sub;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>variant;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>field_code;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;array,<sp/>&amp;sub);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;sub)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;sub,<sp/>&amp;field_code);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unknown<sp/>fields<sp/>should<sp/>be<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field_code<sp/>&gt;<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_field;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;sub);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;sub)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;sub,<sp/>&amp;variant);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_header_cache_one<sp/>(header,<sp/>field_code,<sp/>&amp;variant);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>next_field:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;array);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="244"><highlight class="normal">_dbus_header_cache_check<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>==<sp/>_DBUS_HEADER_FIELD_VALUE_UNKNOWN)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>_dbus_header_cache_revalidate<sp/>(header);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>==<sp/>_DBUS_HEADER_FIELD_VALUE_NONEXISTENT)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="267"><highlight class="normal">_dbus_header_cache_known_nonexistent<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>==<sp/>_DBUS_HEADER_FIELD_VALUE_NONEXISTENT);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="285"><highlight class="normal">write_basic_field<sp/>(<ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>*writer,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>sub;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>variant;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>field_byte;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>contained_type;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[2];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>writer-&gt;<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>padding<sp/>=<sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>)<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse</ref><sp/>(writer,<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>&amp;sub))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>append_failed;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>field_byte<sp/>=<sp/>field;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;sub,<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;field_byte))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>append_failed;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>buf[0]<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>buf[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga6792a5c1725faa9d635d95f7a3b5bfae" kindref="member">_dbus_string_init_const_len</ref><sp/>(&amp;contained_type,<sp/>buf,<sp/>1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse</ref><sp/>(&amp;sub,<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;contained_type,<sp/>0,<sp/>&amp;variant))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>append_failed;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;variant,<sp/>type,<sp/>value))</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>append_failed;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(&amp;sub,<sp/>&amp;variant))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>append_failed;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(writer,<sp/>&amp;sub))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>append_failed;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/>append_failed:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" kindref="member">_dbus_string_delete</ref><sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(writer-&gt;<ref refid="structDBusTypeWriter_1aa4e4b3af31fd7a93d0e54d10882bcc07" kindref="member">value_str</ref>)<sp/>-<sp/>start<sp/>-<sp/>padding);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="347"><highlight class="normal">set_basic_field<sp/>(<ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*reader,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*realign_root)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>sub;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>variant;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(reader,<sp/>&amp;sub);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;sub)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DBUS_DISABLE_ASSERT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v_BYTE;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;sub,<sp/>&amp;v_BYTE);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>v_BYTE)<sp/>==<sp/>field);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;sub))</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;no<sp/>variant<sp/>field?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;sub,<sp/>&amp;variant);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;variant)<sp/>==<sp/>type);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gaaf11ca429434c2c280f5fad34ed95204" kindref="member">_dbus_type_reader_set_basic</ref><sp/>(&amp;variant,<sp/>value,<sp/>realign_root))</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" kindref="member">_dbus_header_get_message_type</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>type<sp/>=<sp/>_dbus_string_get_byte<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/><ref refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" kindref="member">TYPE_OFFSET</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(type<sp/>!=<sp/><ref refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" kindref="member">DBUS_MESSAGE_TYPE_INVALID</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" kindref="member">_dbus_header_set_serial</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/><sp/>serial)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>use<sp/>this<sp/>function<sp/>to<sp/>set<sp/>the<sp/>serial<sp/>on<sp/>outgoing</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/>*<sp/>messages,<sp/>and<sp/>to<sp/>reset<sp/>the<sp/>serial<sp/>in<sp/>dbus_message_copy;</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/>*<sp/>this<sp/>assertion<sp/>should<sp/>catch<sp/>a<sp/>double-set<sp/>on<sp/>outgoing.</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" kindref="member">_dbus_header_get_serial</ref><sp/>(header)<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" kindref="member">_dbus_marshal_set_uint32</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" kindref="member">SERIAL_OFFSET</ref>,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serial,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header));</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref></highlight></codeline>
<codeline lineno="427" refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga7ec7222423db42935aae4a24499ee0fb" kindref="member">_dbus_header_get_serial</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" kindref="member">_dbus_marshal_read_uint32</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" kindref="member">SERIAL_OFFSET</ref>,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" kindref="member">_dbus_header_reinit</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>_dbus_header_cache_invalidate_all<sp/>(header);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="460" refid="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gabe1b78193d712976734a39d35842f033" kindref="member">_dbus_header_init</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" kindref="member">_dbus_string_init_preallocated</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>32))</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga6d41ad4de211c87f4b8a43340b6893e2" kindref="member">_dbus_header_reinit</ref><sp/>(header);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gab90a814a27aeeace7e02c4ed130539cf" kindref="member">_dbus_header_free</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="490" refid="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0d5aad82f8bf5a314dcf3f70930e254b" kindref="member">_dbus_header_copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>*dest<sp/>=<sp/>*header;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga569b784beea1b4fa98f05d27e6dd0e72" kindref="member">_dbus_string_init_preallocated</ref><sp/>(&amp;dest-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga3c10f0d1bcaa3b450025b9c6a8b901d7" kindref="member">_dbus_string_copy</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0,<sp/>&amp;dest-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0))</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusString_1ga781ca91acda49a834dce7d0ed0eef212" kindref="member">_dbus_string_free</ref><sp/>(&amp;dest-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>serial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gad92e0b1992cf96a4da642a4a54a5d26d" kindref="member">_dbus_header_set_serial</ref><sp/>(dest,<sp/>0);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="528" refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gac7901e4196f10d4763df89b42d5db03e" kindref="member">_dbus_header_create</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message_type,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*destination,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*path,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*interface,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*member,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*error_name)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v_BYTE;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>v_UINT32;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>array;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(byte_order<sp/>==<sp/><ref refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" kindref="member">DBUS_LITTLE_ENDIAN</ref><sp/>||</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order<sp/>==<sp/><ref refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" kindref="member">DBUS_BIG_ENDIAN</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(((interface<sp/>||<sp/>message_type<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>)<sp/>&amp;&amp;<sp/>member)<sp/>||</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(error_name)<sp/>||</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(interface<sp/>||<sp/>member<sp/>||<sp/>error_name));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reserve_header_padding<sp/>(header))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" kindref="member">_dbus_type_writer_init_values_only</ref><sp/>(&amp;writer,<sp/>byte_order,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,<sp/>0,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" kindref="member">HEADER_END_BEFORE_PADDING</ref><sp/>(header));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>v_BYTE<sp/>=<sp/>byte_order;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_BYTE))</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>v_BYTE<sp/>=<sp/>message_type;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_BYTE))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>v_BYTE<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_BYTE))</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>v_BYTE<sp/>=<sp/><ref refid="group__DBusProtocol_1gae1ab70067a616d852e5fc264abb66608" kindref="member">DBUS_MAJOR_PROTOCOL_VERSION</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_BYTE))</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>v_UINT32<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>body<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_UINT32))</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>v_UINT32<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>serial<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga0103b0214766b0ff1ca05bcc7f1e631b" kindref="member">_dbus_type_writer_write_basic</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_UINT32))</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1ga4c0a1036e59dac270141052d951baff2" kindref="member">_dbus_type_writer_recurse</ref><sp/>(&amp;writer,<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" kindref="member">FIELDS_ARRAY_SIGNATURE_OFFSET</ref>,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;array))</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Marshal<sp/>all<sp/>the<sp/>fields<sp/>(Marshall<sp/>Fields?)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_basic_field<sp/>(&amp;array,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref>,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;path))</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destination<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_basic_field<sp/>(&amp;array,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;destination))</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interface<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_basic_field<sp/>(&amp;array,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;interface))</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(member<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_basic_field<sp/>(&amp;array,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;member))</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_name<sp/>!=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_basic_field<sp/>(&amp;array,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error_name))</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(&amp;writer,<sp/>&amp;array))</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>oom;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>correct_header_padding<sp/>(header);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/>oom:</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga7e0e164ad5bb094e5ccad9edc7ae4235" kindref="member">_dbus_string_delete</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>-<sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>correct_header_padding<sp/>(header);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="673" refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga674d74081baf6e7531e0d4a286724210" kindref="member">_dbus_header_have_message_untrusted</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_message_length,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref><sp/><sp/><sp/><sp/><sp/><sp/>*validity,</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*byte_order,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fields_array_len,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*header_len,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*body_len,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*str,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>header_len_unsigned;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>fields_array_len_unsigned;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>body_len_unsigned;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start<sp/>&lt;<sp/><ref refid="group__DBusInternalsUtils_1gafe869e3145b7e32c4fb6a6741c9fc78e" kindref="member">_DBUS_INT32_MAX</ref><sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(len<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_DBUS_ALIGN_VALUE<sp/>(start,<sp/>8));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>*byte_order<sp/>=<sp/>_dbus_string_get_byte<sp/>(str,<sp/>start<sp/>+<sp/><ref refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" kindref="member">BYTE_ORDER_OFFSET</ref>);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*byte_order<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaae5e00bf9091a457e5bb3f9a75d982ca" kindref="member">DBUS_LITTLE_ENDIAN</ref><sp/>&amp;&amp;<sp/>*byte_order<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaed8596f854e755344dfbc811a73b0757" kindref="member">DBUS_BIG_ENDIAN</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_BAD_BYTE_ORDER;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref><sp/>+<sp/>4<sp/>&lt;=<sp/>len);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>fields_array_len_unsigned<sp/>=<sp/><ref refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" kindref="member">_dbus_marshal_read_uint32</ref><sp/>(str,<sp/>start<sp/>+<sp/><ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref>,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*byte_order,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields_array_len_unsigned<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>max_message_length)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_INSANE_FIELDS_ARRAY_LENGTH;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" kindref="member">BODY_LENGTH_OFFSET</ref><sp/>+<sp/>4<sp/>&lt;<sp/>len);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>body_len_unsigned<sp/>=<sp/><ref refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" kindref="member">_dbus_marshal_read_uint32</ref><sp/>(str,<sp/>start<sp/>+<sp/><ref refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" kindref="member">BODY_LENGTH_OFFSET</ref>,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*byte_order,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(body_len_unsigned<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>max_message_length)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_INSANE_BODY_LENGTH;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>header_len_unsigned<sp/>=<sp/><ref refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" kindref="member">FIRST_FIELD_OFFSET</ref><sp/>+<sp/>fields_array_len_unsigned;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>header_len_unsigned<sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(header_len_unsigned,<sp/>8);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>overflow<sp/>should<sp/>be<sp/>impossible<sp/>since<sp/>the<sp/>lengths<sp/>aren&apos;t<sp/>allowed<sp/>to</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/><sp/><sp/>*<sp/>be<sp/>huge.</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(max_message_length<sp/>&lt;<sp/><ref refid="group__DBusInternalsUtils_1gafe869e3145b7e32c4fb6a6741c9fc78e" kindref="member">_DBUS_INT32_MAX</ref><sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(body_len_unsigned<sp/>+<sp/>header_len_unsigned<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>max_message_length)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_MESSAGE_TOO_LONG;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(body_len_unsigned<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/><ref refid="group__DBusInternalsUtils_1gafe869e3145b7e32c4fb6a6741c9fc78e" kindref="member">_DBUS_INT32_MAX</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(fields_array_len_unsigned<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>_DBUS_INT32_MAX);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(header_len_unsigned<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>_DBUS_INT32_MAX);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>*body_len<sp/>=<sp/>body_len_unsigned;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>*fields_array_len<sp/>=<sp/>fields_array_len_unsigned;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>*header_len<sp/>=<sp/>header_len_unsigned;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>*validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;have<sp/>%d<sp/>bytes,<sp/>need<sp/>body<sp/>%u<sp/>+<sp/>header<sp/>%u<sp/>=<sp/>%u\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/>body_len_unsigned,<sp/>header_len_unsigned,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len_unsigned<sp/>+<sp/>header_len_unsigned);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(body_len_unsigned<sp/>+<sp/>header_len_unsigned)<sp/>&lt;=<sp/>(unsigned)<sp/>len;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></highlight></codeline>
<codeline lineno="753"><highlight class="normal">check_mandatory_fields<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REQUIRE_FIELD(name)<sp/>do<sp/>{<sp/>if<sp/>(header-&gt;fields[DBUS_HEADER_FIELD_##name].value_pos<sp/>&lt;<sp/>0)<sp/>return<sp/>DBUS_INVALID_MISSING_##name;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1ga4427247494fc5c988498c5a87d42092d" kindref="member">_dbus_header_get_message_type</ref><sp/>(header))</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga728d893ff0c00e126517ba39835220a5" kindref="member">DBUS_MESSAGE_TYPE_SIGNAL</ref>:</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_FIELD<sp/>(INTERFACE);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FALL<sp/>THRU<sp/>-<sp/>signals<sp/>also<sp/>require<sp/>the<sp/>path<sp/>and<sp/>member<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga09416afd76b65139eddd31e1085d9ebf" kindref="member">DBUS_MESSAGE_TYPE_METHOD_CALL</ref>:</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_FIELD<sp/>(PATH);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_FIELD<sp/>(MEMBER);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga2b9423d95066313d73eeea8eeaf86812" kindref="member">DBUS_MESSAGE_TYPE_ERROR</ref>:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_FIELD<sp/>(ERROR_NAME);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_FIELD<sp/>(REPLY_SERIAL);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga4a9012edd7f22342f845e98150aeb858" kindref="member">DBUS_MESSAGE_TYPE_METHOD_RETURN</ref>:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE_FIELD<sp/>(REPLY_SERIAL);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>other<sp/>message<sp/>types<sp/>allowed<sp/>but<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal">load_and_validate_field<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*variant_reader)</highlight></codeline>
<codeline lineno="785"><highlight class="normal">{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected_type;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*value_str;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value_pos;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>str_data_pos;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>v_UINT32;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bad_string_code;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>(*<sp/>string_validation_func)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>*str,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Supposed<sp/>to<sp/>have<sp/>been<sp/>checked<sp/>already<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" kindref="member">DBUS_HEADER_FIELD_INVALID</ref>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Before<sp/>we<sp/>can<sp/>cache<sp/>a<sp/>field,<sp/>we<sp/>need<sp/>to<sp/>know<sp/>it<sp/>has<sp/>the<sp/>right<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>type<sp/>=<sp/><ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(variant_reader);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_header_field_types[field].code<sp/>==<sp/>field);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>expected_type<sp/>=<sp/><ref refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" kindref="member">EXPECTED_TYPE_OF_FIELD</ref><sp/>(field);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/>expected_type)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Field<sp/>%d<sp/>should<sp/>have<sp/>type<sp/>%d<sp/>but<sp/>has<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,<sp/>expected_type,<sp/>type);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DBUS_INVALID_HEADER_FIELD_HAS_WRONG_TYPE;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>field<sp/>was<sp/>provided<sp/>twice,<sp/>we<sp/>aren&apos;t<sp/>happy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Header<sp/>field<sp/>%d<sp/>seen<sp/>a<sp/>second<sp/>time\n&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DBUS_INVALID_HEADER_FIELD_APPEARS_TWICE;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>we<sp/>can<sp/>cache<sp/>and<sp/>look<sp/>at<sp/>the<sp/>field<sp/>content<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;initially<sp/>caching<sp/>field<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>_dbus_header_cache_one<sp/>(header,<sp/>field,<sp/>variant_reader);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>compiler<sp/>happy<sp/>that<sp/>all<sp/>this<sp/>is<sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>v_UINT32<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>value_str<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>value_pos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/>str_data_pos<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>bad_string_code<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected_type<sp/>==<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(header,<sp/>field,<sp/>expected_type,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_UINT32);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga7eb77066dadf5415896b44c56d93acce" kindref="member">DBUS_TYPE_STRING</ref><sp/>||</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga31cc59c99a6cbbfcef71756e1390dc4c" kindref="member">DBUS_TYPE_OBJECT_PATH</ref><sp/>||</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_type<sp/>==<sp/><ref refid="group__DBusProtocol_1ga26ed6c20c3d9f0b50ea0a1cf80be3279" kindref="member">DBUS_TYPE_SIGNATURE</ref>)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" kindref="member">_dbus_header_get_field_raw</ref><sp/>(header,<sp/>field,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;value_str,<sp/>&amp;value_pos);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_data_pos<sp/>=<sp/>_DBUS_ALIGN_VALUE<sp/>(value_pos,<sp/>4)<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;none<sp/>of<sp/>the<sp/>known<sp/>fields<sp/>should<sp/>have<sp/>this<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gade98f71a08a1e0198d095fdb6d46cab9" kindref="member">DBUS_HEADER_FIELD_DESTINATION</ref>:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" kindref="member">_dbus_validate_bus_name</ref>;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bad_string_code<sp/>=<sp/>DBUS_INVALID_BAD_DESTINATION;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga296b5f099b6c347f65d53ef0a6fa2b0d" kindref="member">DBUS_HEADER_FIELD_INTERFACE</ref>:</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMarshal_1ga0ad919783f887a9b6f428e262beaeed9" kindref="member">_dbus_validate_interface</ref>;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bad_string_code<sp/>=<sp/>DBUS_INVALID_BAD_INTERFACE;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" kindref="member">_dbus_string_equal_substring</ref><sp/>(&amp;_dbus_local_interface_str,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;_dbus_local_interface_str),</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_str,<sp/>str_data_pos))</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Message<sp/>is<sp/>on<sp/>the<sp/>local<sp/>interface\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DBUS_INVALID_USES_LOCAL_INTERFACE;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga2aa9d65ef983ac9c08c1d4cb31366818" kindref="member">DBUS_HEADER_FIELD_MEMBER</ref>:</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMarshal_1gaf647272768029cb23a4e0d3f493587da" kindref="member">_dbus_validate_member</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bad_string_code<sp/>=<sp/>DBUS_INVALID_BAD_MEMBER;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1gac551be0f921390d01104cce30a814a5e" kindref="member">DBUS_HEADER_FIELD_ERROR_NAME</ref>:</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMarshal_1ga6d8075f3b60e2e71aad061aa44b120fe" kindref="member">_dbus_validate_error_name</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bad_string_code<sp/>=<sp/>DBUS_INVALID_BAD_ERROR_NAME;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga3ba84ae623951832bd73e2796bb13e71" kindref="member">DBUS_HEADER_FIELD_SENDER</ref>:</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMarshal_1gaab91a04fa2a96b8ce8843beae7327cd0" kindref="member">_dbus_validate_bus_name</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bad_string_code<sp/>=<sp/>DBUS_INVALID_BAD_SENDER;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga0cd885e6e808b28ff082a7f8a2c9f579" kindref="member">DBUS_HEADER_FIELD_PATH</ref>:</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OBJECT_PATH<sp/>was<sp/>validated<sp/>generically<sp/>due<sp/>to<sp/>its<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusString_1ga2095c2a797ae245521a7588b32279110" kindref="member">_dbus_string_equal_substring</ref><sp/>(&amp;_dbus_local_path_str,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_string_get_length<sp/>(&amp;_dbus_local_path_str),</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_str,<sp/>str_data_pos))</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Message<sp/>is<sp/>from<sp/>the<sp/>local<sp/>path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DBUS_INVALID_USES_LOCAL_PATH;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga1067e28a7151a161e5fd601a3b017584" kindref="member">DBUS_HEADER_FIELD_REPLY_SERIAL</ref>:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Can&apos;t<sp/>be<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_UINT32<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DBUS_INVALID_BAD_SERIAL;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga03b9c24acbfd1e3da19804c739612885" kindref="member">DBUS_HEADER_FIELD_UNIX_FDS</ref>:</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Every<sp/>value<sp/>makes<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DBusProtocol_1ga450d63fa110d3cb891082e23291580b4" kindref="member">DBUS_HEADER_FIELD_SIGNATURE</ref>:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SIGNATURE<sp/>validated<sp/>generically<sp/>due<sp/>to<sp/>its<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>string_validation_func<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>field<sp/>shouldn&apos;t<sp/>be<sp/>seen<sp/>here&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(string_validation_func)</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>len;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(bad_string_code<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="group__DBusMarshal_1ga6dd82a202c19758cbf76dbed2946615d" kindref="member">_dbus_marshal_read_uint32</ref><sp/>(value_str,<sp/>value_pos,</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header),</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Validating<sp/>string<sp/>header<sp/>field;<sp/>code<sp/>%d<sp/>if<sp/>fails\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad_string_code);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(*string_validation_func)<sp/>(value_str,<sp/>str_data_pos,<sp/>len))</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bad_string_code;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="970" refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0c3a3f95d9a53b91a0cd0b260196685b" kindref="member">_dbus_header_load</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaf9dce059725fa793c44b219460cbbe6d" kindref="member">DBusValidationMode</ref><sp/>mode,</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref><sp/><sp/><sp/><sp/><sp/><sp/>*validity,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fields_array_len,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header_len,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/><sp/>*str,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len)</highlight></codeline>
<codeline lineno="980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftover;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga0c4521d30d6650a33673a4d7f9cc007c" kindref="member">DBusValidity</ref><sp/>v;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>array_reader;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>v_byte;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>v_uint32;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>serial;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding_start;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding_len;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_DBUS_ALIGN_VALUE<sp/>(start,<sp/>8));</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(header_len<sp/>&lt;=<sp/>len);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_string_get_length<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1gaf5f13bc7ac7a623516930d26ae2589bf" kindref="member">_dbus_string_copy_len</ref><sp/>(str,<sp/>start,<sp/>header_len,<sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0))</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>copy<sp/>buffer<sp/>into<sp/>new<sp/>header\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007ca08cf1e84457c1f41acaf082de2060a65" kindref="member">DBUS_VALIDITY_UNKNOWN_OOM_ERROR</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>leftover<sp/>=<sp/>len<sp/>-<sp/>header_len<sp/>-<sp/>body_len<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="group__DBusMarshal_1gae997884ec8091aacb5492c2b5a7eaef9" kindref="member">_dbus_validate_body_with_reason</ref><sp/>(&amp;_dbus_header_signature_str,<sp/>0,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;leftover,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/>start,<sp/>len);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(leftover<sp/>&lt;<sp/>len);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>padding_len<sp/>=<sp/>header_len<sp/>-<sp/>(<ref refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" kindref="member">FIRST_FIELD_OFFSET</ref><sp/>+<sp/>fields_array_len);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>padding_start<sp/>=<sp/>start<sp/>+<sp/><ref refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" kindref="member">FIRST_FIELD_OFFSET</ref><sp/>+<sp/>fields_array_len;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start<sp/>+<sp/>header_len<sp/>==<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>_DBUS_ALIGN_VALUE<sp/>(padding_start,<sp/>8));</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(start<sp/>+<sp/>header_len<sp/>==<sp/>padding_start<sp/>+<sp/>padding_len);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>!=<sp/>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusString_1ga199d0fc00ee3cd0300a1b3870d7986a3" kindref="member">_dbus_string_validate_nul</ref><sp/>(str,<sp/>padding_start,<sp/>padding_len))</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_ALIGNMENT_PADDING_NOT_NUL;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1aa22a8d00f061310e12716f656b4d9b8f" kindref="member">padding</ref><sp/>=<sp/>padding_len;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mode<sp/>==<sp/>DBUS_VALIDATION_MODE_WE_TRUST_THIS_DATA_ABSOLUTELY)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>now<sp/>know<sp/>the<sp/>data<sp/>is<sp/>well-formed,<sp/>but<sp/>we<sp/>have<sp/>to<sp/>check<sp/>that</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/>*<sp/>it&apos;s<sp/>valid.</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init</ref><sp/>(&amp;reader,</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte_order,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,<sp/>0,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/>start);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>BYTE<sp/>ORDER<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" kindref="member">BYTE_ORDER_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;reader,<sp/>&amp;v_byte);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;reader);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(v_byte<sp/>==<sp/>byte_order);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>MESSAGE<sp/>TYPE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1gaf4fe78df75f4afa2ec63304462614b03" kindref="member">TYPE_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;reader,<sp/>&amp;v_byte);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;reader);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>message<sp/>types<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>ignored,<sp/>so<sp/>only<sp/>validation<sp/>here<sp/>is</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/><sp/><sp/>*<sp/>that<sp/>it<sp/>isn&apos;t<sp/>invalid</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_byte<sp/>==<sp/><ref refid="group__DBusProtocol_1gac975525a6ce258a7a70c583c9741b516" kindref="member">DBUS_MESSAGE_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_BAD_MESSAGE_TYPE;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FLAGS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" kindref="member">FLAGS_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;reader,<sp/>&amp;v_byte);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;reader);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>unknown<sp/>flags<sp/>should<sp/>be<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>PROTOCOL<sp/>VERSION<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1ga4f04ecce1223b00d263c0accdea144ad" kindref="member">VERSION_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;reader,<sp/>&amp;v_byte);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;reader);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_byte<sp/>!=<sp/><ref refid="group__DBusProtocol_1gae1ab70067a616d852e5fc264abb66608" kindref="member">DBUS_MAJOR_PROTOCOL_VERSION</ref>)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_BAD_PROTOCOL_VERSION;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>BODY<sp/>LENGTH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" kindref="member">BODY_LENGTH_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;reader,<sp/>&amp;v_uint32);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;reader);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(body_len<sp/>==<sp/>(</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal">)<sp/>v_uint32);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>SERIAL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1gaedb1740bd8a9174b98ac593eded25d49" kindref="member">DBUS_TYPE_UINT32</ref>);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1ga4a9c0639714b478a4905cdd6e999b6b3" kindref="member">SERIAL_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;reader,<sp/>&amp;serial);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;reader);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serial<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_BAD_SERIAL;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga8912f600f81a773066ca03d9163613a9" kindref="member">DBUS_TYPE_ARRAY</ref>);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1ga2a8ab1152821950b1fe29e000954981c" kindref="member">_dbus_type_reader_get_value_pos</ref><sp/>(&amp;reader)<sp/>==<sp/><ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;reader,<sp/>&amp;array_reader);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;array_reader)<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>struct_reader;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>variant_reader;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>field_code;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;array_reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;array_reader,<sp/>&amp;struct_reader);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;struct_reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;struct_reader,<sp/>&amp;field_code);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;struct_reader);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field_code<sp/>==<sp/><ref refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" kindref="member">DBUS_HEADER_FIELD_INVALID</ref>)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>header<sp/>field<sp/>code\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>DBUS_INVALID_HEADER_FIELD_CODE;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field_code<sp/>&gt;<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>header<sp/>field<sp/>code<sp/>%d,<sp/>skipping\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field_code);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>next_field;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;struct_reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga4aa7a463ad2bce4e9aa95e3e397ddcf1" kindref="member">DBUS_TYPE_VARIANT</ref>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(&amp;struct_reader,<sp/>&amp;variant_reader);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>load_and_validate_field<sp/>(header,<sp/>field_code,<sp/>&amp;variant_reader);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Field<sp/>%d<sp/>was<sp/>invalid\n&quot;</highlight><highlight class="normal">,<sp/>field_code);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>next_field:</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(&amp;array_reader);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Anything<sp/>we<sp/>didn&apos;t<sp/>fill<sp/>in<sp/>is<sp/>now<sp/>known<sp/>not<sp/>to<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>)</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[i].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>==<sp/>_DBUS_HEADER_FIELD_VALUE_UNKNOWN)</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[i].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>=<sp/>_DBUS_HEADER_FIELD_VALUE_NONEXISTENT;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/>v<sp/>=<sp/>check_mandatory_fields<sp/>(header);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>)</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_verbose<sp/>(</highlight><highlight class="stringliteral">&quot;Mandatory<sp/>fields<sp/>were<sp/>missing,<sp/>code<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>v);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validity<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>invalid;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>*validity<sp/>=<sp/><ref refid="group__DBusMarshal_1gga0c4521d30d6650a33673a4d7f9cc007cae68ac5067fe94cdcfb35e115f36298c8" kindref="member">DBUS_VALID</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/>invalid:</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><ref refid="group__DBusString_1ga08c423b93c28dd746dcb93e0461ab95c" kindref="member">_dbus_string_set_length</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196" refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga0cff04252f97f6a25552c368199897f5" kindref="member">_dbus_header_update_lengths</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header,</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga4bcfb6a664c7e46c7ffc31f96d532a02" kindref="member">_dbus_marshal_set_uint32</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga190a2d89e79c9d76fcba4f06ec8b5b5c" kindref="member">BODY_LENGTH_OFFSET</ref>,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>body_len,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header));</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1219"><highlight class="normal">find_field_for_modification<sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*reader,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>*realign_root)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/>retval;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga35d70cf69b1196518367e3e68e9b2dd2" kindref="member">_dbus_type_reader_init</ref><sp/>(realign_root,</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header),</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" kindref="member">FIELDS_ARRAY_SIGNATURE_OFFSET</ref>,</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(realign_root,<sp/>reader);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader)<sp/>!=<sp/><ref refid="group__DBusProtocol_1gaa9588da889743b2119dc6664712ae51e" kindref="member">DBUS_TYPE_INVALID</ref>)</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>sub;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>field_code;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga082b410820c74b2a6ca816a8e0c91803" kindref="member">_dbus_type_reader_recurse</ref><sp/>(reader,<sp/>&amp;sub);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(&amp;sub)<sp/>==<sp/><ref refid="group__DBusProtocol_1ga355d6d0998164a5eb915a26fb67fce5f" kindref="member">DBUS_TYPE_BYTE</ref>);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaa54355ee98d6721d7a29b5ae7d92eb9a" kindref="member">_dbus_type_reader_read_basic</ref><sp/>(&amp;sub,<sp/>&amp;field_code);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field_code<sp/>==<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)<sp/>field)</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(<ref refid="group__DBusMarshal_1gab8e39cb8084247d54d7f272c51622a73" kindref="member">_dbus_type_reader_get_current_type</ref><sp/>(reader)<sp/>==<sp/><ref refid="group__DBusProtocol_1gae4b22a74b9edb0ec0ff6e0294794d3f9" kindref="member">DBUS_TYPE_STRUCT</ref>);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>done;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga746c09512d4905f2d2fac7ed4c3c63c2" kindref="member">_dbus_type_reader_next</ref><sp/>(reader);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/>done:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1273" refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga4349de00b7754a337526e36fda133464" kindref="member">_dbus_header_set_field_basic</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reserve_header_padding<sp/>(header))</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>the<sp/>field<sp/>exists<sp/>we<sp/>set,<sp/>otherwise<sp/>we<sp/>append<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_header_cache_check<sp/>(header,<sp/>field))</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>realign_root;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!find_field_for_modification<sp/>(header,<sp/>field,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader,<sp/>&amp;realign_root))</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;field<sp/>was<sp/>marked<sp/>present<sp/>in<sp/>cache<sp/>but<sp/>wasn&apos;t<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!set_basic_field<sp/>(&amp;reader,<sp/>field,<sp/>type,<sp/>value,<sp/>&amp;realign_root))</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structDBusTypeWriter" kindref="compound">DBusTypeWriter</ref><sp/>array;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga1f101175ce6f33221fcb59f0b46349bd" kindref="member">_dbus_type_writer_init_values_only</ref><sp/>(&amp;writer,</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header),</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1ga935ea6d7c6bb72a10c670f5ef3e34d49" kindref="member">FIELDS_ARRAY_SIGNATURE_OFFSET</ref>,</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>recurse<sp/>into<sp/>array<sp/>without<sp/>creating<sp/>a<sp/>new<sp/>length,<sp/>and<sp/>jump<sp/>to</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>end<sp/>of<sp/>array.</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gacc2b4c348f93898f6269feb0bf055617" kindref="member">_dbus_type_writer_append_array</ref><sp/>(&amp;writer,</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;_dbus_header_signature_str,</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMarshal_1gaca36ac2e9b37067279d1bc967793e071" kindref="member">FIELDS_ARRAY_ELEMENT_SIGNATURE_OFFSET</ref>,</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;array))</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;recurse<sp/>into<sp/>ARRAY<sp/>should<sp/>not<sp/>have<sp/>used<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(array.<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.len_pos<sp/>==<sp/><ref refid="group__DBusMarshal_1gae9759e0de1d8a650f37632c3dc22427e" kindref="member">FIELDS_ARRAY_LENGTH_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(array.<ref refid="structDBusTypeWriter_1afe24080d2be45fb6033833a1a38d5d1a" kindref="member">u</ref>.array.start_pos<sp/>==<sp/><ref refid="group__DBusMarshal_1gaaa085e57f49f527ef210e842be999929" kindref="member">FIRST_FIELD_OFFSET</ref>);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(array.<ref refid="structDBusTypeWriter_1a27c0475eedd90be65f90a799e5210947" kindref="member">value_pos</ref><sp/>==<sp/><ref refid="group__DBusMarshal_1gaef7e86e442aeb887c8bfe5559cd4eabb" kindref="member">HEADER_END_BEFORE_PADDING</ref><sp/>(header));</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!write_basic_field<sp/>(&amp;array,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,<sp/>type,<sp/>value))</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gacbe7eddf4f9c19da91b742087fcc111a" kindref="member">_dbus_type_writer_unrecurse</ref><sp/>(&amp;writer,<sp/>&amp;array))</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga0c4961ec784874f1b1f3aeccea8d3da1" kindref="member">_dbus_assert_not_reached</ref><sp/>(</highlight><highlight class="stringliteral">&quot;unrecurse<sp/>from<sp/>ARRAY<sp/>should<sp/>not<sp/>have<sp/>used<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>correct_header_padding<sp/>(header);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>could<sp/>be<sp/>smarter<sp/>about<sp/>this<sp/>(only<sp/>invalidate<sp/>fields<sp/>after<sp/>the</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/><sp/><sp/>*<sp/>one<sp/>we<sp/>modified,<sp/>or<sp/>even<sp/>only<sp/>if<sp/>the<sp/>one<sp/>we<sp/>modified<sp/>changed</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/><sp/><sp/>*<sp/>length).<sp/>But<sp/>this<sp/>hack<sp/>is<sp/>a<sp/>start.</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>_dbus_header_cache_invalidate_all<sp/>(header);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1351" refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga499973a18dcb17d854eaf14101a66736" kindref="member">_dbus_header_get_field_basic</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>!=<sp/><ref refid="group__DBusProtocol_1ga075b0efc570129393d3fb653ce4bbd76" kindref="member">DBUS_HEADER_FIELD_INVALID</ref>);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(field<sp/>&lt;=<sp/><ref refid="group__DBusProtocol_1ga94f09d2b35473c8ffa6d3190b5f97c5c" kindref="member">DBUS_HEADER_FIELD_LAST</ref>);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(_dbus_header_field_types[field].code<sp/>==<sp/>field);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>in<sp/>light<sp/>of<sp/>this<sp/>you<sp/>might<sp/>ask<sp/>why<sp/>the<sp/>type<sp/>is<sp/>passed<sp/>in;</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>only<sp/>rationale<sp/>I<sp/>can<sp/>think<sp/>of<sp/>is<sp/>so<sp/>the<sp/>caller<sp/>has</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/><sp/><sp/>*<sp/>to<sp/>specify<sp/>its<sp/>expectation<sp/>and<sp/>breaks<sp/>if<sp/>we<sp/>change<sp/>it</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(type<sp/>==<sp/><ref refid="group__DBusMarshal_1ga37be3d294f5be31c95bc7620e451b0b2" kindref="member">EXPECTED_TYPE_OF_FIELD</ref><sp/>(field));</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_header_cache_check<sp/>(header,<sp/>field))</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref><sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1gab331e099fa8cf3d94cf33ad7b20c81ae" kindref="member">_dbus_marshal_read_basic</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref>,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/>value,<sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header),</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1392" refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gaf4661ba8e7067f349ba03c9f5776bbb0" kindref="member">_dbus_header_get_field_raw</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structDBusString" kindref="compound">DBusString</ref><sp/>**str,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pos)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_dbus_header_cache_check<sp/>(header,<sp/>field))</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>*str<sp/>=<sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>*pos<sp/>=<sp/>header-&gt;<ref refid="structDBusHeader_1ac58a309593d0dc7e8d5a02f3b3442384" kindref="member">fields</ref>[field].<ref refid="structDBusHeaderField_1aa9616d127de7488f6d9dc18c4d0c2133" kindref="member">value_pos</ref>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1416" refid="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga7814248f4d74d109d29dc00487cd9b0c" kindref="member">_dbus_header_delete_field</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><ref refid="structDBusTypeReader" kindref="compound">DBusTypeReader</ref><sp/>realign_root;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_dbus_header_cache_known_nonexistent<sp/>(header,<sp/>field))</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Scan<sp/>to<sp/>the<sp/>field<sp/>we<sp/>want,<sp/>delete<sp/>and<sp/>realign,<sp/>reappend</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/><sp/><sp/>*<sp/>padding.<sp/>Field<sp/>may<sp/>turn<sp/>out<sp/>not<sp/>to<sp/>exist.</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!find_field_for_modification<sp/>(header,<sp/>field,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reader,<sp/>&amp;realign_root))</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>to<sp/>do<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!reserve_header_padding<sp/>(header))</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__DBusMarshal_1gaa4057610b3d9e81fed212c17f6599516" kindref="member">_dbus_type_reader_delete</ref><sp/>(&amp;reader,</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;realign_root))</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>correct_header_padding<sp/>(header);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>_dbus_header_cache_invalidate_all<sp/>(header);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(!_dbus_header_cache_check<sp/>(header,<sp/>field));<sp/></highlight><highlight class="comment">/*<sp/>Expensive<sp/>assertion<sp/>...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457" refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gad2073f8f2f2ba3b710aa929dced34cc3" kindref="member">_dbus_header_toggle_flag</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>flag,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref><sp/><sp/><sp/>value)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flags_p;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>flags_p<sp/>=<sp/><ref refid="group__DBusString_1ga7a73fb373398606e6e1d0a86c4587a3c" kindref="member">_dbus_string_get_data_len</ref><sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/><ref refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" kindref="member">FLAGS_OFFSET</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value)</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>*flags_p<sp/>|=<sp/>flag;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>*flags_p<sp/>&amp;=<sp/>~flag;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="1479" refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1ga56619efed3088554b8760edd246b4157" kindref="member">_dbus_header_get_flag</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/><sp/><sp/>*header,</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusTypes_1gaf513803b030613a669cc7ef199f90a8b" kindref="member">dbus_uint32_t</ref><sp/>flag)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flags_p;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>flags_p<sp/>=<sp/>_dbus_string_get_const_data_len<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/><ref refid="group__DBusMarshal_1ga7fe1bac4010cdc7e27de1e19702c071e" kindref="member">FLAGS_OFFSET</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*flags_p<sp/>&amp;<sp/>flag)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496" refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" refkind="member"><highlight class="normal"><ref refid="group__DBusMarshal_1gae5277c7b7bfb7b85e421baceac0398c8" kindref="member">_dbus_header_byteswap</ref><sp/>(<ref refid="structDBusHeader" kindref="compound">DBusHeader</ref><sp/>*header,</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_order)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte_order;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>byte_order<sp/>=<sp/><ref refid="group__DBusMarshal_1ga65c023673b837c27e8ccda5c2528d806" kindref="member">_dbus_header_get_byte_order</ref><sp/>(header);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte_order<sp/>==<sp/>new_order)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMarshal_1ga609a4b8c0b65096890766fda73a4c40f" kindref="member">_dbus_marshal_byteswap</ref><sp/>(&amp;_dbus_header_signature_str,</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>byte_order,</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_order,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/>_dbus_string_set_byte<sp/>(&amp;header-&gt;<ref refid="structDBusHeader_1a67df8bff43c10e2d4f6ae36b56ee5814" kindref="member">data</ref>,<sp/><ref refid="group__DBusMarshal_1gaa5b7e77f37761139698892e4b8aad029" kindref="member">BYTE_ORDER_OFFSET</ref>,<sp/>new_order);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-marshal-header.c"/>
  </compounddef>
</doxygen>
