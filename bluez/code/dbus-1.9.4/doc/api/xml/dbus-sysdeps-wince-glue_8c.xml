<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dbus-sysdeps-wince-glue_8c" kind="file" language="C++">
    <compoundname>dbus-sysdeps-wince-glue.c</compoundname>
    <includes local="no">config.h</includes>
    <includes refid="dbus-internals_8h" local="yes">dbus-internals.h</includes>
    <includes refid="dbus-sysdeps_8h" local="yes">dbus-sysdeps.h</includes>
    <includes refid="dbus-sysdeps-win_8h" local="yes">dbus-sysdeps-win.h</includes>
    <includes local="no">windows.h</includes>
    <incdepgraph>
      <node id="3987">
        <label>stdarg.h</label>
      </node>
      <node id="3996">
        <label>windows.h</label>
      </node>
      <node id="3981">
        <label>dbus/dbus-protocol.h</label>
        <link refid="dbus-protocol_8h_source"/>
      </node>
      <node id="3976">
        <label>dbus/dbus-macros.h</label>
        <link refid="dbus-macros_8h_source"/>
      </node>
      <node id="3983">
        <label>stdint.h</label>
      </node>
      <node id="3989">
        <label>sys/poll.h</label>
      </node>
      <node id="3995">
        <label>malloc.h</label>
      </node>
      <node id="3972">
        <label>dbus-sysdeps-wince-glue.c</label>
        <link refid="dbus-sysdeps-wince-glue.c"/>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3992" relation="include">
        </childnode>
        <childnode refid="3996" relation="include">
        </childnode>
      </node>
      <node id="3982">
        <label>dbus/dbus-sysdeps.h</label>
        <link refid="dbus-sysdeps_8h_source"/>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3984" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3986" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
        <childnode refid="3987" relation="include">
        </childnode>
        <childnode refid="3989" relation="include">
        </childnode>
      </node>
      <node id="3974">
        <label>dbus-internals.h</label>
        <link refid="dbus-internals_8h_source"/>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3990" relation="include">
        </childnode>
      </node>
      <node id="3977">
        <label>stddef.h</label>
      </node>
      <node id="3986">
        <label>dbus/dbus-string.h</label>
        <link refid="dbus-string_8h_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3987" relation="include">
        </childnode>
      </node>
      <node id="3979">
        <label>dbus/dbus-arch-deps.h</label>
        <link refid="dbus-arch-deps_8h_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
      </node>
      <node id="3988">
        <label>string.h</label>
      </node>
      <node id="3991">
        <label>dbus/dbus-threads.h</label>
        <link refid="dbus-threads_8h_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="3993">
        <label>dbus-hash.h</label>
        <link refid="dbus-hash_8h_source"/>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
      </node>
      <node id="3994">
        <label>ctype.h</label>
      </node>
      <node id="3990">
        <label>dbus/dbus-threads-internal.h</label>
        <link refid="dbus-threads-internal_8h_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>config.h</label>
      </node>
      <node id="3992">
        <label>dbus-sysdeps-win.h</label>
        <link refid="dbus-sysdeps-win_8h_source"/>
        <childnode refid="3993" relation="include">
        </childnode>
        <childnode refid="3986" relation="include">
        </childnode>
        <childnode refid="3994" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3996" relation="include">
        </childnode>
      </node>
      <node id="3985">
        <label>dbus/dbus-file.h</label>
        <link refid="dbus-file_8h_source"/>
        <childnode refid="3986" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
      </node>
      <node id="3980">
        <label>dbus/dbus-errors.h</label>
        <link refid="dbus-errors_8h_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
      </node>
      <node id="3978">
        <label>dbus/dbus-types.h</label>
        <link refid="dbus-types_8h_source"/>
        <childnode refid="3977" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
      </node>
      <node id="3984">
        <label>inttypes.h</label>
      </node>
      <node id="3975">
        <label>dbus/dbus-memory.h</label>
        <link refid="dbus-memory_8h_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dbus-sysdeps-wince-glue_8c_1a3d5a0c65d5d0537d49cc85a332608876" prot="public" static="no">
        <name>CSIDL_PERSONAL</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="38" column="9" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dbus-sysdeps-wince-glue_8c_1a736a128764c23ee234d2c6118401ef71" prot="public" static="no">
        <name>MAX_ENV</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="283" column="9" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="dbus-sysdeps-wince-glue_8c_1a0fb0f0412b602d8b8f43376c86479f8b" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* environ[MAX_ENV+1]</definition>
        <argsstring>[MAX_ENV+1]</argsstring>
        <name>environ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="285" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ac709b9af427042e0a5d89f2cef90881b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* stpcpy</definition>
        <argsstring>(char *dest, const char *src)</argsstring>
        <name>stpcpy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="44" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a8667f0c74b814fdd831a2889138facd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* get_verbose_setting</definition>
        <argsstring>()</argsstring>
        <name>get_verbose_setting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="61" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="61" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a8fd3ec422c466b101d3089da99336748" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* read_w32_registry_string</definition>
        <argsstring>(const char *root, const char *dir, const char *name)</argsstring>
        <name>read_w32_registry_string</name>
        <param>
          <type>const char *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="138" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="138" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a2591dc59966798386ee5b091936a46a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* find_inst_dir</definition>
        <argsstring>()</argsstring>
        <name>find_inst_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="197" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="197" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a42e4aa97dc4f04c5d1916fa1c211997a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* find_env_in_registry</definition>
        <argsstring>(const char *name)</argsstring>
        <name>find_env_in_registry</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="206" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="206" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1adc05aadfaaf4f77c8d926d7c50812cdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* find_program_in_inst_dir</definition>
        <argsstring>(const char *name)</argsstring>
        <name>find_program_in_inst_dir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="215" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="215" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a94710fe5ab43050484dfc1dbfe40c763" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* find_inst_subdir</definition>
        <argsstring>(const char *name)</argsstring>
        <name>find_inst_subdir</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="239" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="239" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ac25b6a02346097ccc71c573462583790" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* find_my_documents_folder</definition>
        <argsstring>()</argsstring>
        <name>find_my_documents_folder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="263" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="263" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1abc6595dbf6880c71628fecf0dbb23d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* getenv</definition>
        <argsstring>(const char *name)</argsstring>
        <name>getenv</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="288" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="288" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a62578df215c968b6b9af70424f1a4651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int putenv</definition>
        <argsstring>(char *str)</argsstring>
        <name>putenv</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="328" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="328" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ade863cfcca9ee19f20ca95796f8ddc1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>clock_t</type>
        <definition>clock_t clock</definition>
        <argsstring>(void)</argsstring>
        <name>clock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="368" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a8dec7c95227ff149687066cf04029191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void abort</definition>
        <argsstring>(void)</argsstring>
        <name>abort</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="375" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="375" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ae4cdcceaf9535d16cf9364dcae717e1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetSystemTimeAsFileTime</definition>
        <argsstring>(LPFILETIME ftp)</argsstring>
        <name>GetSystemTimeAsFileTime</name>
        <param>
          <type>LPFILETIME</type>
          <declname>ftp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="383" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="383" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1aeabca0a467fc914b1440c381dd5983fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>unsigned char* _mbsrchr</definition>
        <argsstring>(const unsigned char *str, unsigned int ch)</argsstring>
        <name>_mbsrchr</name>
        <param>
          <type>const unsigned char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="392" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="392" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a245caa8ceaf4a88433b14586f47a5340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE OpenFileMappingA</definition>
        <argsstring>(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCSTR lpName)</argsstring>
        <name>OpenFileMappingA</name>
        <param>
          <type>DWORD</type>
          <declname>dwDesiredAccess</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>bInheritHandle</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="399" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="399" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a1831c17ebce019349459a127677a6d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL MoveFileExA</definition>
        <argsstring>(LPCSTR lpExistingFileName, LPCSTR lpNewFileName, DWORD dwFlags)</argsstring>
        <name>MoveFileExA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpExistingFileName</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpNewFileName</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="430" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="430" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a6fc0fadfe586c8872d9a0af5f0b54a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL SetHandleInformation</definition>
        <argsstring>(HANDLE hObject, DWORD dwMask, DWORD dwFlags)</argsstring>
        <name>SetHandleInformation</name>
        <param>
          <type>HANDLE</type>
          <declname>hObject</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwMask</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="445" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="445" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a4223b345ba4fead20bb4a8c45772071a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD SearchPathA</definition>
        <argsstring>(LPCSTR lpPath, LPCSTR lpFileName, LPCSTR lpExtension, DWORD nBufferLength, LPSTR lpBuffer, LPSTR *lpFilePart)</argsstring>
        <name>SearchPathA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpPath</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpFileName</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpExtension</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>nBufferLength</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>lpBuffer</declname>
        </param>
        <param>
          <type>LPSTR *</type>
          <declname>lpFilePart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="457" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="457" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1acb76f2c7d0567ffafbede5bd2ec02526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></type>
        <definition>dbus_bool_t _dbus_getsid</definition>
        <argsstring>(char **sid)</argsstring>
        <name>_dbus_getsid</name>
        <param>
          <type>char **</type>
          <declname>sid</declname>
        </param>
        <briefdescription>
<para>Gets our SID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sid</parametername>
</parameternamelist>
<parameterdescription>
<para>points to sid buffer, need to be freed with LocalFree() </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>process sid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="498" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="498" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a1c683104056777978eee58b9d05d6dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL LookupAccountNameW</definition>
        <argsstring>(LPCWSTR lpSystemName, LPCWSTR lpAccountName, PSID Sid, PDWORD cbSid, LPWSTR ReferencedDomainName, PDWORD cchReferencedDomainName, PSID_NAME_USE peUse)</argsstring>
        <name>LookupAccountNameW</name>
        <param>
          <type>LPCWSTR</type>
          <declname>lpSystemName</declname>
        </param>
        <param>
          <type>LPCWSTR</type>
          <declname>lpAccountName</declname>
        </param>
        <param>
          <type>PSID</type>
          <declname>Sid</declname>
        </param>
        <param>
          <type>PDWORD</type>
          <declname>cbSid</declname>
        </param>
        <param>
          <type>LPWSTR</type>
          <declname>ReferencedDomainName</declname>
        </param>
        <param>
          <type>PDWORD</type>
          <declname>cchReferencedDomainName</declname>
        </param>
        <param>
          <type>PSID_NAME_USE</type>
          <declname>peUse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="516" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="516" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a278412856f1558e129dc1a41824cdc3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL IsValidSid</definition>
        <argsstring>(PSID psid)</argsstring>
        <name>IsValidSid</name>
        <param>
          <type>PSID</type>
          <declname>psid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="525" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="525" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1aa44ce7d4afc94d7fa5abf4bf9f48711c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE CreateFileA</definition>
        <argsstring>(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwSharedMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)</argsstring>
        <name>CreateFileA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpFileName</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwDesiredAccess</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwSharedMode</declname>
        </param>
        <param>
          <type>LPSECURITY_ATTRIBUTES</type>
          <declname>lpSecurityAttributes</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwCreationDisposition</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwFlagsAndAttributes</declname>
        </param>
        <param>
          <type>HANDLE</type>
          <declname>hTemplateFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="533" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="533" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1aaed1a9c1b5aa0e52c471ec413a8df2cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL DeleteFileA</definition>
        <argsstring>(LPCSTR lpFileName)</argsstring>
        <name>DeleteFileA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="558" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="558" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ac6c9527fec1ed17fc0cdbc1dfbc8afd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL MoveFileA</definition>
        <argsstring>(LPCSTR lpExistingFileName, LPCSTR lpNewFileName)</argsstring>
        <name>MoveFileA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpExistingFileName</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpNewFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="578" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="578" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a16386e615b3b7613e8915ddfe6c6ebeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD GetFileAttributesA</definition>
        <argsstring>(LPCSTR lpFileName)</argsstring>
        <name>GetFileAttributesA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="607" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="607" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a07e95d3f985303301ec80b0a411d95eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL GetFileAttributesExA</definition>
        <argsstring>(LPCSTR lpFileName, GET_FILEEX_INFO_LEVELS fInfoLevelId, PVOID lpFileInformation)</argsstring>
        <name>GetFileAttributesExA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpFileName</declname>
        </param>
        <param>
          <type>GET_FILEEX_INFO_LEVELS</type>
          <declname>fInfoLevelId</declname>
        </param>
        <param>
          <type>PVOID</type>
          <declname>lpFileInformation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="627" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="627" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a4e8b21a327fd0239d7b6a9ef7c95718d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE CreateFileMappingA</definition>
        <argsstring>(HANDLE hFile, LPSECURITY_ATTRIBUTES lpAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCSTR lpName)</argsstring>
        <name>CreateFileMappingA</name>
        <param>
          <type>HANDLE</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>LPSECURITY_ATTRIBUTES</type>
          <declname>lpAttributes</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>flProtect</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwMaximumSizeHigh</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwMaximumSizeLow</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="648" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="648" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1acf3950e1c33a8e212720bbd6f3f4bffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL CreateDirectoryA</definition>
        <argsstring>(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)</argsstring>
        <name>CreateDirectoryA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpPathName</declname>
        </param>
        <param>
          <type>LPSECURITY_ATTRIBUTES</type>
          <declname>lpSecurityAttributes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="677" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="677" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a211d962429c914af7a3fe9e259e9aaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL RemoveDirectoryA</definition>
        <argsstring>(LPCSTR lpPathName)</argsstring>
        <name>RemoveDirectoryA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpPathName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="697" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="697" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a364b2b44e8380f21c6acf57f56cbef25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>static BOOL convert_find_data</definition>
        <argsstring>(LPWIN32_FIND_DATAW fdw, LPWIN32_FIND_DATAA fda)</argsstring>
        <name>convert_find_data</name>
        <param>
          <type>LPWIN32_FIND_DATAW</type>
          <declname>fdw</declname>
        </param>
        <param>
          <type>LPWIN32_FIND_DATAA</type>
          <declname>fda</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="717" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="717" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a611ee39fd22b7a7e7a3a0674ac0593dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE FindFirstFileA</definition>
        <argsstring>(LPCSTR lpFileName, LPWIN32_FIND_DATAA lpFindFileData)</argsstring>
        <name>FindFirstFileA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpFileName</declname>
        </param>
        <param>
          <type>LPWIN32_FIND_DATAA</type>
          <declname>lpFindFileData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="742" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="742" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a464c3f475d7a23d38c8b652d4e12da46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL FindNextFileA</definition>
        <argsstring>(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)</argsstring>
        <name>FindNextFileA</name>
        <param>
          <type>HANDLE</type>
          <declname>hFindFile</declname>
        </param>
        <param>
          <type>LPWIN32_FIND_DATAA</type>
          <declname>lpFindFileData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="774" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="774" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a2e30332e23b1919eb69c848413f3a96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HANDLE</type>
        <definition>HANDLE CreateMutexA</definition>
        <argsstring>(LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCSTR lpName)</argsstring>
        <name>CreateMutexA</name>
        <param>
          <type>LPSECURITY_ATTRIBUTES</type>
          <declname>lpMutexAttributes</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>bInitialOwner</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="789" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="789" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ac0a80253459ec1716e100141bdb14771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL CreateProcessA</definition>
        <argsstring>(LPCSTR pszImageName, LPSTR pszCmdLine, LPSECURITY_ATTRIBUTES psaProcess, LPSECURITY_ATTRIBUTES psaThread, BOOL fInheritHandles, DWORD fdwCreate, PVOID pvEnvironment, LPCSTR pszCurDir, LPSTARTUPINFOA psiStartInfo, LPPROCESS_INFORMATION pProcInfo)</argsstring>
        <name>CreateProcessA</name>
        <param>
          <type>LPCSTR</type>
          <declname>pszImageName</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>pszCmdLine</declname>
        </param>
        <param>
          <type>LPSECURITY_ATTRIBUTES</type>
          <declname>psaProcess</declname>
        </param>
        <param>
          <type>LPSECURITY_ATTRIBUTES</type>
          <declname>psaThread</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>fInheritHandles</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>fdwCreate</declname>
        </param>
        <param>
          <type>PVOID</type>
          <declname>pvEnvironment</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>pszCurDir</declname>
        </param>
        <param>
          <type>LPSTARTUPINFOA</type>
          <declname>psiStartInfo</declname>
        </param>
        <param>
          <type>LPPROCESS_INFORMATION</type>
          <declname>pProcInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="815" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="815" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1ac1901697f3800044065fa785d92ce4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LONG</type>
        <definition>LONG RegOpenKeyExA</definition>
        <argsstring>(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY phkResult)</argsstring>
        <name>RegOpenKeyExA</name>
        <param>
          <type>HKEY</type>
          <declname>hKey</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpSubKey</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>ulOptions</declname>
        </param>
        <param>
          <type>REGSAM</type>
          <declname>samDesired</declname>
        </param>
        <param>
          <type>PHKEY</type>
          <declname>phkResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="863" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="863" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a510afc2b2c25cf7eb01edbe4330c1c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>LONG</type>
        <definition>LONG RegQueryValueExA</definition>
        <argsstring>(HKEY hKey, LPCSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)</argsstring>
        <name>RegQueryValueExA</name>
        <param>
          <type>HKEY</type>
          <declname>hKey</declname>
        </param>
        <param>
          <type>LPCSTR</type>
          <declname>lpValueName</declname>
        </param>
        <param>
          <type>LPDWORD</type>
          <declname>lpReserved</declname>
        </param>
        <param>
          <type>LPDWORD</type>
          <declname>lpType</declname>
        </param>
        <param>
          <type>LPBYTE</type>
          <declname>lpData</declname>
        </param>
        <param>
          <type>LPDWORD</type>
          <declname>lpcbData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="889" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="889" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a11d3cd2a6b8df460968e0c3919611129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD FormatMessageA</definition>
        <argsstring>(DWORD dwFlags, PCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPSTR lpBuffer, DWORD nSize, va_list *Arguments)</argsstring>
        <name>FormatMessageA</name>
        <param>
          <type>DWORD</type>
          <declname>dwFlags</declname>
        </param>
        <param>
          <type>PCVOID</type>
          <declname>lpSource</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwMessageId</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>dwLanguageId</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>lpBuffer</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>nSize</declname>
        </param>
        <param>
          <type>va_list *</type>
          <declname>Arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="976" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="976" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1a423fbd077ebdb5e09f3841b7a10a01cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD GetModuleFileNameA</definition>
        <argsstring>(HINSTANCE hModule, LPSTR lpFilename, DWORD nSize)</argsstring>
        <name>GetModuleFileNameA</name>
        <param>
          <type>HINSTANCE</type>
          <declname>hModule</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>lpFilename</declname>
        </param>
        <param>
          <type>DWORD</type>
          <declname>nSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="1029" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="1029" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1abb427ca7d23047b56e9c01b9d5bf12f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DWORD</type>
        <definition>DWORD GetTempPathA</definition>
        <argsstring>(DWORD nBufferLength, LPSTR lpBuffer)</argsstring>
        <name>GetTempPathA</name>
        <param>
          <type>DWORD</type>
          <declname>nBufferLength</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>lpBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="1071" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="1071" bodyend="1122"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1af8558ca8d226f1d6e5f4c67382853622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BOOL</type>
        <definition>BOOL SHGetSpecialFolderPathA</definition>
        <argsstring>(HWND hwndOwner, LPSTR lpszPath, int nFolder, BOOL fCreate)</argsstring>
        <name>SHGetSpecialFolderPathA</name>
        <param>
          <type>HWND</type>
          <declname>hwndOwner</declname>
        </param>
        <param>
          <type>LPSTR</type>
          <declname>lpszPath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nFolder</declname>
        </param>
        <param>
          <type>BOOL</type>
          <declname>fCreate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="1126" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="1126" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="dbus-sysdeps-wince-glue_8c_1af66ec31cdb73aa1cfbc47116a7861f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OutputDebugStringA</definition>
        <argsstring>(LPCSTR lpOutputString)</argsstring>
        <name>OutputDebugStringA</name>
        <param>
          <type>LPCSTR</type>
          <declname>lpOutputString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-sysdeps-wince-glue.c" line="1150" column="1" bodyfile="dbus/dbus-sysdeps-wince-glue.c" bodystart="1150" bodyend="1165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>C;<sp/>c-file-style:<sp/>&quot;gnu&quot;;<sp/>indent-tabs-mode:<sp/>nil;<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>dbus-sysdeps-wince-glue.c<sp/>Wrappers<sp/>for<sp/>Windows<sp/>CE<sp/>around<sp/>system/libc<sp/>features<sp/>(internal<sp/>to<sp/>D-BUS<sp/>implementation)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/><sp/>Red<sp/>Hat,<sp/>Inc.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2003<sp/>CodeFactory<sp/>AB</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2005<sp/>Novell,<sp/>Inc.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Ralf<sp/>Habacker<sp/>&lt;ralf.habacker@freenet.de&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Peter<sp/>Kümmel<sp/><sp/>&lt;syntheticpp@gmx.net&gt;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2006<sp/>Christian<sp/>Ehrlicher<sp/>&lt;ch.ehrlicher@gmx.de&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Academic<sp/>Free<sp/>License<sp/>version<sp/>2.1</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-internals.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dbus-sysdeps-win.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Including<sp/>shlobj.h<sp/>creates<sp/>trouble<sp/>on<sp/>some<sp/>compilers.<sp/><sp/>Just<sp/>chicken</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>out<sp/>here<sp/>by<sp/>defining<sp/>just<sp/>what<sp/>we<sp/>need.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CSIDL_PERSONAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSIDL_PERSONAL<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>SRC<sp/>to<sp/>DEST,<sp/>returning<sp/>the<sp/>address<sp/>of<sp/>the<sp/>terminating<sp/>&apos;\0&apos;<sp/>in<sp/>DEST.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="normal">stpcpy<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>dest;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*s;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*s++<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>special<sp/>cased,<sp/>because<sp/>we<sp/>must<sp/>avoid<sp/>using<sp/>many<sp/>dbus</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>functions<sp/>(such<sp/>as<sp/>memory<sp/>allocations):<sp/>Those<sp/>functions<sp/>may<sp/>in<sp/>turn</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>cause<sp/>verbose<sp/>output<sp/>and<sp/>check<sp/>the<sp/>flag!<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="normal">get_verbose_setting()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>dir[]<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;Software\\freedesktop\\DBus&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>name[]<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;Verbose&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>HKEY<sp/>root_key;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>HKEY<sp/>key_handle;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>DWORD<sp/>nbytes;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>DWORD<sp/>n1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>DWORD<sp/>type;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*result_w<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>root_key<sp/>=<sp/>HKEY_LOCAL_MACHINE;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyExW<sp/>(root_key,<sp/>dir,<sp/>0,<sp/>KEY_READ,<sp/>&amp;key_handle))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>nbytes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegQueryValueExW<sp/>(key_handle,<sp/>name,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;nbytes))</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey<sp/>(key_handle);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Round<sp/>up<sp/>to<sp/>multiple<sp/>of<sp/>wchar_t,<sp/>convert<sp/>to<sp/>number<sp/>of<sp/>wchar_t&apos;s,<sp/>and<sp/>add<sp/>1.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>n1<sp/>=<sp/>((nbytes<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t)<sp/>-<sp/>1)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(wchar_t))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>result_w<sp/>=<sp/>malloc<sp/>(n1<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result_w)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey<sp/>(key_handle);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegQueryValueExW<sp/>(key_handle,<sp/>name,<sp/>0,<sp/>&amp;type,<sp/>(LPBYTE)<sp/>result_w,<sp/>&amp;nbytes))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey<sp/>(key_handle);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(result_w);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>RegCloseKey<sp/>(key_handle);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>result_w[n1<sp/>-<sp/>1]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>is<sp/>really<sp/>a<sp/>string.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>REG_MULTI_SZ<sp/>and<sp/>REG_EXPAND_SZ<sp/>not<sp/>supported,<sp/>because<sp/>they</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>are<sp/>not<sp/>needed<sp/>in<sp/>this<sp/>module.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/>REG_SZ)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(result_w);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>WideCharToMultiByte<sp/>(CP_UTF8,<sp/>0,<sp/>result_w,<sp/>-1,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(result_w);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>malloc<sp/>(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(result_w);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>WideCharToMultiByte<sp/>(CP_UTF8,<sp/>0,<sp/>result_w,<sp/>-1,<sp/>result,<sp/>len,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>free<sp/>(result_w);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(result);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>a<sp/>string<sp/>from<sp/>the<sp/>W32<sp/>Registry<sp/>or<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>error.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/>Caller<sp/>must<sp/>release<sp/>the<sp/>return<sp/>value.<sp/><sp/>A<sp/>NULL<sp/>for<sp/>root<sp/>is<sp/>an<sp/>alias</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/>for<sp/>HKEY_CURRENT_USER,<sp/>HKEY_LOCAL_MACHINE<sp/>in<sp/>turn.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="normal">read_w32_registry_string<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*root,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>HKEY<sp/>root_key,<sp/>key_handle;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>DWORD<sp/>n1,<sp/>nbytes,<sp/>type;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!root<sp/>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>root_key<sp/>=<sp/>HKEY_CURRENT_USER;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strcmp(<sp/>root,<sp/></highlight><highlight class="stringliteral">&quot;HKEY_CLASSES_ROOT&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>root_key<sp/>=<sp/>HKEY_CLASSES_ROOT;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strcmp(<sp/>root,<sp/></highlight><highlight class="stringliteral">&quot;HKEY_CURRENT_USER&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>root_key<sp/>=<sp/>HKEY_CURRENT_USER;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strcmp(<sp/>root,<sp/></highlight><highlight class="stringliteral">&quot;HKEY_LOCAL_MACHINE&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>root_key<sp/>=<sp/>HKEY_LOCAL_MACHINE;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!strcmp(<sp/>root,<sp/></highlight><highlight class="stringliteral">&quot;HKEY_USERS&quot;</highlight><highlight class="normal"><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>root_key<sp/>=<sp/>HKEY_USERS;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyExA<sp/>(root_key,<sp/>dir,<sp/>0,<sp/>KEY_READ,<sp/>&amp;key_handle))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>need<sp/>for<sp/>a<sp/>RegClose,<sp/>so<sp/>return<sp/>direct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>seems<sp/>to<sp/>be<sp/>common<sp/>practise<sp/>to<sp/>fall<sp/>back<sp/>to<sp/>HKLM.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyExA<sp/>(HKEY_LOCAL_MACHINE,<sp/>dir,<sp/>0,<sp/>KEY_READ,<sp/>&amp;key_handle))</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>still<sp/>no<sp/>need<sp/>for<sp/>a<sp/>RegClose,<sp/>so<sp/>return<sp/>direct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>nbytes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegQueryValueExA<sp/>(key_handle,<sp/>name,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;nbytes))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>fallback<sp/>to<sp/>HKLM<sp/>also<sp/>for<sp/>a<sp/>missing<sp/>value.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RegCloseKey<sp/>(key_handle);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegOpenKeyExA<sp/>(HKEY_LOCAL_MACHINE,<sp/>dir,<sp/>0,<sp/>KEY_READ,<sp/>&amp;key_handle))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Nope.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegQueryValueExA<sp/>(key_handle,<sp/>name,<sp/>0,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;nbytes))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>n1<sp/>=<sp/>nbytes<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>malloc<sp/>(n1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RegQueryValueExA<sp/>(key_handle,<sp/>name,<sp/>0,<sp/>&amp;type,<sp/>result,<sp/>&amp;n1))</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(result);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>result[nbytes]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>sure<sp/>it<sp/>is<sp/>really<sp/>a<sp/>string.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>RegCloseKey<sp/>(key_handle);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="197"><highlight class="normal">find_inst_dir<sp/>()</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_w32_registry_string<sp/>(</highlight><highlight class="stringliteral">&quot;HKEY_LOCAL_MACHINE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Software\\freedesktop\\DBus&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Install<sp/>Directory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="normal">find_env_in_registry<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>read_w32_registry_string<sp/>(</highlight><highlight class="stringliteral">&quot;HKEY_LOCAL_MACHINE&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Software\\freedesktop\\DBus&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name);</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="normal">find_program_in_inst_dir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>find_inst_dir<sp/>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>malloc<sp/>(strlen<sp/>(tmp)<sp/>+<sp/>5<sp/>+<sp/>strlen<sp/>(name)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(tmp);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>strcpy<sp/>(stpcpy<sp/>(stpcpy<sp/>(result,<sp/>tmp),<sp/></highlight><highlight class="stringliteral">&quot;\\bin\\&quot;</highlight><highlight class="normal">),<sp/>name);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>free<sp/>(tmp);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="normal">find_inst_subdir<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>find_inst_dir<sp/>();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>malloc<sp/>(strlen<sp/>(tmp)<sp/>+<sp/>1<sp/>+<sp/>strlen<sp/>(name)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(tmp);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>strcpy<sp/>(stpcpy<sp/>(stpcpy<sp/>(result,<sp/>tmp),<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">),<sp/>name);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>free<sp/>(tmp);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="normal">find_my_documents_folder<sp/>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>for<sp/>safety,<sp/>just<sp/>in<sp/>case.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir[MAX_PATH<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>dir[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>May<sp/>return<sp/>false<sp/>even<sp/>if<sp/>successful.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>SHGetSpecialFolderPathA<sp/>(0,<sp/>dir,<sp/>CSIDL_PERSONAL,<sp/>0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>malloc<sp/>(strlen<sp/>(dir)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>strcpy<sp/>(result,<sp/>dir);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_ENV<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*environ[MAX_ENV<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="288"><highlight class="normal">getenv<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*past_result;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**envp;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(past_result)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(past_result);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>past_result<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>strcmp<sp/>(name,<sp/></highlight><highlight class="stringliteral">&quot;DBUS_VERBOSE&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>past_result<sp/>=<sp/>get_verbose_setting<sp/>();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>strcmp<sp/>(name,<sp/></highlight><highlight class="stringliteral">&quot;HOMEPATH&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>past_result<sp/>=<sp/>find_my_documents_folder<sp/>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>strcmp<sp/>(name,<sp/></highlight><highlight class="stringliteral">&quot;DBUS_DATADIR&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>past_result<sp/>=<sp/>find_inst_subdir<sp/>(</highlight><highlight class="stringliteral">&quot;share&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(envp<sp/>=<sp/>environ;<sp/>*envp<sp/>!=<sp/>0;<sp/>envp++)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*varp<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ep<sp/>=<sp/>*envp;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>same_name<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*varp<sp/>==<sp/>*ep<sp/>&amp;&amp;<sp/>*varp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ep;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++varp;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*varp<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ep<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ep<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">putenv<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**envp;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(envp<sp/>=<sp/>environ;<sp/>*envp<sp/>!=<sp/>0;<sp/>envp++)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*varp<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ep<sp/>=<sp/>*envp;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>same_name<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*varp<sp/>==<sp/>*ep<sp/>&amp;&amp;<sp/>*varp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*varp<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>same_name<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ep;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++varp;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*varp<sp/>==<sp/>*ep<sp/>&amp;&amp;<sp/>*varp<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(same_name)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*envp<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>idx<sp/>=<sp/>envp<sp/>-<sp/>environ;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;<sp/>MAX_ENV)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_set_errno<sp/>(ENOMEM);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>environ[idx]<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">clock_t</highlight></codeline>
<codeline lineno="368"><highlight class="normal">clock<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetTickCount<sp/>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">abort<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>what<sp/>windows<sp/>does.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>exit<sp/>(3);</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal">GetSystemTimeAsFileTime<sp/>(LPFILETIME<sp/>ftp)</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>SYSTEMTIME<sp/>st;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>GetSystemTime<sp/>(&amp;st);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>SystemTimeToFileTime<sp/>(&amp;st,<sp/>ftp);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="392"><highlight class="normal">_mbsrchr<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>FIXME.<sp/><sp/>This<sp/>is<sp/>not<sp/>multi-byte<sp/>safe.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strrchr<sp/>(str,<sp/>ch);</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">HANDLE<sp/>OpenFileMappingA(DWORD<sp/>dwDesiredAccess,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>bInheritHandle,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPCSTR<sp/>lpName)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>DWORD<sp/>flProtect<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>HANDLE<sp/>hMapping;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwDesiredAccess<sp/>&amp;<sp/>FILE_MAP_READ)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>flProtect<sp/>|=<sp/>PAGE_READONLY;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwDesiredAccess<sp/>&amp;<sp/>FILE_MAP_WRITE)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>flProtect<sp/>|=<sp/>PAGE_READWRITE;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>hMapping<sp/>=<sp/>CreateFileMappingA(INVALID_HANDLE_VALUE,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>flProtect,<sp/>0,<sp/>0,<sp/>lpName);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hMapping<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>in<sp/>case<sp/>Windows<sp/>CE<sp/>changes<sp/>its<sp/>behaviour,<sp/>we<sp/>check<sp/>for</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>right<sp/>error<sp/>value<sp/>here.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetLastError<sp/>()<sp/>!=<sp/>ERROR_ALREADY_EXISTS)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseHandle(hMapping);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hMapping<sp/>=<sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hMapping;</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="430"><highlight class="normal">MoveFileExA<sp/>(LPCSTR<sp/>lpExistingFileName,<sp/>LPCSTR<sp/>lpNewFileName,<sp/>DWORD<sp/>dwFlags)</highlight></codeline>
<codeline lineno="431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(dwFlags<sp/>==<sp/>MOVEFILE_REPLACE_EXISTING);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DBusFile_1ga13a527e32c05b63e8b32a63d728e20e8" kindref="member">_dbus_file_exists</ref><sp/>(lpNewFileName))</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>result<sp/>=<sp/>DeleteFileA<sp/>(lpNewFileName);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MoveFileA<sp/>(lpExistingFileName,<sp/>lpNewFileName);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="445"><highlight class="normal">SetHandleInformation<sp/>(HANDLE<sp/>hObject,<sp/>DWORD<sp/>dwMask,<sp/>DWORD<sp/>dwFlags)</highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(dwMask<sp/>==<sp/>(HANDLE_FLAG_INHERIT<sp/>|<sp/>HANDLE_FLAG_PROTECT_FROM_CLOSE));</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(dwFlags<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>supported<sp/>on<sp/>Windows<sp/>CE,<sp/>and<sp/>actually<sp/>the<sp/>default.<sp/><sp/>So<sp/>just</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>return<sp/>overwhelming<sp/>success.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">DWORD</highlight></codeline>
<codeline lineno="457"><highlight class="normal">SearchPathA<sp/>(LPCSTR<sp/>lpPath,<sp/>LPCSTR<sp/>lpFileName,<sp/>LPCSTR<sp/>lpExtension,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>nBufferLength,<sp/>LPSTR<sp/>lpBuffer,<sp/>LPSTR*<sp/>lpFilePart)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filepart;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filename_len;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(lpPath<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(lpExtension<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>find_program_in_inst_dir<sp/>(lpFileName);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(ERROR_FILE_NOT_FOUND);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>filename_len<sp/>=<sp/>strlen<sp/>(filename)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filename_len<sp/>&gt;<sp/>nBufferLength)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(filename);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename_len;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>strcpy<sp/>(lpBuffer,<sp/>filename);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>free<sp/>(filename);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>filepart<sp/>=<sp/>_mbsrchr<sp/>(lpBuffer,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filepart)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>filepart<sp/>=<sp/>lpBuffer;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>*lpFilePart<sp/>=<sp/>filepart;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>filename_len<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><ref refid="group__DBusTypes_1ga39c9cb0f3a2a8ad6f55cc4855d035349" kindref="member">dbus_bool_t</ref></highlight></codeline>
<codeline lineno="498"><highlight class="normal">_dbus_getsid(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**sid)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>is<sp/>nothing<sp/>like<sp/>this<sp/>on<sp/>Windows<sp/>CE,<sp/>so<sp/>we<sp/>fake<sp/>it.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>asid[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;S-1-5-21-515967899-920026266-1708537768-1000&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>LocalAlloc<sp/>(LMEM_FIXED,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(asid));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_dbus_win_warn_win_error<sp/>(</highlight><highlight class="stringliteral">&quot;LocalAlloc<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>GetLastError<sp/>());</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>memcpy<sp/>(buf,<sp/>asid,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(asid));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/>*sid<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="516"><highlight class="normal">LookupAccountNameW<sp/>(LPCWSTR<sp/>lpSystemName,<sp/>LPCWSTR<sp/>lpAccountName,<sp/>PSID<sp/>Sid,<sp/>PDWORD<sp/>cbSid,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPWSTR<sp/>ReferencedDomainName,<sp/>PDWORD<sp/>cchReferencedDomainName,<sp/>PSID_NAME_USE<sp/>peUse)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Currently<sp/>not<sp/>needed.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="525"><highlight class="normal">IsValidSid<sp/>(PSID<sp/>psid)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Currently<sp/>not<sp/>needed.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="533"><highlight class="normal">CreateFileA<sp/>(LPCSTR<sp/>lpFileName,<sp/>DWORD<sp/>dwDesiredAccess,<sp/>DWORD<sp/>dwSharedMode,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPSECURITY_ATTRIBUTES<sp/>lpSecurityAttributes,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dwCreationDisposition,<sp/>DWORD<sp/>dwFlagsAndAttributes,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HANDLE<sp/>hTemplateFile)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>HANDLE<sp/>result;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>CreateFileW<sp/>(filename,<sp/>dwDesiredAccess,<sp/>dwSharedMode,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpSecurityAttributes,<sp/>dwCreationDisposition,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwFlagsAndAttributes,<sp/>hTemplateFile);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(filename);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="558"><highlight class="normal">DeleteFileA<sp/>(LPCSTR<sp/>lpFileName)</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>DeleteFileW<sp/>(filename);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(filename);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="578"><highlight class="normal">MoveFileA<sp/>(LPCSTR<sp/>lpExistingFileName,<sp/>LPCSTR<sp/>lpNewFileName)</highlight></codeline>
<codeline lineno="579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*existing_filename;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*new_filename;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>existing_filename<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpExistingFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>existing_filename)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>new_filename<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpNewFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>new_filename)</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(existing_filename);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>MoveFileW<sp/>(existing_filename,<sp/>new_filename);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(existing_filename);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(new_filename);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal">DWORD</highlight></codeline>
<codeline lineno="607"><highlight class="normal">GetFileAttributesA(LPCSTR<sp/>lpFileName)</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>DWORD<sp/>result;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_FILE_ATTRIBUTES;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>GetFileAttributesW<sp/>(filename);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(filename);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="627"><highlight class="normal">GetFileAttributesExA<sp/>(LPCSTR<sp/>lpFileName,<sp/>GET_FILEEX_INFO_LEVELS<sp/>fInfoLevelId,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PVOID<sp/>lpFileInformation)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>DWORD<sp/>result;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_FILE_ATTRIBUTES;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>GetFileAttributesExW<sp/>(filename,<sp/>fInfoLevelId,<sp/>lpFileInformation);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(filename);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="648"><highlight class="normal">CreateFileMappingA<sp/>(HANDLE<sp/>hFile,<sp/>LPSECURITY_ATTRIBUTES<sp/>lpAttributes,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>flProtect,<sp/>DWORD<sp/>dwMaximumSizeHigh,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dwMaximumSizeLow,<sp/>LPCSTR<sp/>lpName)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>HANDLE<sp/>result;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpName)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>CreateFileMappingW<sp/>(hFile,<sp/>lpAttributes,<sp/>flProtect,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dwMaximumSizeHigh,<sp/>dwMaximumSizeLow,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(name);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="677"><highlight class="normal">CreateDirectoryA<sp/>(LPCSTR<sp/>lpPathName,<sp/>LPSECURITY_ATTRIBUTES<sp/>lpSecurityAttributes)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*pathname;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>pathname<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpPathName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pathname)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>CreateDirectoryW<sp/>(pathname,<sp/>lpSecurityAttributes);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(pathname);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="697"><highlight class="normal">RemoveDirectoryA<sp/>(LPCSTR<sp/>lpPathName)</highlight></codeline>
<codeline lineno="698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*pathname;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>pathname<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpPathName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pathname)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>RemoveDirectoryW<sp/>(pathname);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(pathname);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>BOOL</highlight></codeline>
<codeline lineno="717"><highlight class="normal">convert_find_data<sp/>(LPWIN32_FIND_DATAW<sp/>fdw,<sp/>LPWIN32_FIND_DATAA<sp/>fda)</highlight></codeline>
<codeline lineno="718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>fda-&gt;dwFileAttributes<sp/>=<sp/>fdw-&gt;dwFileAttributes;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>fda-&gt;ftCreationTime<sp/>=<sp/>fdw-&gt;ftCreationTime;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>fda-&gt;ftLastAccessTime<sp/>=<sp/>fdw-&gt;ftLastAccessTime;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>fda-&gt;ftLastWriteTime<sp/>=<sp/>fdw-&gt;ftLastWriteTime;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>fda-&gt;nFileSizeHigh<sp/>=<sp/>fdw-&gt;nFileSizeHigh;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>fda-&gt;nFileSizeLow<sp/>=<sp/>fdw-&gt;nFileSizeLow;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>filename<sp/>=<sp/>_dbus_win_utf16_to_utf8<sp/>(fdw-&gt;cFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!filename)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(fda-&gt;cFileName);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>strncpy<sp/>(fda-&gt;cFileName,<sp/>filename,<sp/>len);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>fda-&gt;cFileName[len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="742"><highlight class="normal">FindFirstFileA<sp/>(LPCSTR<sp/>lpFileName,<sp/>LPWIN32_FIND_DATAA<sp/>lpFindFileData)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*pathname;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>WIN32_FIND_DATAW<sp/>find_file_data;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>HANDLE<sp/>result;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>pathname<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpFileName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pathname)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>FindFirstFileW<sp/>(pathname,<sp/>&amp;find_file_data);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>INVALID_HANDLE_VALUE)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>res<sp/>=<sp/>convert_find_data<sp/>(&amp;find_file_data,<sp/>lpFindFileData);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>res)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FindClose<sp/>(result);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(pathname);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="774"><highlight class="normal">FindNextFileA<sp/>(HANDLE<sp/>hFindFile,<sp/>LPWIN32_FIND_DATAA<sp/>lpFindFileData)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/>WIN32_FIND_DATAW<sp/>find_file_data;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>FindNextFileW<sp/>(hFindFile,<sp/>&amp;find_file_data);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>convert_find_data<sp/>(&amp;find_file_data,<sp/>lpFindFileData);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;<sp/><sp/></highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal">HANDLE</highlight></codeline>
<codeline lineno="789"><highlight class="normal">CreateMutexA<sp/>(LPSECURITY_ATTRIBUTES<sp/>lpMutexAttributes,<sp/>BOOL<sp/>bInitialOwner,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPCSTR<sp/>lpName)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>HANDLE<sp/>result;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpName)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_HANDLE_VALUE;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>CreateMutexW<sp/>(lpMutexAttributes,<sp/>bInitialOwner,<sp/>name);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(name);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="815"><highlight class="normal">CreateProcessA<sp/>(LPCSTR<sp/>pszImageName,<sp/>LPSTR<sp/>pszCmdLine,</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPSECURITY_ATTRIBUTES<sp/>psaProcess,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPSECURITY_ATTRIBUTES<sp/>psaThread,<sp/>BOOL<sp/>fInheritHandles,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>fdwCreate,<sp/>PVOID<sp/>pvEnvironment,<sp/>LPCSTR<sp/>pszCurDir,</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPSTARTUPINFOA<sp/>psiStartInfo,</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPPROCESS_INFORMATION<sp/>pProcInfo)</highlight></codeline>
<codeline lineno="821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*image_name<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cmd_line<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(psaProcess<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(psaThread<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(fInheritHandles<sp/>==<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(pvEnvironment<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(pszCurDir<sp/>==<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>psiStartInfo<sp/>is<sp/>generally<sp/>not<sp/>NULL.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pszImageName)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>image_name<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(pszImageName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!image_name)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pszCmdLine)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cmd_line<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(pszCmdLine,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cmd_line)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(image_name)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(image_name);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>CreateProcessW<sp/>(image_name,<sp/>cmd_line,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fdwCreate,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pProcInfo);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(image_name);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(cmd_line);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal">LONG</highlight></codeline>
<codeline lineno="863"><highlight class="normal">RegOpenKeyExA<sp/>(HKEY<sp/>hKey,<sp/>LPCSTR<sp/>lpSubKey,<sp/>DWORD<sp/>ulOptions,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REGSAM<sp/>samDesired,<sp/>PHKEY<sp/>phkResult)</highlight></codeline>
<codeline lineno="865"><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*subkey;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>LONG<sp/>result;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpSubKey)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subkey<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpSubKey,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!subkey)</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>subkey<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>RegOpenKeyEx<sp/>(hKey,<sp/>subkey,<sp/>ulOptions,<sp/>samDesired,<sp/>phkResult);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(subkey);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal">LONG</highlight></codeline>
<codeline lineno="889"><highlight class="normal">RegQueryValueExA<sp/>(HKEY<sp/>hKey,<sp/>LPCSTR<sp/>lpValueName,<sp/>LPDWORD<sp/>lpReserved,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LPDWORD<sp/>lpType,<sp/>LPBYTE<sp/>lpData,<sp/>LPDWORD<sp/>lpcbData)</highlight></codeline>
<codeline lineno="891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>LONG<sp/>err;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>BYTE<sp/>*data;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>DWORD<sp/>data_len;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>DWORD<sp/>type;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpValueName)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpValueName,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!name)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>data_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>RegQueryValueExW<sp/>(hKey,<sp/>name,<sp/>lpReserved,<sp/>lpType,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;data_len);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>||<sp/>!lpcbData)</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(name);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>data<sp/>=<sp/>malloc<sp/>(data_len<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(name);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ERROR_NOT_ENOUGH_MEMORY;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>RegQueryValueExW<sp/>(hKey,<sp/>name,<sp/>lpReserved,<sp/>&amp;type,<sp/>data,<sp/>&amp;data_len);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpType)</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>*lpType<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(name);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>err<sp/>is<sp/>ERROR_MORE_DATA,<sp/>there<sp/>probably<sp/>was<sp/>a<sp/>race<sp/>condition.</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>We<sp/>can<sp/>punt<sp/>this<sp/>to<sp/>the<sp/>caller<sp/>just<sp/>as<sp/>well.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(data);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>REG_MULTI_SZ<sp/>and<sp/>REG_EXPAND_SZ<sp/>not<sp/>supported,<sp/>because<sp/>they</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>are<sp/>not<sp/>needed<sp/>in<sp/>this<sp/>module.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>REG_SZ)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data_c;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_c_len;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>valid<sp/>since<sp/>we<sp/>allocated<sp/>one<sp/>more<sp/>above.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[data_len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[data_len<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>cast<sp/>is<sp/>valid<sp/>because<sp/>malloc<sp/>guarantees<sp/>alignment<sp/>of</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basic<sp/>types.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_c<sp/>=<sp/>_dbus_win_utf16_to_utf8<sp/>((</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">*)<sp/>data,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data_c)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(data);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetLastError();</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_c_len<sp/>=<sp/>strlen<sp/>(data_c)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(data_c_len<sp/>&lt;=<sp/>data_len<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(data,<sp/>data_c,<sp/>data_c_len);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_len<sp/>=<sp/>data_c_len;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(data_c);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>DATA<sp/>and<sp/>DATA_LEN<sp/>now<sp/>contain<sp/>the<sp/>result.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lpData)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_len<sp/>&gt;<sp/>*lpcbData)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>ERROR_MORE_DATA;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(lpData,<sp/>data,<sp/>data_len);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>free<sp/>(data);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>*lpcbData<sp/>=<sp/>data_len;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal">DWORD</highlight></codeline>
<codeline lineno="976"><highlight class="normal">FormatMessageA<sp/>(DWORD<sp/>dwFlags,<sp/>PCVOID<sp/>lpSource,<sp/>DWORD<sp/>dwMessageId,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>dwLanguageId,<sp/>LPSTR<sp/>lpBuffer,<sp/>DWORD<sp/>nSize,</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list*<sp/>Arguments)</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/>LPWSTR<sp/>buffer_w<sp/>=<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>LPSTR<sp/>buffer_c;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>DWORD<sp/>len;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer_new;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>DWORD<sp/>buffer_new_len;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/>BOOL<sp/>buffer_w_free;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>FormatMessageW<sp/>(dwFlags<sp/>|<sp/>FORMAT_MESSAGE_ALLOCATE_BUFFER,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpSource,<sp/>dwMessageId,<sp/>dwLanguageId,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(LPWSTR)<sp/>&amp;buffer_w,<sp/>0,<sp/>Arguments);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/>buffer_c<sp/>=<sp/>_dbus_win_utf16_to_utf8<sp/>(buffer_w,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>buffer_c)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LocalFree<sp/>(buffer_w);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dwFlags<sp/>&amp;<sp/>FORMAT_MESSAGE_ALLOCATE_BUFFER)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>return<sp/>a<sp/>buffer<sp/>that&apos;s<sp/>freeable<sp/>with<sp/>LocalFree.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_new<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>buffer_w;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_new_len<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(wchar_t)<sp/>*<sp/>(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_w_free<sp/>=<sp/><ref refid="group__DBusMacros_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Avoid<sp/>alignment<sp/>issue<sp/>by<sp/>using<sp/>memcpy.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(lpBuffer,<sp/>&amp;buffer_new,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(buffer_new));</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_new<sp/>=<sp/>lpBuffer;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_new_len<sp/>=<sp/>nSize;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_w_free<sp/>=<sp/><ref refid="group__DBusMacros_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>strncpy<sp/>(buffer_new,<sp/>buffer_c,<sp/>buffer_new_len);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(buffer_c);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>buffer_new[buffer_new_len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer_w_free)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalFree<sp/>(buffer_w);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strlen<sp/>is<sp/>correct<sp/>(not<sp/>_mbstrlen),<sp/>because<sp/>we<sp/>want<sp/>storage<sp/>and</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>not<sp/>string<sp/>length.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strlen<sp/>(buffer_new);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal">DWORD</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">GetModuleFileNameA<sp/>(HINSTANCE<sp/>hModule,<sp/>LPSTR<sp/>lpFilename,<sp/>DWORD<sp/>nSize)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*filename_w;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename_c;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>DWORD<sp/>len;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Windows<sp/>XP/2000.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetLastError<sp/>(0);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>filename_w<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">)<sp/>*<sp/>nSize);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>filename_w)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>GetModuleFileNameW<sp/>(hModule,<sp/>filename_w,<sp/>nSize);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>If<sp/>we<sp/>fail<sp/>with<sp/>ERROR_INSUFFICIENT_BUFFER,<sp/>this<sp/>is<sp/>still</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(approximately)<sp/>correct.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(filename_w);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>filename_w[nSize<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>filename_c<sp/>=<sp/>_dbus_win_utf16_to_utf8<sp/>(filename_w,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>free<sp/>(filename_w);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>filename_c)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>strncpy<sp/>(lpFilename,<sp/>filename_c,<sp/>nSize);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(filename_c);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/>lpFilename[nSize<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strlen<sp/>is<sp/>correct<sp/>(not<sp/>_mbstrlen),<sp/>because<sp/>we<sp/>want<sp/>storage<sp/>and</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>not<sp/>string<sp/>length.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strlen<sp/>(lpFilename);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal">DWORD</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">GetTempPathA<sp/>(DWORD<sp/>nBufferLength,<sp/>LPSTR<sp/>lpBuffer)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>dummy[1];</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>DWORD<sp/>len;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>len<sp/>=<sp/>GetTempPathW<sp/>(0,<sp/>dummy);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><ref refid="group__DBusInternalsUtils_1ga129c6c03f011cdc171934d5d386cc797" kindref="member">_dbus_assert</ref><sp/>(len<sp/>&lt;=<sp/>MAX_PATH);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Better<sp/>be<sp/>safe<sp/>than<sp/>sorry.<sp/><sp/>MSDN<sp/>doesn&apos;t<sp/>say<sp/>if<sp/>len<sp/>is<sp/>with<sp/>or</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>without<sp/>terminating<sp/>0.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>len++;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*buffer_w;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>len_w;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer_c;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>len_c;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_w<sp/>=<sp/>malloc<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">)<sp/>*<sp/>len);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>buffer_w)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>len_w<sp/>=<sp/>GetTempPathW<sp/>(len,<sp/>buffer_w);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Give<sp/>up<sp/>if<sp/>we<sp/>still<sp/>can&apos;t<sp/>get<sp/>at<sp/>it.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len_w<sp/>==<sp/>0<sp/>||<sp/>len_w<sp/>&gt;=<sp/>len)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>(buffer_w);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Better<sp/>be<sp/>really<sp/>safe.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_w[len_w]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_c<sp/>=<sp/>_dbus_win_utf16_to_utf8<sp/>(buffer_w,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(buffer_w);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>buffer_c)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>strlen<sp/>is<sp/>correct<sp/>(not<sp/>_mbstrlen),<sp/>because<sp/>we<sp/>want<sp/>storage<sp/>and</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>string<sp/>length.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>len_c<sp/>=<sp/>strlen<sp/>(buffer_c)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len_c<sp/>&gt;<sp/>nBufferLength)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len_c;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy<sp/>(lpBuffer,<sp/>buffer_c);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(buffer_c);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len_c<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal">BOOL</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">SHGetSpecialFolderPathA<sp/>(HWND<sp/>hwndOwner,<sp/>LPSTR<sp/>lpszPath,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFolder,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOL<sp/>fCreate)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>path[MAX_PATH];</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path_c;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>BOOL<sp/>result;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>path[0]<sp/>=<sp/>(wchar_t)<sp/>0;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/>SHGetSpecialFolderPathW<sp/>(hwndOwner,<sp/>path,<sp/>nFolder,<sp/>fCreate);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>May<sp/>return<sp/>false<sp/>even<sp/>if<sp/>succeeds.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>path[MAX_PATH<sp/>-<sp/>1]<sp/>=<sp/>(wchar_t)<sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>path_c<sp/>=<sp/>_dbus_win_utf16_to_utf8<sp/>(path,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>path_c)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>strncpy<sp/>(lpszPath,<sp/>path_c,<sp/>MAX_PATH);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(path_c);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/>lpszPath[MAX_PATH<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal">OutputDebugStringA<sp/>(LPCSTR<sp/>lpOutputString)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>HANDLE<sp/>result;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>str<sp/>=<sp/>_dbus_win_utf8_to_utf16<sp/>(lpOutputString,<sp/><ref refid="group__DBusMacros_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>OutputDebugStringW<sp/>(str);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>GetLastError<sp/>();</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><ref refid="group__DBusMemory_1ga34e666b19b015035a9a31e53da84b39a" kindref="member">dbus_free</ref><sp/>(str);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>SetLastError<sp/>(err);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="dbus/dbus-sysdeps-wince-glue.c"/>
  </compounddef>
</doxygen>
