<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structDBusThreadFunctions" kind="struct" language="C++" prot="public">
    <compoundname>DBusThreadFunctions</compoundname>
    <includes refid="dbus-threads_8h" local="no">dbus-threads.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structDBusThreadFunctions_1a8f1c2a3b3805e2c4034d7a341f7f82f1" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int DBusThreadFunctions::mask</definition>
        <argsstring></argsstring>
        <name>mask</name>
        <briefdescription>
<para>Mask indicating which functions are present. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="154" column="1" bodyfile="dbus/dbus-threads.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a342ba12a619162a5b228903076b46a44" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1ga3c071d0586484f396f78ecb630313b53" kindref="member">DBusMutexNewFunction</ref></type>
        <definition>DBusMutexNewFunction DBusThreadFunctions::mutex_new</definition>
        <argsstring></argsstring>
        <name>mutex_new</name>
        <briefdescription>
<para>Function to create a mutex; optional and deprecated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="156" column="1" bodyfile="dbus/dbus-threads.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a01107266a74895f13af9962af6ad07dd" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1ga4edab3877bfc933141cb5ff88312c275" kindref="member">DBusMutexFreeFunction</ref></type>
        <definition>DBusMutexFreeFunction DBusThreadFunctions::mutex_free</definition>
        <argsstring></argsstring>
        <name>mutex_free</name>
        <briefdescription>
<para>Function to free a mutex; optional and deprecated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="157" column="1" bodyfile="dbus/dbus-threads.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a1cc9d20f2ad0296e932951470063f8d0" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gab384a02862524eedfe95b9690753c687" kindref="member">DBusMutexLockFunction</ref></type>
        <definition>DBusMutexLockFunction DBusThreadFunctions::mutex_lock</definition>
        <argsstring></argsstring>
        <name>mutex_lock</name>
        <briefdescription>
<para>Function to lock a mutex; optional and deprecated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="158" column="1" bodyfile="dbus/dbus-threads.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a334d478ec305b04f526537c131cd8e8a" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gacf3c3edd338ed40c45a86f5730fd469a" kindref="member">DBusMutexUnlockFunction</ref></type>
        <definition>DBusMutexUnlockFunction DBusThreadFunctions::mutex_unlock</definition>
        <argsstring></argsstring>
        <name>mutex_unlock</name>
        <briefdescription>
<para>Function to unlock a mutex; optional and deprecated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="159" column="1" bodyfile="dbus/dbus-threads.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a1796b617165734984bc40d38f9600d78" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gab5a353de40fac6f391d182955874368b" kindref="member">DBusCondVarNewFunction</ref></type>
        <definition>DBusCondVarNewFunction DBusThreadFunctions::condvar_new</definition>
        <argsstring></argsstring>
        <name>condvar_new</name>
        <briefdescription>
<para>Function to create a condition variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="161" column="1" bodyfile="dbus/dbus-threads.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1ad302412c382190eddc05736f24d8855c" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gae459df8accd530029cdf53e2006c46d0" kindref="member">DBusCondVarFreeFunction</ref></type>
        <definition>DBusCondVarFreeFunction DBusThreadFunctions::condvar_free</definition>
        <argsstring></argsstring>
        <name>condvar_free</name>
        <briefdescription>
<para>Function to free a condition variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="162" column="1" bodyfile="dbus/dbus-threads.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1ae4cb6e9fe7c0813213561150721f349c" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gad8b35a0b02463d0756dddb8b28b52d66" kindref="member">DBusCondVarWaitFunction</ref></type>
        <definition>DBusCondVarWaitFunction DBusThreadFunctions::condvar_wait</definition>
        <argsstring></argsstring>
        <name>condvar_wait</name>
        <briefdescription>
<para>Function to wait on a condition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="163" column="1" bodyfile="dbus/dbus-threads.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a5e049c7bdf4d83a85ebce31d838d4218" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1ga629b7534f21496149281235889de222e" kindref="member">DBusCondVarWaitTimeoutFunction</ref></type>
        <definition>DBusCondVarWaitTimeoutFunction DBusThreadFunctions::condvar_wait_timeout</definition>
        <argsstring></argsstring>
        <name>condvar_wait_timeout</name>
        <briefdescription>
<para>Function to wait on a condition with a timeout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="164" column="1" bodyfile="dbus/dbus-threads.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a3f1301eacf666381ec6c39100e6787e1" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gac333e947171df6d99d59cd0c847e6df6" kindref="member">DBusCondVarWakeOneFunction</ref></type>
        <definition>DBusCondVarWakeOneFunction DBusThreadFunctions::condvar_wake_one</definition>
        <argsstring></argsstring>
        <name>condvar_wake_one</name>
        <briefdescription>
<para>Function to wake one thread waiting on the condition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="165" column="1" bodyfile="dbus/dbus-threads.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a128295c0019a401163d04ea0e291b36c" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gad721dc686fd09d65dd932b7a35b079ac" kindref="member">DBusCondVarWakeAllFunction</ref></type>
        <definition>DBusCondVarWakeAllFunction DBusThreadFunctions::condvar_wake_all</definition>
        <argsstring></argsstring>
        <name>condvar_wake_all</name>
        <briefdescription>
<para>Function to wake all threads waiting on the condition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="166" column="1" bodyfile="dbus/dbus-threads.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1afd30fb78a3ca1064bc8c074a6a61361e" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1ga851e79e67071b88a86566ff28fdd5ce1" kindref="member">DBusRecursiveMutexNewFunction</ref></type>
        <definition>DBusRecursiveMutexNewFunction DBusThreadFunctions::recursive_mutex_new</definition>
        <argsstring></argsstring>
        <name>recursive_mutex_new</name>
        <briefdescription>
<para>Function to create a recursive mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="168" column="1" bodyfile="dbus/dbus-threads.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a8be6d85b7f162352efa5bb4a5663f44f" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1ga59b68fd20afc8ae683f7952ddca3cf6c" kindref="member">DBusRecursiveMutexFreeFunction</ref></type>
        <definition>DBusRecursiveMutexFreeFunction DBusThreadFunctions::recursive_mutex_free</definition>
        <argsstring></argsstring>
        <name>recursive_mutex_free</name>
        <briefdescription>
<para>Function to free a recursive mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="169" column="1" bodyfile="dbus/dbus-threads.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1ae99179276be65fe4f701de307882dac5" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gac97c53c87b0f30fd5346c8d3e1543a08" kindref="member">DBusRecursiveMutexLockFunction</ref></type>
        <definition>DBusRecursiveMutexLockFunction DBusThreadFunctions::recursive_mutex_lock</definition>
        <argsstring></argsstring>
        <name>recursive_mutex_lock</name>
        <briefdescription>
<para>Function to lock a recursive mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="170" column="1" bodyfile="dbus/dbus-threads.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a0bdb8cd9b263bcde5a0548b16ccd0702" prot="public" static="no" mutable="no">
        <type><ref refid="group__DBusThreads_1gadcae985ee1375a12fedc767e90bac3b8" kindref="member">DBusRecursiveMutexUnlockFunction</ref></type>
        <definition>DBusRecursiveMutexUnlockFunction DBusThreadFunctions::recursive_mutex_unlock</definition>
        <argsstring></argsstring>
        <name>recursive_mutex_unlock</name>
        <briefdescription>
<para>Function to unlock a recursive mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="171" column="1" bodyfile="dbus/dbus-threads.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a46a194147f5a2ec372a3d5c81a4f7dee" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(*  DBusThreadFunctions::padding1) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>padding1</name>
        <briefdescription>
<para>Reserved for future expansion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="173" column="1" bodyfile="dbus/dbus-threads.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a3f2db0f1ca226fe240144632dbe84409" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(*  DBusThreadFunctions::padding2) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>padding2</name>
        <briefdescription>
<para>Reserved for future expansion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="174" column="1" bodyfile="dbus/dbus-threads.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1ade37a0867cfede69b5a0b62186df2054" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(*  DBusThreadFunctions::padding3) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>padding3</name>
        <briefdescription>
<para>Reserved for future expansion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="175" column="1" bodyfile="dbus/dbus-threads.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structDBusThreadFunctions_1a865535feb9efe4c0af66fdab7c9411d8" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(*  DBusThreadFunctions::padding4) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>padding4</name>
        <briefdescription>
<para>Reserved for future expansion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="dbus/dbus-threads.h" line="176" column="1" bodyfile="dbus/dbus-threads.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions that must be implemented to make the D-Bus library thread-aware. </para>    </briefdescription>
    <detaileddescription>
<para>If you supply both recursive and non-recursive mutexes, libdbus will use the non-recursive version for condition variables, and the recursive version in other contexts.</para><para>The condition variable functions have to work with nonrecursive mutexes if you provide those, or with recursive mutexes if you don&apos;t. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="494">
        <label>DBusList</label>
        <link refid="structDBusList"/>
        <childnode refid="494" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="493">
        <label>DBusCondVar</label>
        <link refid="structDBusCondVar"/>
        <childnode refid="494" relation="usage">
          <edgelabel>list</edgelabel>
        </childnode>
      </node>
      <node id="492">
        <label>DBusThreadFunctions</label>
        <link refid="structDBusThreadFunctions"/>
        <childnode refid="493" relation="usage">
          <edgelabel>condvar_wake_all</edgelabel>
          <edgelabel>condvar_wait_timeout</edgelabel>
          <edgelabel>condvar_wake_one</edgelabel>
          <edgelabel>condvar_new</edgelabel>
          <edgelabel>condvar_free</edgelabel>
          <edgelabel>condvar_wait</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="dbus/dbus-threads.h" line="153" column="1" bodyfile="dbus/dbus-threads.h" bodystart="152" bodyend="178"/>
    <listofallmembers>
      <member refid="structDBusThreadFunctions_1ad302412c382190eddc05736f24d8855c" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>condvar_free</name></member>
      <member refid="structDBusThreadFunctions_1a1796b617165734984bc40d38f9600d78" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>condvar_new</name></member>
      <member refid="structDBusThreadFunctions_1ae4cb6e9fe7c0813213561150721f349c" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>condvar_wait</name></member>
      <member refid="structDBusThreadFunctions_1a5e049c7bdf4d83a85ebce31d838d4218" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>condvar_wait_timeout</name></member>
      <member refid="structDBusThreadFunctions_1a128295c0019a401163d04ea0e291b36c" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>condvar_wake_all</name></member>
      <member refid="structDBusThreadFunctions_1a3f1301eacf666381ec6c39100e6787e1" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>condvar_wake_one</name></member>
      <member refid="structDBusThreadFunctions_1a8f1c2a3b3805e2c4034d7a341f7f82f1" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>mask</name></member>
      <member refid="structDBusThreadFunctions_1a01107266a74895f13af9962af6ad07dd" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>mutex_free</name></member>
      <member refid="structDBusThreadFunctions_1a1cc9d20f2ad0296e932951470063f8d0" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>mutex_lock</name></member>
      <member refid="structDBusThreadFunctions_1a342ba12a619162a5b228903076b46a44" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>mutex_new</name></member>
      <member refid="structDBusThreadFunctions_1a334d478ec305b04f526537c131cd8e8a" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>mutex_unlock</name></member>
      <member refid="structDBusThreadFunctions_1a46a194147f5a2ec372a3d5c81a4f7dee" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>padding1</name></member>
      <member refid="structDBusThreadFunctions_1a3f2db0f1ca226fe240144632dbe84409" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>padding2</name></member>
      <member refid="structDBusThreadFunctions_1ade37a0867cfede69b5a0b62186df2054" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>padding3</name></member>
      <member refid="structDBusThreadFunctions_1a865535feb9efe4c0af66fdab7c9411d8" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>padding4</name></member>
      <member refid="structDBusThreadFunctions_1a8be6d85b7f162352efa5bb4a5663f44f" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>recursive_mutex_free</name></member>
      <member refid="structDBusThreadFunctions_1ae99179276be65fe4f701de307882dac5" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>recursive_mutex_lock</name></member>
      <member refid="structDBusThreadFunctions_1afd30fb78a3ca1064bc8c074a6a61361e" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>recursive_mutex_new</name></member>
      <member refid="structDBusThreadFunctions_1a0bdb8cd9b263bcde5a0548b16ccd0702" prot="public" virt="non-virtual"><scope>DBusThreadFunctions</scope><name>recursive_mutex_unlock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
